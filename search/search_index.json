{"config":{"lang":["zh"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"CS-BAOYAN-2024 (\u4e09\u4ee3\u76ee)","text":"<p>\u5168\u56fd\u6700\u5927\u975e\u5546\u4e1a\u7528\u7231\u4ea4\u6d41\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\uff08QQ\u7fa4\u53f7\uff1a943826679\uff09</p> <p></p> <p>\u5168\u56fd\u6700\u5927\u975e\u5546\u4e1a\u7528\u7231\u4ea4\u6d41\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa42\uff08QQ\u7fa4\u53f7\uff1a620876705\uff09</p> <p></p> <p>\u5168\u56fd\u6700\u5927\u975e\u5546\u4e1a\u7528\u7231\u4ea4\u6d41\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa43\u3010\u4e34\u65f6\u3011\uff08QQ\u7fa4\u53f7\uff1a612207580\uff09</p>"},{"location":"#contribution","title":"CONTRIBUTION","text":"<p>\u6211\u4eec\u6b63\u5728\u6536\u96c62020\u7ea7\u540c\u5b66\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff0c\u6b22\u8fce\u5927\u5bb6 Star &amp; Fork\uff01</p> <p>\u4e3a\u4e86\u80fd\u7ed9\u5b66\u5f1f\u5b66\u59b9\u4eec\u66f4\u8be6\u7ec6\u7684\u53c2\u8003\u4e0e\u5e2e\u52a9\uff0c\u73b0\u5728\u9762\u5411\u5168\u7fa4\u5f81\u96c6\u5927\u5bb6\u516c\u5f00\u5728\u793e\u4ea4\u5a92\u4f53\u5e73\u53f0\u7684\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u77e5\u4e4e\u3001CSDN \u7b49\u5747\u53ef\uff09</p> <p>\u719f\u6089 Github Pull requests \u7684\u540c\u5b66\u53ef\u4ee5\u76f4\u63a5\u628a\u81ea\u5df1\u7ecf\u9a8c\u8d34\u6dfb\u52a0\u4e86\u540e PR \u7ed9\u6211\u4eec\uff0c\u8bb0\u5f97\u4fdd\u8bc1\u7248\u672c\u4e0e\u6211\u7684\u4ed3\u5e93\u4e00\u81f4\u3002</p> <p>\u5bf9 PR \u4e0d\u719f\u6089\u7684\u540c\u5b66\uff0c\u53ef\u4ee5\u67e5\u9605\u7b2c\u4e00\u6b21\u53c2\u4e0e\u5f00\u6e90\u4e2d\u7684\u6d41\u7a0b\uff1b\u4e5f\u53ef\u4ee5\u8fdb\u7fa4\uff0c\u9009\u62e9\u628a\u7ecf\u9a8c\u8d34\u7f51\u7edc\u94fe\u63a5\u53d1\u81f3\u7fa4\u516c\u544a\u4e2d\u7684\u90ae\u7bb1\uff0c\u6211\u4eec\u4f1a\u4e4b\u540e\u7edf\u4e00\u6574\u7406\u3002\u8fdb\u7fa4\u540e\uff0c\u5982\u679c\u6709\u95ee\u9898\u53ef\u4ee5\u6309\u7167\u6a21\u677f\u8fdb\u884c\u63d0\u95ee</p> <p>\u5f53\u7136\uff0c\u5982\u679c\u4f60\u5bf9\u672c\u4ed3\u5e93\u7684\u4efb\u4f55\u677f\u5757\uff0c\u4f8b\u5982\u590d\u4e60\u8d44\u6599\u3001\u63a8\u8350\u8d44\u6599\u7b49\uff0c\u60f3\u8981\u8d21\u732e\u6216\u8005\u63d0\u5efa\u8bae\uff0c\u6211\u4eec\u4e5f\u5341\u5206\u6b22\u8fce PR \u548c Issue \u3002</p>"},{"location":"#warning","title":"WARNING","text":"<p>\u672c\u4ed3\u5e93\u7684\u8d44\u6599\u6765\u6e90\u7f51\u7edc\u53ca\u7fa4\u53cb\u8d21\u732e\uff0c\u5982\u679c\u4f60\u8ba4\u4e3a\u672c\u4ed3\u5e93\u7684\u4efb\u4f55\u8d44\u6599\u6709\u8457\u4f5c\u6743\u3001\u5f15\u7528\u4e0a\u7684\u4e89\u8bae\uff0c\u6b22\u8fce\u5411\u6211\u4eec\u63d0\u51fa Issue \u6211\u4eec\u4f1a\u53ca\u65f6\u6574\u6539\u3002</p> <p>2\u7fa4\u662f\u6269\u5145\u5bb9\u91cf\u7684\u4f5c\u7528\uff0c\u8bf7\u52a0\u51651\u7fa4\u7684\u7fa4\u53cb\u522b\u52a0\u51652\u7fa4\uff0c\u5982\u679c1\u7fa4\u65e0\u6cd5\u52a0\u5165\u8bf4\u660e\u5bb9\u91cf\u6ee1\u4e86\uff0c\u8bf7\u52a0\u51652\u7fa4\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/","title":"\u5176\u4ed6\u683c\u5f0f\u7684\u4fdd\u7814\u771f\u9898\u94fe\u63a5","text":"<ul> <li>2020\u54c8\u6df1\u673a\u8003\u7b2c\u4e00\u6b21.pdf</li> <li>2020\u54c8\u6df1\u673a\u8003\u7b2c\u4e8c\u6b21.pdf</li> <li>2020\u5e74\u590d\u65e6\u590f\u4ee4\u8425\u7f16\u7a0b\u80fd\u529b\u6478\u5e95\u8bd5\u9898.pdf</li> <li>2021\u5e74\u5317\u90ae\u8ba1\u7b97\u673a\u5b66\u96622\u7ec4\u590f\u4ee4\u8425\u673a\u8003.docx</li> <li>2021\u5e74\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u7cfb\u672c\u79d1\u751f\u5f00\u653e\u65e57\u67088\u65e5\u7ebf\u4e0a\u8003\u6838.pdf</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/","title":"\u6e05\u534e\u5927\u5b66 2021 \u5e74\u4e5d\u63a8\u673a\u8bd5","text":""},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#1","title":"1\u3001\u552e\u8d27\u673a","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1.0 \u79d2</p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MiB</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6e05\u534e\u5927\u5b66\u7684\u81ea\u52a8\u552e\u8d27\u673a\u4e00\u5171\u6709 \ud835\udc5b \u79cd\u996e\u6599\u51fa\u552e\uff0c\u6bcf\u79cd\u996e\u6599\u6709\u81ea\u5df1\u7684\u552e\u4ef7\uff0c\u5e76\u5728\u552e\u8d27\u673a\u4e0a\u5404\u6709\u4e00\u4e2a\u51fa\u552e\u53e3\u3002\u8d2d\u4e70\u7b2c \ud835\udc56 \u79cd\u996e\u6599\u65f6\uff0c\u53ef\u4ee5\u5728\u7b2c \ud835\udc56 \u4e2a\u51fa\u552e\u53e3\u652f\u4ed8 \ud835\udc4e\ud835\udc56 \u7684\u4ef7\u683c\uff0c\u552e\u8d27\u673a\u4fbf\u4f1a\u5728\u4e0b\u65b9\u7684\u51fa\u8d27\u5904\u653e\u51fa\u5bf9\u5e94\u7684\u996e\u6599\u3002</p> <p>\u53c8\u5230\u4e86\u6e05\u51c9\u7684\u590f\u65e5\uff0c\u81ea\u52a8\u552e\u8d27\u673a\u4e3a\u6bcf\u79cd\u996e\u6599\u5404\u8fdb\u8d27\u4e861 \u74f6\u5b58\u50a8\u5728\u5176\u4e2d\uff0c\u4f9b\u540c\u5b66\u8d2d\u4e70\u3002\u4f46\u662f\uff0c\u81ea\u52a8\u552e\u8d27\u673a\u5374\u51fa\u73b0\u4e86\u4e00\u4e9b\u6545\u969c\uff0c\u5b83\u6709\u53ef\u80fd\u4f1a\u51fa\u8d27\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u51fa\u552e\u53e3\u7684\u996e\u6599\u3002</p> <p>\u5bf9\u4e8e\u7b2c \ud835\udc56 \u4e2a\u51fa\u552e\u53e3\uff0c\u652f\u4ed8 \ud835\udc4e\ud835\udc56 \u7684\u4ef7\u683c\u8d2d\u4e70\u540e\uff0c\u5982\u679c\u996e\u6599 \ud835\udc56 \u4e0e\u996e\u6599 \ud835\udc4f\ud835\udc56 \u90fd\u6709\u5b58\u8d27\uff0c\u6709 \ud835\udc5d\ud835\udc56 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 \ud835\udc56 \uff0c\u6709 1\u2212\ud835\udc5d\ud835\udc56 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 \ud835\udc4f\ud835\udc56 \u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6709\u5b58\u8d27\uff0c\u53e6\u4e00\u4e2a\u5df2\u7ecf\u6ca1\u6709\u5b58\u8d27\uff0c\u5219\u5c06\u51fa\u8d27\u6709\u5b58\u8d27\u7684\u90a3\u4e00\u79cd\u996e\u6599\u3002\u5982\u679c\u4e24\u79cd\u996e\u6599\u90fd\u6ca1\u6709\u5b58\u8d27\uff0c\u552e\u8d27\u673a\u5c06\u4e0d\u4f1a\u51fa\u8d27\u4efb\u4f55\u996e\u6599\u5e76\u53d1\u51fa\u8b66\u62a5\u3002**\u5373\u4fbf\u6700\u540e\u4f60\u6ca1\u6709\u83b7\u5f97\u4efb\u4f55\u996e\u6599\uff0c\u4e5f\u9700\u8981\u652f\u4ed8 \ud835\udc4e\ud835\udc56 \u7684\u4ef7\u683c ** \u3002</p> <p>\u957f\u9888\u9e7f\u4e0b\u697c\u6765\u5230\u8fd9\u53f0\u552e\u8d27\u673a\u524d\uff0c\u5e0c\u671b\u80fd\u4e70\u5230\u6700\u8fd1\u706b\u7206\u5168\u7f51\u7684\u996e\u6599 \ud835\udc65 \uff0c\u6b64\u65f6\u552e\u8d27\u673a\u4e2d \ud835\udc5b \u79cd\u996e\u6599\u90fd\u5b58\u8d27\u6709 1 \u74f6\u3002\u7531\u4e8e\u4ed6\u77e5\u9053\u552e\u8d27\u673a\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u51b3\u5b9a\u91c7\u53d6\u8fd9\u6837\u7684\u7b56\u7565\u6765\u8d2d\u4e70\uff1a</p> <ul> <li>\u5728 \ud835\udc5b \u4e2a\u51fa\u552e\u53e3\u4e2d\u7b49\u6982\u7387\u9009\u62e9\u4e00\u4e2a\u51fa\u552e\u53e3 \ud835\udc60 \u5f00\u59cb\u8d2d\u4e70\uff0c\u652f\u4ed8\u8fd9\u4e2a\u51fa\u552e\u53e3\u7684\u4ef7\u683c \ud835\udc4e\ud835\udc60 \u5e76\u5f97\u5230\u51fa\u8d27\u3002</li> <li>\u5f53\u5f97\u5230\u60f3\u8981\u7684\u996e\u6599 \ud835\udc65 \u65f6\uff0c\u505c\u6b62\u8d2d\u4e70\u6d41\u7a0b\uff0c\u6ee1\u610f\u6b22\u559c\u7684\u79bb\u53bb\u3002</li> <li>\u5f53\u5f97\u5230\u4e0d\u60f3\u8981\u7684\u996e\u6599 \ud835\udc66 \u65f6\uff0c\u7ee7\u7eed\u5728\u7b2c \ud835\udc66 \u4e2a\u652f\u4ed8\u53e3\u8d2d\u4e70\uff0c\u652f\u4ed8 \ud835\udc4e\ud835\udc66 \u7684\u4ef7\u683c\u5e76\u7b49\u5f85\u51fa\u8d27\u3002</li> <li>\u5f53\u552e\u8d27\u673a\u53d1\u51fa\u8b66\u62a5\u65f6\uff0c\u505c\u6b62\u8d2d\u4e70\u6d41\u7a0b\uff0c\u7070\u5fc3\u4e27\u6c14\u7684\u79bb\u53bb\u3002</li> </ul> <p>\u73b0\u5728\u4ed6\u5e0c\u671b\u4f60\u544a\u8bc9\u4ed6\uff0c\u4ed6\u8fd9\u4e00\u6b21\u8d2d\u4e70\u8fc7\u7a0b\u671f\u671b\u652f\u4ed8\u7684\u4ef7\u94b1\u6570\u91cf\u662f\u591a\u5c11\uff1f</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \ud835\udc5b,\ud835\udc65\u3002</p> <p>\u63a5\u4e0b\u6765 \ud835\udc5b \u884c\u6bcf\u884c\u4e09\u4e2a\u6570\uff0c\u5176\u4e2d\u7b2c \ud835\udc56 \u884c\u8868\u793a \ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56,\ud835\udc5d\ud835\udc56\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u4e00\u884c\u4e00\u4e2a\u5b9e\u6570\u8868\u793a\u7b54\u6848\uff0c\u8868\u793a\u957f\u9888\u9e7f\u6309\u4ed6\u7684\u7b56\u7565\u4e70\u6c34\u671f\u671b\u652f\u4ed8\u7684\u4ef7\u94b1\u3002</p> <p>\u8bb0\u7b54\u6848\u4e3a \ud835\udc4e\uff0c\u800c\u4f60\u7684\u8f93\u51fa\u4e3a \ud835\udc4f\uff0c\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53 |\ud835\udc4e\u2212\ud835\udc4f|&lt;10\u22126 \u65f6\u6211\u4eec\u8ba4\u4e3a\u4f60\u7684\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_4","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2 2\n8 2 0.90\n7 1 0.40\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_5","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>13.500000000\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_6","title":"\u6837\u4f8b\u89e3\u91ca","text":"<p>\u552e\u8d27\u673a\u91cc\u996e\u6599 1 \u4e0e\u996e\u6599 2 \u5404\u6709\u4e00\u74f6\uff0c\u4e14\u5f53\u4e24\u74f6\u90fd\u8fd8\u6709\u5b58\u8d27\u65f6\uff0c\u5728\u7b2c 1 \u4e2a\u51fa\u552e\u53e3\u6709 0.1 \u7684\u6982\u7387\u4e70\u5230\u996e\u6599 2 \uff0c\u5728\u7b2c 2 \u4e2a\u51fa\u552e\u53e3\u6709 0.6 \u7684\u6982\u7387\u4e70\u5230\u996e\u6599 1 \u3002</p> <ul> <li>\u957f\u9888\u9e7f\u67090.5\u7684\u6982\u7387\u521d\u59cb\u9009\u62e9\u7b2c1\u4e2a\u51fa\u552e\u53e3\u5f00\u59cb\u8d2d\u4e70\uff0c\u5e76\u652f\u4ed88\u5143\u3002</li> <li>\u6709 0.1 \u7684\u6982\u7387\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 8 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.05 \u3002</li> <li>\u6709 0.9 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 1 \uff0c\u5219\u957f\u9888\u9e7f\u4f1a\u518d\u652f\u4ed8 8 \u5143\u91cd\u65b0\u4ece\u7b2c 1 \u4e2a\u51fa\u552e\u53e3\u8d2d\u4e70\u996e\u6599\u3002\u7531\u4e8e\u996e\u6599 1 \u5df2\u552e\u7a7a\uff0c\u7b2c\u4e8c\u6b21\u8d2d\u4e70\u65f6\u5fc5\u5b9a\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 16 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.45 \u3002</li> <li>\u957f\u9888\u9e7f\u67090.5\u7684\u6982\u7387\u521d\u59cb\u9009\u62e9\u7b2c2\u4e2a\u51fa\u552e\u53e3\u5f00\u59cb\u8d2d\u4e70\uff0c\u5e76\u652f\u4ed87\u5143\u3002</li> <li>\u6709 0.4 \u7684\u6982\u7387\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 7 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.2 \u3002</li> <li>\u6709 0.6 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 1 \uff0c\u5219\u957f\u9888\u9e7f\u4f1a\u518d\u652f\u4ed8 8 \u5143\u91cd\u65b0\u4ece\u7b2c 1 \u4e2a\u51fa\u552e\u53e3\u8d2d\u4e70\u996e\u6599\u3002\u7531\u4e8e\u996e\u6599 1 \u5df2\u552e\u7a7a\uff0c\u7b2c\u4e8c\u6b21\u8d2d\u4e70\u65f6\u5fc5\u5b9a\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 15 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.3 \u3002</li> </ul> <p>\u4e8e\u662f\u671f\u671b\u652f\u4ed8\u7684\u4ef7\u94b1\u4e3a 8\u00d70.05+16\u00d70.45+7\u00d70.2+15\u00d70.3=13.5</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_7","title":"\u5b50\u4efb\u52a1","text":"<p>\u4fdd\u8bc1 \ud835\udc5b\u22642000 \uff0c 1\u2264\ud835\udc4f\ud835\udc56\u2264\ud835\udc5b , \ud835\udc4f\ud835\udc56\u2260\ud835\udc56 , 0\u2264\ud835\udc4e\ud835\udc56\u2264100 \uff0c0\u2264\ud835\udc5d\ud835\udc56\u22641 \uff0c\u4e14 \ud835\udc5d\ud835\udc56 \u4e0d\u8d85\u8fc7\u4e24\u4f4d\u5c0f\u6570\u3002</p> <p>\u5b50\u4efb\u52a1 1\uff0850\u5206\uff09\uff1a\ud835\udc5b\u226410</p> <p>\u5b50\u4efb\u52a1 2\uff0830\u5206\uff09\uff1a\ud835\udc5d\ud835\udc56=0</p> <p>\u5b50\u4efb\u52a1 3\uff0820\u5206\uff09\uff1a\u65e0\u7279\u6b8a\u9650\u5236</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#2","title":"2\u3001\u6c34\u6ef4","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 2.0 \u79d2</p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MiB</p> <p>\u76f8\u5173\u6587\u4ef6\uff1a \u9898\u76ee\u76ee\u5f55</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_8","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6e38\u620f\u3002</p> <p>\u5728\u4e00\u4e2a \ud835\udc5b\u00d7\ud835\udc5a \u7684\u68cb\u76d8\u4e0a\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u4e2d\u90fd\u6709\u4e00\u4e9b\u6c34\u6ef4\u3002</p> <p>\u73a9\u5bb6\u7684\u64cd\u4f5c\u662f\uff0c\u5728\u4e00\u4e2a\u683c\u5b50\u4e2d\u52a0\u4e00\u6ef4\u6c34\u3002</p> <p>\u5f53\u4e00\u4e2a\u683c\u5b50\u4e2d\u7684\u6c34\u6ef4\u6570\u8d85\u8fc7\u4e86 4\uff0c\u8fd9\u4e00\u5927\u6ef4\u6c34\u5c31\u4f1a\u56e0\u683c\u5b50\u627f\u8f7d\u4e0d\u4f4f\u800c\u5411\u5916\u6269\u6563\u3002\u6269\u6563\u7684\u89c4\u5219\u662f\u8fd9\u6837\u7684\uff1a</p> <p>\u8fd9\u4e2a\u683c\u5b50\u4e2d\u7684\u6c34\u6ef4\u4f1a\u6d88\u5931\uff0c\u7136\u540e\u5206\u522b\u5411\u4e0a\u3001\u5de6\u3001\u4e0b\u3001\u53f3 4 \u4e2a\u65b9\u5411\u53d1\u5c04\u4e00\u4e2a\u6c34\u6ef4\u3002\u5982\u679c\u6c34\u6ef4\u78b0\u5230\u4e00\u4e2a\u6709\u6c34\u7684\u683c\u5b50\uff0c\u5c31\u4f1a\u8fdb\u5165\u8fd9\u4e2a\u683c\u5b50\u3002\u5426\u5219\u6c34\u6ef4\u4f1a\u7ee7\u7eed\u79fb\u52a8\u76f4\u5230\u5230\u8fbe\u68cb\u76d8\u8fb9\u754c\u540e\u6d88\u5931\u3002\u6269\u6563\u540e\uff0c\u6c34\u6ef4\u8fdb\u5165\u65b0\u7684\u683c\u5b50\u53ef\u80fd\u5bfc\u81f4\u8be5\u683c\u5b50\u7684\u6c34\u6ef4\u6570\u4e5f\u8d85\u8fc7 4 \uff0c\u5219\u4f1a\u7acb\u5373\u5f15\u53d1\u8fd9\u4e2a\u683c\u5b50\u7684\u6269\u6563\u3002\u6211\u4eec\u89c4\u5b9a\uff0c\u6bcf\u4e2a\u683c\u5b50\u6309\u9006\u65f6\u9488\u987a\u5e8f\u4ece\u4e0a\u65b9\u5411\u5f00\u59cb\uff0c\u9012\u5f52\u5904\u7406\u5b8c\u6bcf\u4e00\u4e2a\u65b9\u5411\u7684\u6269\u6563\u4ee5\u53ca\u5176\u5f15\u53d1\u7684\u8fde\u9501\u53cd\u5e94\uff0c\u518d\u5904\u7406\u4e0b\u4e00\u4e2a\u65b9\u5411\u7684\u6269\u6563\u3002</p> <p>\u7ed9\u5b9a\u68cb\u76d8\u7684\u521d\u59cb\u72b6\u6001\u548c\u73a9\u5bb6\u7684\u64cd\u4f5c\uff0c\u6c42\u6700\u540e\u6c34\u6ef4\u7684\u5206\u5e03\u60c5\u51b5\u3002</p> <p>\u7531\u4e8e\u628a\u6c34\u6ef4\u5728\u4e00\u4e2a\u7a7a\u683c\u770b\u8d77\u6765\u7528\u5904\u4e0d\u5927\uff0c\u6240\u4ee5\u4fdd\u8bc1\u6240\u6709\u7684\u73a9\u5bb6\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u9009\u62e9\u7a7a\u683c\u3002</p> <p>\u63d0\u793a\uff1a\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u6c34\u6ef4\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u7b2c\u4e00\u4e2a\u6c34\u6ef4\u7684\u4f4d\u7f6e\uff0c\u6269\u6563\u65f6\u6839\u636e\u89c4\u5219\u6a21\u62df\uff0c\u5e76\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u7ef4\u62a4\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_9","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u56db\u4e2a\u6574\u6570 \ud835\udc5b,\ud835\udc5a,\ud835\udc50,\ud835\udc47\u3002</p> <p>\u63a5\u4e0b\u6765 \ud835\udc50 \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570 \ud835\udc65\ud835\udc56,\ud835\udc66\ud835\udc56,\ud835\udc4e\ud835\udc56\uff0c\u8868\u793a\u521d\u59cb\u68cb\u76d8\u4e0a\u7b2c \ud835\udc65\ud835\udc56 \u884c \ud835\udc66\ud835\udc56 \u5217\u6709 \ud835\udc4e\ud835\udc56 \u4e2a\u6c34\u6ef4\u3002</p> <p>\u63a5\u4e0b\u6765 \ud835\udc47 \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \ud835\udc62\ud835\udc56,\ud835\udc63\ud835\udc56\uff0c\u8868\u793a\u5728\u7b2c \ud835\udc62\ud835\udc56 \u884c \ud835\udc63\ud835\udc56 \u5217\u653e\u5165\u4e00\u4e2a\u6c34\u6ef4\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_10","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u8f93\u51fa \ud835\udc47 \u52a0\u82e5\u5e72\u884c\u3002</p> <p>\u524d \ud835\udc47 \u884c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u7b2c \ud835\udc56 \u884c\u8868\u793a\u5728\u7b2c \ud835\udc56 \u6b21\u64cd\u4f5c\u540e\u6269\u6563\u7684\u6c34\u6ef4\u6570\u3002\u82e5\u6ca1\u6709\u6269\u6563\u8f93\u51fa 0\u3002</p> <p>\u6700\u540e\u82e5\u5e72\u884c\uff08\u53ef\u80fd\u662f 0 \u884c\uff09\u8868\u793a\u68cb\u76d8\u4e0a\u6c34\u6ef4\u7684\u5206\u5e03\u60c5\u51b5\u3002\u7531\u4e0a\u81f3\u4e0b\uff0c\u7531\u5de6\u81f3\u53f3\u8f93\u51fa\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570\u8868\u793a\u884c\u53f7\u3001\u5217\u53f7\u3001\u6c34\u6ef4\u6570\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_11","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 4 12 1\n1 2 1\n1 3 2\n2 1 1\n2 4 1\n3 1 1\n3 4 1\n4 2 1\n4 3 1\n2 2 4\n2 3 4\n3 2 4\n3 3 3\n2 2\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_12","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n1 2 3\n1 3 4\n2 1 3\n2 4 2\n3 1 3\n3 4 2\n4 2 2\n4 3 2\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_13","title":"\u6837\u4f8b\u89e3\u91ca","text":"<p>\u6574\u4e2a\u8fc7\u7a0b\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u8868\u793a\u3002</p> <p>\u5b57\u6bcd\u8868\u793a\u8be5\u683c\u5b50\u5373\u5c06\u53d1\u5c04\u6c34\u6ef4\u7684\u65b9\u5411\u3002U\uff1a\u4e0a\uff1bD\uff1a\u4e0b\uff1bL\uff1a\u5de6\uff1bR\uff1a\u53f3\u3002</p> <p>\u9ec4\u8272\u683c\u5b50\u8868\u793a\u5373\u5c06\u53d1\u5c04\u6c34\u6ef4\u7684\u683c\u5b50\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_14","title":"\u5b50\u4efb\u52a1","text":"<p>\u4fdd\u8bc1 1\u2264\ud835\udc5b,\ud835\udc5a\u2264351493\uff0c0\u2264\ud835\udc50\u2264750000\uff0c0\u2264\ud835\udc47\u2264500000\u3002</p> <p>\u4fdd\u8bc1 1\u2264\ud835\udc65\ud835\udc56,\ud835\udc62\ud835\udc56\u2264\ud835\udc5b,1\u2264\ud835\udc66\ud835\udc56,\ud835\udc63\ud835\udc56\u2264\ud835\udc5a,1\u2264\ud835\udc4e\ud835\udc56\u22644\u3002</p> <p>\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u7684 (\ud835\udc65\ud835\udc56,\ud835\udc66\ud835\udc56)\u3002</p> <p>\u5b50\u4efb\u52a1 1\uff0817\u5206\uff09\uff1a\ud835\udc5b,\ud835\udc5a\u2264100</p> <p>\u5b50\u4efb\u52a1 2\uff0824\u5206\uff09\uff1a\ud835\udc5b,\ud835\udc5a\u22642000</p> <p>\u5b50\u4efb\u52a1 3\uff0824\u5206\uff09\uff1a\ud835\udc50\u2264105</p> <p>\u5b50\u4efb\u52a1 4\uff0835\u5206\uff09\uff1a\u65e0\u7279\u6b8a\u6027\u8d28</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#3phi","title":"3\u3001Phi\u7684\u6e38\u620f","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1.5 \u79d2</p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MiB</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_15","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Picar \u548c Roman \u662f\u4e24\u4e2a\u975e\u5e38\u559c\u6b22\u73a9\u5404\u79cd\u6e38\u620f\u7684\u8d4c\u5f92\u3002\u8fd9\u4e00\u5929\uff0c\u4ed6\u4eec\u53c8\u53d1\u73b0\u4e86\u4e00\u79cd\u65b0\u7684\u6570\u5b57\u6e38\u620f\uff0c\u540d\u53eb \ud835\udf11 \u7684\u6e38\u620f\uff08Phigames\uff09\u3002</p> <p>\ud835\udf11 \u7684\u6e38\u620f\u662f\u53cc\u4eba\u6e38\u620f\uff0c\u6bcf\u5c40\u6e38\u620f\u7531\u4efb\u610f\u7684\u4e00\u4e2a\u6b63\u6574\u6570 \ud835\udc41 \u5f00\u59cb\uff0c\u7531\u4e24\u4eba\u8f6e\u6d41\u5bf9\u5f53\u524d\u7684\u6570\u5b57\u8fdb\u884c\u64cd\u4f5c\u3002\u8f6e\u5230\u5176\u4e2d\u4efb\u610f\u4e00\u65b9\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e09\u79cd\u9009\u62e9\uff1a</p> <ol> <li>\u5927\u558a\u201c\ud835\udf11:1\uff01\u201d\u5e76\u5c06\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b \u53d8\u4e3a \ud835\udf11(\ud835\udc5b)\uff1b</li> <li>\u5927\u558a\u201c\ud835\udf11:2\uff01\u201d\u5e76\u5c06\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b \u53d8\u4e3a \ud835\udf11(2\ud835\udc5b)\uff1b</li> <li>\u5927\u558a\u201c\ud835\udf11:\ud835\udc3e\uff01\u201d\u5e76\u5c06\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b \u53d8\u4e3a \ud835\udf11(\ud835\udc5b\u2212\ud835\udc3e)\uff0c\u5176\u4e2d \ud835\udc3e \u662f\u4e00\u4e2a\u53cc\u65b9\u5728\u5f00\u59cb\u6e38\u620f\u4e4b\u524d\u7ea6\u5b9a\u597d\u7684\u6b63\u6574\u6570\u3002</li> </ol> <p>\u5176\u4e2d\uff0c\ud835\udf11(\ud835\udc5b) \u8868\u793a\u7684\u662f\u5728 1 \u5230 \ud835\udc5b \u8fd9 \ud835\udc5b \u4e2a\u6b63\u6574\u6570\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u6b63\u6574\u6570\u4e0e \ud835\udc5b \u4e92\u8d28\uff0c\u5982 \ud835\udf11(1)=1\uff0c\ud835\udf11(4)=2\uff0c\ud835\udf11(10)=4\u3002\u6839\u636e\u8fd9\u4e00\u5b9a\u4e49\u53ef\u77e5\uff0c\ud835\udf11(\ud835\udc5b) \u7684\u5b9a\u4e49\u57df\u662f \u2115\u2217\uff0c\u6240\u4ee5\u5982\u679c\u9009\u62e9\u7b2c 3 \u79cd\u64cd\u4f5c\u201c\ud835\udf11:\ud835\udc3e\uff01\u201d\uff0c\u9700\u8981\u4fdd\u8bc1\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b&gt;\ud835\udc3e\u3002</p> <p>\u4e24\u540d\u73a9\u5bb6\u8f6e\u6d41\u64cd\u4f5c\uff0c\u5982\u679c\u8c01\u5728\u8fdb\u884c\u64cd\u4f5c\u4e4b\u540e\u5f97\u5230\u4e86\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u8c01\u5c31\u8f93\u6389\u4e86\u672c\u5c40\u6e38\u620f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u73a9\u5bb6 A \u5bf9\u5f53\u524d\u7684\u6570\u5b57 1 \u9009\u62e9\u4e86\u64cd\u4f5c 1 \u201c\ud835\udf11:1\uff01\u201d\uff0c\u7531\u4e8e \ud835\udf11(1)=1 \u662f\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u73a9\u5bb6 A \u8f93\u6389\u4e86\u672c\u5c40\u6e38\u620f\uff0c\u5bf9\u624b\u83b7\u80dc\u3002</p> <p>\ud835\udf11 \u7684\u6e38\u620f\u8003\u9a8c\u4e86\u73a9\u5bb6\u7684\u5fc3\u7b97\u80fd\u529b\u548c\u903b\u8f91\u63a8\u7406\u80fd\u529b\u3002\u53ef\u60dc\uff0c\u7531\u4e8e Picar \u548c Roman \u8db3\u591f\u806a\u660e\uff0c\u53ea\u8981\u6307\u5b9a\u4e00\u4e2a \ud835\udc3e \u548c\u6700\u5f00\u59cb\u7684\u6570\u5b57 \ud835\udc41\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u662f\u5148\u624b\u8fd8\u662f\u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u3002\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2a\u786e\u5b9a\u7684 \ud835\udc3e\uff0c\u4ee5 \ud835\udc41 \u5f00\u59cb\u6e38\u620f\u65f6\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u5219\u79f0\u8fd9\u4e2a \ud835\udc41 \u4e3a\u5148\u624b\u5fc5\u80dc\u6001\uff1b\u5426\u5219\u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u79f0 \ud835\udc41 \u4e3a\u540e\u624b\u5fc5\u80dc\u6001\u3002\u4e3a\u4e86\u4f7f\u5f97\u8fd9\u4e2a\u6e38\u620f\uff08\u5bf9\u4ed6\u4eec\u6765\u8bf4\uff09\u66f4\u6709\u8da3\uff0c\u4ed6\u4eec\u51b3\u5b9a\u5bf9\u6e38\u620f\u8fdb\u884c\u6269\u5c55\uff1a</p> <ul> <li>\u73a9\u5bb6\u5148\u6307\u5b9a \ud835\udc3e\uff0c\u5e76\u9009\u62e9\u4e24\u4e2a\u6b63\u6574\u6570 \ud835\udc3f,\ud835\udc45\uff0c\u7531\u7cfb\u7edf\u5728 [\ud835\udc3f,\ud835\udc45] \u4e2d\u7684\u5148\u624b\u5fc5\u80dc\u6001\u4e2d\u968f\u673a\u6311\u9009\u4e00\u4e2a \ud835\udc5f \u4f5c\u4e3a\u53f3\u7aef\u70b9\uff1b</li> <li>\u7531\u540e\u624b\u9009\u62e9\u4e00\u4e2a\u6b63\u6574\u6570\u5de6\u7aef\u70b9 \ud835\udc59 \uff0c\u9700\u8981\u4fdd\u8bc1 \ud835\udc59\u2264\ud835\udc5f\uff1b</li> <li>\u5f00\u59cb\u4e00\u5c40\u6e38\u620f\u65f6\uff0c\u7cfb\u7edf\u4ece [\ud835\udc59,\ud835\udc5f] \u4e2d\u7b49\u6982\u7387\u6311\u9009\u4e00\u4e2a\u6b63\u6574\u6570 \ud835\udc41 \uff0c\u4f5c\u4e3a\u6e38\u620f\u5f00\u59cb\u65f6\u7531\u5148\u624b\u64cd\u4f5c\u7684\u6570\u5b57\u3002</li> </ul> <p>\u5c3d\u7ba1 Picar \u548c Roman \u8db3\u591f\u806a\u660e\uff0c\u8ba1\u7b97\u4fee\u6539\u540e\u7684\u6e38\u620f\u5bf9\u4ed6\u4eec\u6765\u8bf4\u4e5f\u9700\u8981\u82b1\u8d39\u4e0d\u5c11\u7684\u65f6\u95f4\u3002\u4e8e\u662f\uff0c\u4ed6\u4eec\u627e\u5230\u4e86\u4f60\uff0c\u60f3\u8ba9\u4f60\u5e2e\u5fd9\u8ba1\u7b97\u4e00\u4e0b\u4fee\u6539\u540e\u7684\u6e38\u620f\u7684\u5e73\u8861\u6027\u3002\u5373\uff1a\u7ed9\u5b9a\u53c2\u6570 \ud835\udc3f,\ud835\udc45,\ud835\udc3e\uff0c\u6c42\u540e\u624b\u5bf9\u4e8e\u4efb\u610f\u7684 \ud835\udc5f \u80fd\u9009\u51fa\u6700\u4f18\u7684 \ud835\udc59 \u4f7f\u5f97\u540e\u624b\u80dc\u7387\u6700\u5927\u65f6\uff0c\u5148\u624b\u7684\u5e73\u5747\u80dc\u7387\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_16","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u8f93\u5165\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e09\u4e2a\u6b63\u6574\u6570 \ud835\udc3f,\ud835\udc45,\ud835\udc3e\uff0c\u542b\u4e49\u5982\u9898\u76ee\u63cf\u8ff0\u6240\u793a\u3002\u4fdd\u8bc1 \ud835\udc3f\u2264\ud835\udc45\uff0c\u4e14\u5728 [\ud835\udc3f,\ud835\udc45] \u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5148\u624b\u5fc5\u80dc\u6001\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_17","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u8f93\u51fa\u4e00\u4e2a\u5b9e\u6570\uff0c\u8868\u793a\u5728\u7ed9\u5b9a\u7684\u53c2\u6570 \ud835\udc3f,\ud835\udc45,\ud835\udc3e \u4e0b\uff0c\u4fee\u6539\u540e\u7684\u6e38\u620f\u7684\u5148\u624b\u5e73\u5747\u80dc\u7387\u3002</p> <p>\u8bb0\u7b54\u6848\u4e3a \ud835\udc4e\uff0c\u800c\u4f60\u7684\u8f93\u51fa\u4e3a \ud835\udc4f\uff0c\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53 |\ud835\udc4e\u2212\ud835\udc4f|&lt;10\u22126 \u65f6\u6211\u4eec\u8ba4\u4e3a\u4f60\u7684\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#1_1","title":"\u6837\u4f8b1\u8f93\u5165","text":"<pre><code>1 10 3\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#1_2","title":"\u6837\u4f8b1\u8f93\u51fa","text":"<pre><code>0.533333333333333333\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#1_3","title":"\u6837\u4f8b1\u89e3\u91ca","text":"<p>\u6b64\u65f6 2,4,5,7,9,10 \u4e3a\u5148\u624b\u5fc5\u80dc\u6001\uff0c1,3,6,8 \u4e3a\u540e\u624b\u5fc5\u80dc\u6001\u3002</p> <ul> <li>\ud835\udc5f=2 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 1\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=4 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 3\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=5 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 1\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 3/5\uff1b</li> <li>\ud835\udc5f=7 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 6\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=9 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 8\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=10 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 6\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 3/5\u3002</li> </ul> <p>\u6545\u5148\u624b\u7684\u5e73\u5747\u80dc\u7387\u4e3a (1/2+1/2+3/5+1/2+1/2+3/5)/6=8/15\u22480.5333\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#2_1","title":"\u6837\u4f8b2\u8f93\u5165","text":"<pre><code>2021 5000 0\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#2_2","title":"\u6837\u4f8b2\u8f93\u51fa","text":"<pre><code>0.391970630667343944\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#3","title":"\u6837\u4f8b3\u8f93\u5165","text":"<pre><code>214 7483648 57721\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#3_1","title":"\u6837\u4f8b3\u8f93\u51fa","text":"<pre><code>0.490802831707061571\n</code></pre>"},{"location":"%E4%BF%9D%E7%A0%94%E7%9C%9F%E9%A2%98/%E6%B8%85%E5%8D%8E2021%E4%B9%9D%E6%8E%A8%E6%9C%BA%E8%AF%95/#_18","title":"\u5b50\u4efb\u52a1","text":"<p>\u5bf9\u4e8e 100 \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 1\u2264\ud835\udc3f\u2264\ud835\udc45\u2264107,0\u2264\ud835\udc3e\u2264107\u3002</p> <p>\u5177\u4f53\u7684\u6d4b\u8bd5\u70b9\u5206\u5e03\u89c1\u4e0b\u8868\uff1a</p> \u6d4b\u8bd5\u70b9 \ud835\udc3f,\ud835\udc45\u2264 \ud835\udc3e \u7279\u6b8a\u6027\u8d28 1 6 &lt;\ud835\udc45 \u65e0 2 10 3 16 4 18 5 1000 6 2000 7 3000 8 5000 9 105 \ud835\udc45\u2212\ud835\udc3f\u226499 10 106 \ud835\udc45\u2212\ud835\udc3f\u22649 11 5\u00d7106 =0 12 &lt;\ud835\udc45 13 105 \u65e0 14 15 16 106 =0 17 &lt;\ud835\udc45 18 107 \ud835\udc3f=\ud835\udc45 19 \u65e0 20"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/","title":"Index","text":"<p>\u8fd9\u662f\u5927\u4e09\u540c\u5b66\u53c2\u52a0\u590f\u4ee4\u8425\u548c\u4e5d\u6708\u4efd\u590d\u8bd5\u7684\u4e00\u4e9b\u535a\u5ba2\u6c47\u603b\u3002\u5927\u5bb6\u60f3\u7740\u8981\u628a\u8fd9\u6b21\u5b9d\u8d35\u7684\u590f\u4ee4\u8425\u7ecf\u5386\u8bb0\u5f55\u4e00\u4e0b\uff0c\u597d\u7ed9\u5b66\u5f1f\u5b66\u59b9\u4e00\u4e2a\u53c2\u8003\u3002\u5b66\u5f1f\u5b66\u59b9\u4eec\u53ef\u4ee5\u7ed3\u5408\u81ea\u8eab\u60c5\u51b5\uff0c\u5927\u6982\u4e86\u89e3\u4e00\u4e0b\u4fdd\u7814\u6d41\u7a0b\uff0c\u90e8\u5206\u5b66\u6821\u4fdd\u7814\u8003\u6838\u8981\u6c42\uff0c\u4ece\u800c\u5c11\u8d70\u4e00\u4e9b\u5f2f\u8def\uff0c\u53bb\u5230\u81ea\u5df1\u7406\u60f3\u4e2d\u7684\u5b66\u6821\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2023","title":"2023\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@Zhikang\u76842023\u5e74(2024\u5c4a)CS\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab/\u6750\u6599\u51c6\u5907|\u4e0a\u5cb8\u4e0a\u4ea4</li> <li>@Jason\u7684\u56db\u975e\u4eba\u7684\u4fdd\u7814\u4e4b\u8def\uff0c2023\uff082024\u5c4a\uff09\u56db\u975e\u8ba1\u7b97\u673a\u7684\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u4e2d\u79d1\u9662\u8ba1\u7b97\u6240\u3001\u4e2d\u79d1\u5927\u5148\u7814\u9662\u3001\u53a6\u5927\u3001\u897f\u7535\u7b49\uff09</li> <li>@murmure\u768424\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u8bb0\u5f55 | ai\u8fb9\u7f18\u4eba | \u4e2d\u79d1\u9662\u3001\u4eba\u5927\u3001pjlab\u7b49</li> <li>@battleship\u76842023\u5e74\u4f4erk\u65e0\u4ea7\u51fa\u5f31\u7ade\u8d5b\u7684\u8de8\u4fdd\u8ba1\u7b97\u673a\u7ecf\u5386\uff08\u6e05\u534e\u3001\u4eba\u5927\u4fe1\u9662\u3001\u8f6f\u4ef6\u6240\u3001\u8ba1\u7b97\u6240\u3001\u5317\u822a\u7b49\uff09</li> <li>@\u695a\u5b50\u822a\u76842023\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u6d41\u6c34\u8d26\uff09</li> <li>@Leibnizzzzzz\u76842024\u4fdd\u7814\u7ecf\u9a8c\u5e16\uff1a\u7edf\u8ba1\u8de8\u4fdd\u8ba1\u7b97\u673a\uff08CS/Security\uff0c\u6e05\u534e\u751f\u7edf\u3001\u4e0a\u4ea4\u8ba1\u7b97\u673a\u3001\u5357\u5927\u8ba1\u7b97\u673a\u3001\u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240\u7b49\uff09</li> <li>@\u70ed\u7231\u5b66\u4e60\u7684\u61a8\u61a8\u76842024\u5c4a\uff082023\u5e74\uff09\u4fdd\u7814\u7ecf\u5386\u5206\u4eab</li> <li>@\u6276\u82cf~\u76842023\u5e74(2024\u7ea7)\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab(\u4e0a\u4ea4\u8ba1\u7b97\u673a\uff0c\u5317\u5927\u667a\u80fd\uff0c\u5357\u5927AI\u7b49)</li> <li>@\u4e09\u4e03\u76842023(2024\u5c4a)\u8ba1\u7b97\u673a\u4fdd\u7814\u2014\u2014\u5409\u5927\uff0c\u5317\u822a\uff0c\u897f\u5de5\u5927\uff0c\u6d59\u8f6f\uff0c\u8ba1\u7b97\u6240\uff0c\u4e1c\u5357\uff0c\u897f\u4ea4</li> <li>@caijianfeng\u76842023\u5e74\uff082024\u5c4a\uff09211\u4eba\u5de5\u667a\u80fd\u517b\u86ca\u73ed\u9f20\u9f20\u4fdd\u7814+\u9884\u63a8\u514d\u7ecf\u9a8c\u8d34\uff08\u79d1\u59276\u7cfb\u3001thusz ai\u3001tbsi\u3001pkusz\uff09\uff0c\u5176\u5b9e\u66f4\u50cf\u6d41\u6c34\u8d26</li> <li>@GhostLX\u76842023\u5e74\uff082024\u5c4a\uff09\u56db\u975eACMer\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff5c\u5168\u7a0b0offer\u4e0a\u5cb8\u5317\u822a\uff5c\uff08\u53a6\u5927\u4fe1\u9662\u3001\u897f\u7535\u676dAI\u3001\u5317\u90aeAI\u3001\u534e\u5e08CS\u3001\u5317\u822aSE\u3001\u7535\u79d1\u6df1\u3001\u5409\u5927\u8f6f\u9662\uff09|2\u4e07\u5b57\u8d85\u8be6\u7ec6\u7ecf\u9a8c\u5206\u6790|ACMer\u5fc5\u770b\u4fdd\u7814\u601d\u8def</li> <li>@Sylvain\u76842024\u5c4a(2023\u5e74)\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab|\u4e07\u5b57\u7ecf\u9a8c\u671b\u6709\u7528|\u6e05\u534eTBSI,\u5317\u5927\u8f6f\u5fae,\u4eba\u5927\u9ad8\u74f4,\u8ba1\u7b97\u6240,\u6e05\u534e\u8f6f\u9662,\u5317\u5927cs,\u79d1\u5927\u7f51\u5b89,\u6e05\u534e\u81ea\u52a8\u5316\u7cfb,\u6d59\u5927cs</li> <li>@NorthSecond\u76842024\u5c4a\u4fdd\u7814\u6d41\u6c34\u8d26</li> <li>@\u96e8\u4f3c\u6d6e\u5938\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5e16\uff5c\u672b2\u8de8\u4e13\u4e1a\u4e0a\u5cb8\u4e1c\u5357\u5927\u5b66PALM\uff5c\u4e1c\u5357\u5927\u5b66CS\u3001\u5317\u5927\u4fe1\u5de5CS\u3001\u6d59\u8f6fSE\u3001\u53a6\u5927MAC\u3001\u5317\u5e08\u5927AI\u3001\u7535\u79d1CS\u2026\u2026\uff5c\u4e00\u7bc7\u975e\u5e38\u8be6\u7ec6\u7684\u7ecf\u9a8c\u5e16\uff0c\u5e0c\u671b\u80fd\u591f\u5bf9\u5927\u5bb6\u6709\u5e2e\u52a9\uff01</li> <li>@lllllThree\u76842023\u5e74\uff082024\u5c4a\uff09 \u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386 \u5317\u822acs \u6b66\u5927cs \u81ea\u52a8\u5316\u6240</li> <li>@\u67da\u9c7c\u76842024\u5c4a\u8ba1\u7b97\u673a\u53cc\u975e\u83dc\u9e1f\u4fdd\u7814\u4e4b\u65c5</li> <li>@Lanker\u76842024\u5c4a\u8ba1\u7b97\u673a\u4eba\u5de5\u667a\u80fd\u4f4erank\u4fdd\u7814\u7ecf\u9a8c</li> <li>@xhyu61\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\u4e0e\u601d\u8003\uff1a211\u2192\u540c\u6d4e</li> <li>@Fischer\u76842024\u5c4a\u8ba1\u7b97\u673a\u8de8\u4fdd\u63a8\u514d\u65e5\u5bc4\uff08ruc\u4fe1\u9662\uff0cxmu\u4fe1\u9662\uff0ctju\u667a\u7b97\uff0c\u8f6f\u4ef6\u6240\u5e76\u884c\uff0c\u534e\u79d1\u56fd\u5149/\u8f6f\u9662\uff09</li> <li>@Joyce\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@\u90b9\u9e3f\u6708\u76842023\uff082024\u5165\u5b66\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34</li> <li>@\u5927\u7b28\u949f\u4e0b\u9001\u5feb\u9012\u76842024\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab(\u8bf4\u662f\u7ecf\u9a8c\u8d34\u5176\u5b9e\u66f4\u50cf\u6d41\u6c34\u8d26\ud83d\ude02)</li> <li>@second village\u76842024\u8ba1\u7b97\u673a\u4fdd\u7814-\u590f\u4ee4\u8425\u5c31\u7ed3\u675f\u5427\uff01\uff08\u6e05\u53c9&amp;\u8d35&amp;\u6df1 | \u4e2d\u79d1\u9662\u81ea\u6240 | \u9ad8\u74f4 | \u6e2f\u4e09 | \u590d\u4ea4\u5357\uff09</li> <li>@\u68a6\u8fc7\u4e86\u5c3d\u5934\u4e5f\u4e0d\u5f52\u76842024\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@\u6124\u6012\u7684\u5c0f\u5b69\u76842024\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u2014\u2014\u672b\u4e5d\u4e09\u65e0\u9009\u624b\u7684\u4e0a\u5cb8\u8def</li> <li>@weixin_53463856\u76842024\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u8ba1\u7b97\u6240\uff0c\u590d\u65e6\uff0c\u5357\u5927\uff0c\u54c8\u5de5\u5927\uff0c\u5929\u5927\u3001\u897f\u4ea4\u7b49\u7b49\uff09</li> <li>@xhd0728\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@helloo\u76842024\u8ba1\u7b97\u673a\uff08\u7f51\u5b89\uff09\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@\u662fDream\u5440\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff0c\u5706\u68a6\u5c71\u4e1c\u5927\u5b66</li> <li>@\u597d\u7684\u76842023-2024\u8ba1\u7b97\u673a\u4fdd\u7814\u5386\u7a0b\uff08\u7f51\u5b89\uff09</li> <li>@\u4e09\u65ec\u76842024\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34</li> <li>@For1moc\u76842024\u5c4aCTF/\u4fe1\u5b89/\u7f51\u5b89\u65b9\u5411\u8ba1\u7b97\u673a\u4fdd\u7814\u5e16(\u672b\u4e5d=&gt;\u590d\u65e6)</li> <li>@hollow\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u7f51\u5b89\u5411\uff09</li> <li>@\u5996\u9b54\u9b3c\u602a\u5feb\u79bb\u5f00\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u6d59\u8f6f\u3001\u540c\u6d4e\u8f6f\u3001\u54c8\u5de5\u5927\u8ba1\u7b97\u5b66\u90e8\uff09</li> <li>@Zero\u76842023\u5e74\u975e\u5178\u578b\u6027\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\u2014\u2014\u4e2d\u79d1\u5927\u4fe1\u9662\u3001\u4e2d\u5c71\u8f6f\u9662\u3001\u5ddd\u5927\u8ba1\u9662</li> <li>@\u90a3\u4e2a\u8c01\u76842023(2024\u5c4a) \u8ba1\u7b97\u673a/\u8f6f\u5de5\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u5929\u5927\u4f50\u6cbb\u4e9a\u3001\u4e2d\u79d1\u5927\u82cf\u5dde\u3001\u897f\u4ea4\u8f6f\u9662\u3001\u6d59\u5927\u8f6f\u9662\uff09</li> <li>@404NotFound\u76842023\u5e74\u8ba1\u7b97\u673a\u4e13\u4e1a\u4fdd\u7814\u7ecf\u9a8c\u5e16\uff08\u5317\u5927\u8ba1\u9662\u3001\u5317\u5927\u8f6f\u5fae\u3001\u540c\u6d4e\u7535\u9662\u3001\u5357\u5927\u8f6f\u4ef6\u6240\u7b49\uff09</li> <li>@\u7eaf\u548c\u9ad8\u830e\u8c4c\u8c46\u76842023\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u5c0f\u8bb0\uff08\u5357\u5927AI\u3001\u590d\u65e6CS\uff09</li> <li>@lx_tyin\u768424\u5c4a\u8ba1\u7b97\u673a\u63a8\u514d \u56db\u975e0\u79d1\u7814\u56fe\u5f62\u5b66\u83dc\u72d7\u7684\u7ecf\u9a8c\u8d34\uff08\u5317\u822avr\u3001\u5357\u5f00cs\uff09</li> <li>@xieincz\u76842023\u8ba1\u7b97\u673a0\u79d1\u7814\u7684\u4fdd\u7814\u8fb9\u7f18\u4eba\u7684\u6323\u624e\u4e4b\u8def\uff08\u54c8\u6df1\u3001\u4e2d\u5927\u3001\u534e\u5357\u7406\u5de5\u3001\u5c71\u5927\uff09</li> <li>@\u9893\u5e9f\u6731\u6e23\u76842023\uff082024\u5c4a\uff09211\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u4e2d\u5c71\u8ba1\u7b97\u673a\uff0c\u5317\u5927\u8ba1\u7b97\u673a, \u5317\u5927\u8f6f\u5fae\u7b49\uff09</li> <li>@snowstorm\u76842023\u5e74\uff082024\u5c4a\uff09\u53cc\u975e\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u4e1c\u5357\u3001\u6210\u7535\u3001\u56fd\u9632\u79d1\u5927\u3001\u6d59\u8f6f\u3001\u6e56\u5927\uff09</li> <li>@\u6478\u9c7c\u5c0f\u8fbe\u4eba\u7684\uff082024\u5c4a\uff09\u6570\u5b66\u8de8\u4fdd\u8ba1\u7b97\u673a\u7ecf\u5386\uff0c\u4e0a\u5cb8\u4e2d\u79d1\u5927\u4fe1\u79d1\u76f4\u535a\uff08\u53a6\u5927MAC\u3001\u4e2d\u79d1\u5927\u79d1\u5b66\u5c9b\u3001\u4e2d\u5c71\u9e4f\u57ce\u3001\u54c8\u5de5\u5927\u5353\u5de5\u82cf\u5dde\u3001\u6d59\u5927\u8f6f\u9662\u3001\u5929\u5927\u667a\u7b97\uff09</li> <li>@\u6536\u5c3e\u4ebaVEM\u76842024\u8ba1\u7b97\u673a\u63a8\u514d\u8bb0\u5f55(xmu mac\u3001seu palm\u3001nku \u5f3a\u7ec4\u3001\u5317\u6df1\u3001nju se\u3001\u540c\u6d4ese\u3001hust cs\u3001whu\u9065\u611f)</li> <li>@\u795e\u63a2\u9999\u693f\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u603b\u7ed3\uff08\u5317\u5927\u8ba1\u7b97\u673a\uff0c\u5357\u5927LAMDA\uff0c\u4eba\u5927\u9ad8\u74f4\uff0c\u4e2d\u79d1\u5927\uff09</li> <li>@\u8c6a2021\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u56de\u5fc6\u5f55\uff08\u6e05\u534e\u8d35\u7cfb/\u4eba\u5927\u9ad8\u74f4/\u81ea\u52a8\u5316\u6240/\u5317\u5927\u8f6f\u5fae/\u4e0a\u4ea4\u7535\u9662/\u79d1\u59276\u7cfb\uff09</li> <li>@\u592a\u7f8e\u4e3d\u4e86\u5409\u5927AI\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34|\u672b\u4e5d\u4f4erank|\u5c31\u4e1a\u5411|\u53a6\u5927\uff0c\u54c8\u5de5\u5a01\uff0c\u4e2d\u5c71\uff0c\u6e05\u534e\u5de5\u7a0b\u7855</li> <li>@Phenophenes\u76842024\u5c4a\uff082023\u5e74\uff09\u8ba1\u7b97\u673a+\u8de8\u4fdd\u6cd5\u5b66\u4fdd\u7814\u7ecf\u9a8c\uff08\u540c\u6d4e\u3001\u8ba1\u7b97\u6240\u3001\u6d59\u8f6f\u7b49\uff09</li> <li>@NamelessOIer\u76842023 \u8ba1\u7b97\u673a\u4fdd\u7814\u590d\u76d8\uff08\u6e05\u534ecs\u3001\u5317\u5927cs\u3001\u4e2d\u79d1\u5927cs\u3001\u5357\u5927cs\uff09</li> <li>@Cocktail\u768423(24\u5c4a)\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff5c\u672b2\u4e0a\u5cb8\u534e\u5de5\uff5c\u897f\u4ea4\u8f6f\u3001\u7535\u79d1CS\u3001\u5317\u7406\u524d\u6cbf\u9662\u3001\u534e\u5de5CS\u3001\u5317\u5e08\u5927AI\u3001\u5ddd\u5927CS\u3001\u5927\u5de5CS\u3001\u6e56\u5927CS\u3001\u91cd\u5927CS</li> <li>@\u68d2\u68d2\u7231\u5403\u7cd6\u76842023\u5e74\uff0824\u5c4a\uff09\u4fdd\u7814\u7ecf\u9a8c\u8d34-\u6b66\u5927CS\uff0c\u5357\u5927CS\uff0c\u4e1c\u5357CS\uff0c\u590d\u65e6CS\uff0c\u6d59\u5927\u5de5\u9662\u6570\u79d1</li> <li>@ARROW\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u603b\u7ed3\uff08\u5317\u822acs\uff0c\u5317\u5927cs\uff0c\u4eba\u5927\u9ad8\u74f4\u7b49\uff09</li> <li>@ViperH\u76842023\u5e74\uff082024\u5c4a\uff09\u6e05\u5317\u6e2f\u4e09\u534e\u4e94\u81ea\u52a8\u5316/\u4eba\u5de5\u667a\u80fd\u4fdd\u7814\u7ecf\u5386</li> <li>@Cczz\u76842023\u5e7424\u5c4a\u52a3\u52bf\u56db\u975e\u8eba\u5e73\u6446\u70c2\u4fdd\u7814\u53cd\u9762\u7ecf\u9a8c\u8d34\uff08\u53a6\u5927 \u897f\u5317\u5de5\u4e1a \u897f\u7535\u676d\uff09</li> <li>@Tim\u76842023\u5e74\u672b\u6d41211\u5927\u6570\u636e\u4e13\u4e1a\u4fdd\u7814\u8bb0\u5f55\uff08\u5409\u8f6f\uff0c\u9ad8\u74f4\uff0c\u4e2d\u5357\u5927\u6570\u636e\uff0c\u4e1c\u5357cs\uff0c\u8ba1\u7b97\u6240\u5206\u5e03\u5f0f\uff0c\u897f\u4ea4ai\uff08\u4eba\u673a\u6240\uff09\u7b49\uff09</li> <li>@\u6b39\u98ce\u76842023\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u5fc3\u8def\u5386\u7a0b(\u5317\u5927\u667a\u80fd\u3001\u5317\u822acs\u3001\u4e0a\u6d77AIlab\u3001\u6e05\u534e\u8f6f\u4ef6\u7b49\uff09</li> <li>@\u5927\u80fd\u732b\u5403\u70ed\u5343\u9762\u76842023\u5e74\u5916\u6821\u4fdd\u7814\u6e05\u534e\u8d35\u7cfb\u7ecf\u9a8c</li> <li>@\u5b85\u524d\u4e00\u68f5\u6811\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814/\u5347\u5b66\u5b9e\u5f55\uff08\u6e2f\u4e2d\u6df1\u6570\u636e\u79d1\u5b66\u3001\u4e0a\u4ea4\u8f6f\u3001\u6e05\u8f6f\uff09</li> <li>@jwimd\u768424\u8de8\u4fddCS\u7ecf\u9a8c\u8d34\uff08\u6e05\u534e\u53c9\u9662\uff0c\u6e05\u534e\u8f6f\u9662\u5de5\u535a\uff0c\u6d59\u5927\u8ba1\u9662\u76f4\u535a\uff09</li> <li>@L-811\u76842023\u5e74\u4e2d\u672b\u6d41211\u8ba1\u7b97\u673a\u4fdd\u7814\u8bb0\u5f55\uff08\u81ea\u52a8\u5316\u6240\u3001\u5929\u5927\u3001\u5357\u5f00\u3001\u4e1c\u5357\u3001\u5317\u5e08\u5927\u3001\u53a6\u5927\uff09</li> <li>@TrueStar02\u7684\u4e2d\u4e5d\u51e0\u4e4e0\u79d1\u7814\u7ecf\u9a8c\u7684\u4fdd\u7814\u7ecf\u5386\u5206\u4eab</li> <li>@\u51db\u591c\u5e8f\u76842023\u5e74(2024\u5c4a)\u8ba1\u7b97\u673a\u4fdd\u7814\u590f\u4ee4\u8425\u8bb0\u5f55\uff08\u4eba\u5927\u4fe1\u9662\u3001\u4e2d\u5c71\u8ba1\u9662\u7b49\uff09</li> <li>@xhyu61\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\u4e0e\u601d\u8003\uff1a211\u2192\u540c\u6d4e</li> <li>@xhd0728\u7684\u83dc\u9e212023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@dddd\u7684\u666e\u666e\u901a\u901a\u4e09\u7ef4\u7684\u4fdd\u7814\u6d41\u6c34\u8d26 | \u6e05\u6df1AI\u3001\u4eba\u5927\u9ad8\u74f4\u3001\u5357\u5927\u667a\u79d1\u3001\u4e2d\u79d1\u5927\u5927\u6570\u636e\u7b49</li> <li>[\u4fdd\u7814\u4e09\u90e8\u66f2-\u7ecf\u9a8c\u8d34] @\u785d\u57fa\u82ef\u7684\u8ba1\u7b97\u673a\u63a8\u514d\u7ecf\u9a8c\u5e16 | \u8d35\u7cfb\u3001\u4e0a\u4ea4cs\u3001\u4e2d\u79d1\u5927cs\u7b49</li> <li>[\u4fdd\u7814\u4e09\u90e8\u66f2-\u4fdd\u7814vlog] @\u785d\u57fa\u82ef\u76842023\u5e74\u8ba1\u7b97\u673a\u7c7b\u4fdd\u7814vlog</li> <li>[\u4fdd\u7814\u4e09\u90e8\u66f2-\u4e0e\u7fa4\u53cb\u9762\u57fa] @\u785d\u57fa\u82ef\u7684\u63a8\u514d\u7ed3\u675f\uff0c\u8ddf\u7eff\u7fa4\u7fa4\u53cb\u5728\u5357\u4eac\u5c0f\u805a</li> <li>@SuburbiaXX\u76842023\u5e74\u4fe1\u606f\u5b89\u5168\uff08\u7f51\u5b89\uff09\u76f8\u5bf9\u7b80\u5355\u4fdd\u7814\u7ecf\u9a8c-\u590f\u4ee4\u8425\u4e0a\u5cb8-\u6d59\u5927\u7f51\u5b89-\u4e0a\u4ea4\u7f51\u5b89-\u4e1c\u5357\u7f51\u5b89</li> <li>@Jasonczh4\u76842023CS\u4fdd\u7814\u672b\u4e8c\u4f4eRK\u7ecf\u9a8c\u8d34\u3010\u4e2d\u5927\u8f6f|\u897f\u4ea4|\u6e56\u5927\u3011</li> <li>@Tian Kun\u76842023\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u4e0a\u4ea4\u76f4\u535a\u3001pjlab\u3001\u5317\u822a\u8ba1\u7b97\u673a\u3001\u4e1c\u5357\u8ba1\u7b97\u673a\u3001\u5357\u5927\u82cf\u5dde\uff09</li> <li>@2836\u76842024\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u6b66\u5927\u3001\u534e\u79d1\u3001\u5317\u5e08\u5927\u3001\u5357\u5f00\u3001\u4e1c\u5357\u2026\u2026\u4e0a\u5cb8\u534e\u79d1cs</li> <li>@__XLE\u76842023\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5e16</li> <li>@Last\u76842023\u5e74\uff082024\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\u2014\u2014\u590d\u65e6\u8ba1\u7b97\u673a\u3001\u4e0a\u4ea4\u7f51\u5b89</li> <li>@yu-yake2002\u76842023\u5e74\uff082024\u5c4a\uff09all in \u4e2d\u79d1\u9662\u8ba1\u7b97\u6240\u4fdd\u7814\u7ecf\u5386</li> <li>@yao9e\u768424\u5c4a(2023\u5e749\u6708)\u8ba1\u7b97\u673a\u4fdd\u7814\u8bb0\u5f55 | 211\u3001\u4f4erank\uff0c\u65e0\u9879\u76ee\u3001\u7ade\u8d5b\u3001\u8bba\u6587</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2022","title":"2022\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@\u6d6e\u69ce\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u6e05\u534e\u53c9\u9662\u3001\u6e05\u534e\u8d35\u7cfb\u3001\u5317\u5927\u8ba1\u7b97\u673a\u3001\u5317\u5927\u667a\u80fd\u3001\u4e0a\u4ea4\u7535\u9662\u8ba1\u7b97\u673a\u3001\u590d\u65e6\u8ba1\u7b97\u673a\uff09</li> <li>@\u6478\u9c7cing\u76842022\u5e74\uff082023\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u2014\u2014\u6e05\u534e\u81ea\u52a8\u5316\u3001\u5317\u5927\u8ba1\u7b97\u673a\u3001\u8ba1\u7b97\u6240vipl\u3001\u5357\u5f00cmm\u3001\u5357\u5927\u8ba1\u7b97\u673a\u3001\u4eba\u5927\u4fe1\u606f\u7b49\uff0c\u9644\u4fdd\u7814\u5e38\u89c1\u95ee\u9898\u89e3\u7b54\u3001\u6e05\u5317\u534e\u4e94\u9662\u7cfb\u5206\u6790</li> <li>@\u4e00\u53e3\u9e1f\u76842022\u5e74\u5317\u4eac\u67d0985\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u5206\u4eab\uff08\u6e05\u534e\u3001\u4e0a\u4ea4\u3001\u4e2d\u79d1\u9662\u7b49\uff09</li> <li>@\u6bd4\u5c14\u76842022\u5e74\uff082023\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u2014\u2014\u8ba1\u7b97\u6240vipl\u3001\u5357\u5927lamda\u3001\u5317\u5927\u8ba1\u7b97\u673a\u3001\u4eba\u5927\u9ad8\u74f4\u7b49</li> <li>@Runder\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u2014\u2014\u2014\u2014985\u5b9e\u9a8c\u73ed\u4f4erk</li> <li>@StellarDragon\u76842022\u5357\u4eac\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u5b66\u9662\u672c\u79d1\u751f\u5f00\u653e\u65e5\u5c0f\u8bb0\u3010\u4fdd\u7814\u5411\u3011</li> <li>@\u4e00\u53f6\u98ce\u7684\u56db\u975e\u83dc\u83dc\u7684\u60e8\u6de1CS\u4fdd\u7814\u7ecf\u5386\uff082022\u5e74\uff09</li> <li>@Pluto\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\uff0cmaybe this is all you need\uff08\u666e\u901a\u53cc\u975e\u5b66\u5b50\u4e0a\u5cb8\u6d59\u5927\u5de5\u7a0b\u5e08\u5b66\u9662\u6570\u636e\u79d1\u5b66\u9879\u76ee\uff09</li> <li>@timeErrors\u76842022\u5e74\uff08\u5c31\u4e1a\u5411\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u65e5\u5bc4\uff08\u4ece4\u6708\u81f310\u6708\u5171\u8ba127\u7bc7\uff09\u2014\u2014 \u5357\u5927\u8f6f\u4ef6\uff0c\u590d\u65e6\u8ba1\u79d1\uff0c\u6d59\u5927\u5de5\u7a0b\u5e08\uff0c\u4eba\u5927\u4fe1\u9662\uff0c\u5317\u822aCS\uff0c\u534e\u79d1CS\uff0c\u897f\u4ea4SE\uff0c\u4e2d\u5c71SE\u7b49</li> <li>@\u6709\u75c5\u5403\u66dc\u768423\u5c4a\uff082022\u5e74\uff09CS\u63a8\u514d\u56de\u5fc6\u603b\u7ed3</li> <li>@\u738b\u653f\u9716LIN\u7684\u3010\u7ecf\u9a8c\u7bc7\u30112022\u5e74\uff082023\u5c4a\uff09\u6211\u7684\u4fdd\u7814\u7ecf\u5386</li> <li>@\u5f20\u5317\u5317\u76842022 \u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\uff5cRank \u4e2d\u6e38\u3001\u65e0\u4e00\u4f5c\u3001\u7ade\u8d5b\u5c11\u3001\u65e0\u5b9e\u4e60\u3001\u65e0\u4f18\u8d28\u9879\u76ee\u7684\u4e2d\u6e38\u9009\u624b\uff5c\u5929\u5927\u4e91\u8ba1\u7b97\u3001\u5357\u5927\u8f6f\u4ef6\u6240\u3001\u4e2d\u5357\u8ba1\u7b97\u673a\u3001\u4e2d\u5c71\u8ba1\u7b97\u673a\u3001\u4e2d\u5c71\u8f6f\u4ef6\u3001\u5ddd\u5927\u8ba1\u7b97\u673a</li> <li>@\u5f20\u5317\u5317\u7684CS/SE \u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@Hwcoder\u76842022\u4e2d\u4e5dCS\u4fdd\u7814\u56de\u5fc6\u5f55\uff08\u590d\u65e6CS/\u4eba\u5927\u9ad8\u74f4/\u5317\u5927\u8f6f\u5fae/\u79d1\u5927/\u6e05\u534e\u8f6f\u9662...\uff09</li> <li>@\u82b1\u964d\u76842022\u5e74\uff0823\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u8fb9\u7f18\u4eba\u9762\u8bd5\u7ecf\u9a8c\u53ca\u5efa\u8bae\uff08\u65e0\u6e05\u5317\u534e\u4e94\uff0c\u5927\u4f6c\u9000\u6563\uff09</li> <li>@\u6816\u98ce\u7834\u96e8\u76842022\u5e74\u5927\u6570\u636e\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u5317\u5927\u53c9\u9662\u3001\u5357\u5927AI\u9662\u3001\u54c8\u5de5\u5927SCIR\u5b9e\u9a8c\u5ba4\u3001SIAT\u6570\u5b57\u6240\uff09</li> <li>@\u65e0\u4e0e\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\uff08\u6e05\u534e\u8f6f\u9662\u3001\u590d\u65e6CS\u3001\u4eba\u5927\u9ad8\u74f4\u3001\u5357\u5927CS\u7b49\uff09</li> <li>@Alkali\uff01\u76842022\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff1a\u534e\u5357\u7406\u5de5\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u5de5\u7a0b\u5b66\u9662 \u3001\u4e1c\u5357\u5927\u5b66\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u5de5\u7a0b\u5b66\u9662\u7b49</li> <li>@\u7b49\u98ce\u6765\u4e0d\u5982\u8ffd\u98ce\u53bb\u76842022\u5e74\u4fdd\u7814\u7ecf\u9a8c\u7f51\u5b89&amp;\u534e\u4e94&amp;\u6b66\u5927\u4e2d\u5c71\u7b49</li> <li>@\u76f8\u7ea6\u76f8\u5b88\u5230\u5929\u8fb9\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u8bb0\u5f55\uff08\u8ba1\u7b97\u6240\u3001\u6d59\u5927\u3001\u534e\u79d1\u3001\u4e1c\u5357\u3001\u5317\u822a\uff09</li> <li>@xx\u5b66\u6e23\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u590f\u4ee4\u8425/\u9884\u63a8\u514d\u7ecf\u9a8c\u5206\u4eab\uff08\u6e05\u5317\u534e\u4e94\u4eba\uff09</li> <li>@Someity\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\uff08\u6e05\u534e\u6df1\u5733\u8ba1\u7b97\u673a\u3001\u6e05\u534e\u7f51\u7814\u9662\u3001\u5357\u4eac\u5927\u5b66\u7b49\uff09</li> <li>@lori-G\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u5357\u8f6f\u3001\u6d59\u8f6f\u3001\u4e2d\u79d1\u5927\u82cf\u9ad8\u9662\u3001\u5317\u822a\u8ba1\u7b97\u673a\u3001\u56fd\u9632\u79d1\u5927\u8ba1\u7b97\u673a\u3001\u5317\u90ae\u8ba1\u7b97\u673a\u3001\u4e0a\u79d1\u5927\u751f\u533b\u5de5\u3001\u897f\u5de5\u5927\u8ba1\u7b97\u673a\u3001\u5357\u5f00\u8f6f\u3001\u5409\u5927\u4eba\u5de5\u667a\u80fd\u3001\u4e2d\u5357\u8ba1\u7b97\u673a\u3001\u8f6f\u4ef6\u6240\u8ba1\u79d1\u56fd\u91cd\u7b49\uff09</li> <li>@\u7ea2\u83b2\u7684\u5f13\u77e22022\u5e74\uff082023\u5c4a\uff09\u4e09\u65e0\u5e95\u5c42\u9009\u624b\uff08\u4f4erank\uff0c\u65e0\u79d1\u7814\uff0c\u65e0\u7ade\u8d5b\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u8bb0\u5f55\uff08\u5357\u5927\uff0c\u6d59\u5927uiuc\uff0c\u54c8\u5de5\u5927\u6df1\u5733\uff0c\u897f\u4ea4se\uff0c\u5317\u5e08\u5927ai\u3001\u8ba4\u77e5\u795e\u7ecf\u79d1\u5b66\u56fd\u91cd\uff0c\u4e2d\u5c71se\uff0c\u54c8\u5de5\u5927\u8ba1\u7b97\u5b66\u90e8\uff09</li> <li>@Ever\u6d0b\u8471\u5934\u76842022\u5e74\uff0823\u5c4a\uff09\u4fdd\u7814\uff1a\u672b\u4e5d\u8ba1\u7b97\u673a\u8fb9\u7f18\u4eba\u7684\u6323\u624e\u6361\u6f0f\u4e4b\u8def\uff08\u590f\u4ee4\u8425+\u9884\u63a8\u514d\u7ec8\u4e0a\u5cb8\u534e\u4e94\u4e13\u7855\uff09</li> <li>@insere\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\uff08\u4e0a\u4ea4\u8f6f\u3001\u8ba1\u7b97\u6240\u3001\u6e05\u8f6f\u3001\u5317\u5927\u8ba1\u7b97\u673a\uff09</li> <li>@B4a\u7684SWJTUer\u7684\u8270\u96beCS\u4fdd\u7814\u4e4b\u8def\uff1a\u4ece\u590f0\u8425\u5230\u90c1\u63a8\u514d\u5230\u6361\u6f0f\u4e0a\u5cb8 | \u5931\u8d25\u7684\u53cd\u4f8b\uff0c\u590f0\u8425\u3001\u90c1\u63a8\u514d\u3001\u5f00\u7cfb\u7edf\u524d\u4e00\u5929\u88ab\u9e3d\u3001\u6361\u6f0f\uff0c\u5927\u5bb6\u5f15\u4ee5\u4e3a\u6212</li> <li>@Filbert\u768422\u5e74\u8ba1\u7b97\u673a\u590f\u4ee4\u8425\u4fdd\u7814\u56de\u987e-\u666e2\u8de8\u4fdd\u4ea4\u53c9\u8bd5\u6c34\u9009\u624b\uff08\u5409\u6797AI\uff0c\u534e\u5e08\u5927\u6570\u636e\uff0c\u5317\u5e08AI\uff0c\u5357\u5927\u8f6f\u4ef6\uff0c\u4eba\u5927\u516c\u7ba1\uff0c\u4e2d\u79d1\u5927\u79d1\u5b66\u5c9b\uff09\u300122\u5e74-19\u7ea7\u8ba1\u7b97\u673a\u4fdd\u7814\u5f62\u52bf\u5206\u6790\uff08\u542b\u672c\u6821\u60c5\u51b5\u7edf\u8ba1\uff09</li> <li>@Harris-H\u76842022\u5e74\u53cc\u975e\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u5206\u4eab(\u6d59\u5927\u3001\u5317\u822a\u3001\u4e2d\u79d1\u9662\u7b49)</li> <li>@Welt\u7684\u5357\u5927\u4eba\u5de5\u667a\u80fd\u5b66\u9662\u5f00\u653e\u65e5\u9762\u8bd5\u9898</li> <li>@\u4ef0\u671b\u6b46\u7a7a\u76842022\u5e74(23\u5c4a)\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab(\u5317\u822a\u3001\u4e1c\u5357\u3001\u897f\u5de5\u5927\u3001\u54c8\u5de5\u5927\u3001\u4e2d\u5c71\u7b49)</li> <li>@\u7ef4\u514b\u591a\u7684\u4fdd\u7814\u590f\u4ee4\u8425\u53ca\u9884\u63a8\u514d\u603b\u7ed3|\u5357\u5927\uff0c\u4e2d\u79d1\u5927\uff0c\u5317\u90ae\uff0c\u5317\u822a\uff0c\u8ba1\u7b97\u6240\uff0c\u8f6f\u4ef6\u6240\u4e2d\u6587\u7b49</li> <li>@New_Bee777\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u8fb9\u7f18\u4eba\u7684\u6323\u624e\u4e4b\u8def\uff08\u4e1c\u5357\u3001\u6b66\u5927\u3001\u56fd\u9632\u79d1\u5927\u3001\u4fe1\u5de5\u6240\u3001\u5ddd\u5927\u3001\u897f\u4ea4\uff0c\u5929\u5927\u4f50\u6cbb\u4e9a\u3001\u592e\u97f3\u3001\u4e1c\u5317\u5927\u3001\u7535\u79d1\u6df1\u3001\u897f\u5de5\u5927\u3001\u5c71\u5927\uff09</li> <li>@csfrogy\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814/\u7533\u8bf7\u8bb0\u5f55\uff08\u6e2f\u4e09/\u6e05\u5317/\u534e\u4e94\u4eba/\u8ba1\u7b97\u6240\uff09</li> <li>@\u6d77\u87ba\u7684\u8bb0\u5f55\u6211\u76842022\u5e74\u56db\u975e\u4fdd\u7814\u4e4brk\u8fb9\u7f18\u4eba\u65e0\u516d\u7ea7\u9e3d\u6d59\u5927\u4e0a\u5cb8\u534e\u5e08\u8f6f\u9662\u5b66\u7855</li> <li>@MathsCode\u76842022\u5e74CS\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u6e05\u6df1\u3001\u4e0a\u4ea4\u3001\u5357\u5927LAMDA\u3001\u540c\u6d4e\u3001\u4e1c\u5357Palm\u7b49\uff09</li> <li>@TanyUJS\u76842022\u5e74\uff0c\u56db\u975e\u8ba1\u79d1\u5b66\u751f\u7684\u4fdd\u7814\u5927\u5c40\u89c2\u590d\u76d8\u7ecf\u9a8c\u8d34</li> <li>@\u65f6\u5149\u5982\u6d41\u7684\u53cc\u975e\u8ba1\u7b97\u673a\u4fdd\u7814\u4e0a\u5cb8\u5357\u90ae\u3001\u82cf\u5927\u3001\u4e2d\u5357\u3001\u6d59\u8f6f\u3001\u53a6\u5927\u7ecf\u9a8c\u8d34</li> <li>@hxzzzz\u76842022\u5e74\uff082023\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\uff08\u975e\u5e38\u89c4\u4fdd\u7814\uff0c\u4e2d\u79d1\u5927\u3001\u5317\u5927\u8ba1\u7b97\u673a\uff0c\u81ea\u52a8\u5316\u6240\uff09</li> <li>@\u52c3\u5b66\u5bb6\u76842022\u5e74\u83dc\u9e21ACMer\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff082023\u5c4a\uff0c\u4eba\u5927\u4fe1\u9662\uff0c\u5317\u822a\u7b49\uff09</li> <li>@javayuan\u76842022\u5e74\u897f\u5317\u5de5\u4e1a\u5927\u5b66\u7f51\u5b89\u5b66\u9662\u5927\u83dc\u9e21\u7684\u4fdd\u7814\u4e4b\u65c5</li> <li>@\u533f\u540d\u7528\u6237\u76842022\u4f4erk \u4fdd\u7814\u5957\u78c1\u7ecf\u5386</li> <li>@Here_SDUT\u7684\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u53cc\u975e\u8ba1\u7b97\u673a\u4e0a\u5cb8\u6210\u7535\uff09 \u2013 Here_SDUT</li> <li>@\u975e\u5929\u76842022\u5e74\u5317\u4eac\u4e2d\u6e38211\u8ba1\u7b97\u673a\uff08DS\uff09\u4fdd\u7814\u7ecf\u9a8c\uff082023\u5c4a\uff09\uff08\u4eba\u5927\u4fe1\u9662\u3001\u6d59\u5927\u7f51\u5b89\u3001\u534f\u548c\u533b\u9662\uff09</li> <li>@\u6e58\u7ca4Ian\u7684\u3010\u8de8\u4fdd985\u8ba1\u7b97\u673a\u30112022\u8de8\u4fdd\u5b9e\u5f55|\u516d\u5343\u5b57\u4fdd\u59c6\u6559\u7a0b</li> <li>@\u5c0f\u6881\u8bf4\u4ee3\u7801\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u590f\u4ee4\u8425\u7ecf\u9a8c\u603b\u7ed3\uff0c11\u6240\u9662\u6821\u7ecf\u5386\uff0c\u9884\u63a8\u514d\u4e0a\u5cb8\u5317\u5927</li> <li>@overflow\u76842023\u5c4a\u56db\u975e\u7b2c\u4e00\u8de8\u4e13\u4e1a\u4e0a\u5cb8\u534e\u4e94\u8f6f\u5de5\uff08\u79d1\u5927\u5148\u7814\u8f6f\u4ef6\u3001\u5357\u5927\u8f6f\u4ef6_\u66ff\u8865\u4e2d\u504f\u4e0a\u3001\u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240\u3001\u5357\u5f00\u8f6f\u4ef6\u3001\u6d59\u5927\u5de5\u7a0b\u5e08\u66ff\u8865\u3001\u53a6\u5927\u4eba\u5de5\u667a\u80fd\u3001\u5c71\u5927\u8f6f\u4ef6\u3001\u4e1c\u5357\u7f51\u5b89_\u66ff\u8865\u4e2d\u504f\u4e0a\uff09</li> <li>@\u83b1\u6602\u7eb3\u591a\u4e03\u4e16\u76842022\u5e74\u56db\u975e\u8ba1\u7b97\u673a\u4fdd\u7814\u4e4b\u65c5\uff08\u4fe1\u5de5\u6240\u3001\u8f6f\u4ef6\u6240\u3001\u8ba1\u7b97\u6240\u3001\u5357\u5927\u3001\u56fd\u9632\u79d1\u5927\u3001\u5317\u5e08\u5927\u3001\u5317\u5de5\u5927\u7b49\uff09</li> <li>@whisper\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u5206\u4eab</li> <li>@ksuD\u76842022\u5e74\uff0823\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u6e05\u6df1\u3001\u6d59\u5927\u3001\u4e2d\u79d1\u5927\u3001\u590d\u65e6\u3001\u5357\u5927\u3001\u4eba\u5927\u9ad8\u74f4\u7b49\uff09-\u672b\u6d41211\u201c\u4e09\u65e0\u201d\u9009\u624b-\uff08\u65e0title\u65e0rk\u65e0paper\uff09\u66f2\u66f2\u6298\u6298\u7684\u63a8\u514d\u4e4b\u8def</li> <li>@Stephen.ki\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u53cc\u975eDS-&gt;\u540c\u6d4eCS\uff09</li> <li>@\u6708\u4eae\u5728\u5077\u770b\u5416\u76842023\u5c4a\u8ba1\u7b97\u673a\u4fdd\u7814\uff08\u5317\u5927\u534e\u4e94\u4e24\u6240\uff09</li> <li>@\u5566\u5566\u5566\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u6e05\u6df1\u4f2f\u514b\u5229tbsi+\u5317\u6df1\uff09</li> <li>@\u53cd\u8fc7\u6765\u60f3\u76842023-\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386-\u5357\u5927lamda \u4e2d\u79d1\u5927 \u5317\u822a \u5c71\u5927</li> <li>@\u9646\u58f9zero\u76842022\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34|\u53a6\u95e8\u5927\u5b66MAC\u5b9e\u9a8c\u5ba4&amp;\u6d59\u6c5f\u5927\u5b66\u8f6f\u4ef6\u5b66\u9662|\u7ebf\u4e0b\u590f\u4ee4\u8425|\u540d\u573a\u9762\u7adf\u662f\u6211\u81ea\u5df1</li> <li>@\u767d\u767d\u963f\u6851\u76842022\u5e74\uff082023\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\uff08\u5317\u5927\u5de5\u5b66\u9662\u3001\u6e05\u6df1TBSI\u3001\u81ea\u52a8\u5316\u6240\u3001\u8ba1\u7b97\u6240\u3001\u6e2f\u4e2d\u6587\u3001\u4e0a\u4ea4\u3001\u590d\u65e6\u3001\u5357\u5927\u3001\u5317\u822a\u7b49\uff09</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2021","title":"2021\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@\u963f\u5c14\u6cd5\u6768XDU\u76842021\u5e74\u4eba\u5de5\u667a\u80fd\u4fdd\u7814\u7ecf\u5386(xduee-&gt;njuai)</li> <li>@Girapath\u76842021\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u590d\u65e6\u3001\u54c8\u6df1\u3001\u6d59\u5927\u3001\u5357\u5927\u3001\u5317\u5927\u8f6f\u5fae\uff09</li> <li>@lhchen\u76842021CS\u4fdd\u7814\u7ecf\u9a8c\uff08\u6e05\u5317\u590d\u4ea4\u6d59\u3001\u5357\u5927\u3001\u4eba\u5927\uff09</li> <li>@BoJack\u76842021\u5e74\uff0822\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</li> <li>@PTYin\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff1a\u6e05\u534e\u8f6f\u4ef6\u3001\u5357\u5927\u3001\u54c8\u5de5\u5927\u3001\u54c8\u5de5\u6df1</li> <li>@Charfole\u76842021\u5e74\uff0822\u5c4a\uff09\u8ba1\u7b97\u673a\u4fdd\u7814\u9762\u8bd5\u7ecf\u9a8c\u4e0e\u5efa\u8bae\uff08\u590d\u65e6\u3001\u5317\u822a\u3001\u4e2d\u5c71\u3001\u6d59\u5927\u5de5\u7a0b\u5e08\u3001\u534e\u4e1c\u5e08\u3001\u534e\u5de5\u7b49\u9662\u6821\uff09</li> <li>@\u5357\u5b5a\u5148\u751f\u76842021\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\uff08\u6e05\u6df1\u3001\u5357\u5927AI\u3001\u4e2d\u79d1\u5927\u3001\u54c8\u6df1\u3001\u4e2d\u5c71\u7b49\uff09</li> <li>@\u82f1\u67ad\u660a\u7684\u6292\u60c5\u54112021\u4fdd\u7814\u7ecf\u5386(\u6574\u4e2a\u5927\u4e09)\uff1a\u6d59\u5927\u8f6f\u9662\u4eba\u5de5\u667a\u80fd\u9762\u8bd5\u7b2c\u4e00\uff0c\u590d\u8bd5\u7b2c\u4e8c\uff0c\u53bb\u5411\u5b8b\u660e\u9ece\u8001\u5e08VIPA\u8bfe\u9898\u7ec4</li> <li>@Hartley\u76842021\u56db\u975e\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</li> <li>@AYun\u76842021\u5e74\u8ba1\u7b97\u673a\u4e13\u4e1a\u4fdd\u7814\u7ecf\u5386\u5206\u4eab\uff08\u590d\u65e6\u3001\u6d59\u5927\u3001\u4e0a\u79d1\u5927\uff09</li> <li>@\u5c0f\u9752\u86d9\u7684\u56db\u975e\u5b66\u6821\uff0c\u8ba1\u7b97\u673a\u4fdd\u7814\u4e0a\u5cb8\u534e5\u68a6\u6821\u5357\u4eac\u5927\u5b66!</li> <li>@SandyXi\u76842021\u590f\u2014\u2014\u4fdd\u7814\u590f\u4ee4\u8425</li> <li>@\u67ab\u6960Kuiy\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</li> <li>@JamisonZ\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814(\u53cc\u975e)\u7f51\u5b89\u5411</li> <li>@\u4e00\u53ea\u7720\u7f8a\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u2014\u2014\u5357\u5f00\u3001\u53a6\u5927\u3001\u54c8\u5de5\u5927\u5a01\u6d77\u3001\u534e\u5e08\u3001\u6d59\u5927\u3001\u5317\u822a </li> <li>@\u6e05\u98ce\u9152\u9189\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814</li> <li>@wyypersist\u76842021\u4fdd\u7814\u7ecf\u5386\u5206\u4eab-\u611f\u8c22\u8fc7\u53bb\u4e09\u5e74\u7684\u81ea\u5df1\u548c\u4eb2\u53cb\u7684\u652f\u6301\u548c\u5e2e\u52a9</li> <li>@\u5eb7\u5eb7\u76842021\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff0c100\u5929\u4fdd\u7814\u5927\u6218\uff0c\u7eafrk\u9009\u624b\uff0c\u6302\u5230\u6000\u7591\u4eba\u751f\uff0c\u6700\u7ec8\u4e0a\u5cb8\u6e05\u534e\u6df1\u5733\u8ba1\u7b97\u673a\u4e13\u7855</li> <li>@\u767d\u591c\u76842021\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\uff1a\u672b\u4e5d10%\u7684\u6323\u624e\u4e4b\u8def\u3010\u6b66\u5927\u3001\u540c\u6d4e\u3001\u897f\u4ea4\u3001\u5929\u5927\u3001\u56fd\u9632\u79d1\u5927\u3001\u5357\u5f00\u3001\u4e1c\u5357\u3011</li> <li>@Nayuta\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\uff08\u4e00\u53ea\u83dc\u72d7\u7684\u8d77\u8d77\u4f0f\u4f0f\u4e4b\u8def\uff09\u2014\u2014lamda \u4e0a\u4ea4 \u8ba1\u7b97\u6240 \u5317\u5927\u4fe1\u79d1 \u6e05\u6df1CS</li> <li>@CCWUCMCTS\u7684\u4fe1\u606f\u4e4b\u6d77\u4e2d\u7684\u7f18\u5206\u8bd5\u63a2\u2014\u2014\u4fe1\u5b89\u4fdd\u7814\u4ece211\u5230\u53cc\u975e\uff08\u7ec8\uff09</li> <li>@\u767d\u65e5\u68a6\u76842021\u8ba1\u7b97\u673a\u83dc\u6279\u4fdd\u7814\u7ecf\u5386\uff08\u8f6f\u4ef6\u6240\uff0c\u4e2d\u5c71\uff0c\u4ea4\u8f6f\uff0c\u5357\u5927CS\uff0c\u6d59\u5927CS\uff0c\u6e05\u8f6f\uff0c\u5317\u5927\u8f6f\u5fae\u7b49\uff09</li> <li>@\u6839\u53f7\u4e8c\u5341\u4e00\u76842022\u63a8\u514d\u8ba1\u7b97\u673a\uff08\u4fe1\u5b89/\u7f51\u7edc\u7a7a\u95f4\u5b89\u5168\uff09 \u4eba\u5927\u4fe1\u9662\u3001\u4fe1\u5de5\u6240\u56fd\u91cd\u3001\u897f\u5b89\u4ea4\u5927\u7f51\u5b89\u3001\u5317\u90ae\u8ba1\u7b97\u673a\u3001\u5929\u5927\u7f51\u5b89\u3001\u4e2d\u79d1\u5927\u7f51\u5b89\u3001\u5317\u5927\u8f6f\u5fae\u3001\u5357\u5927\u8ba1\u9662</li> <li>@\u5b64\u82b3\u501a\u82b1\u7ea2\u76842021\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814-\u53cc\u975e\u4e09\u65e0\u5e95\u5c42CSer\u7684\u5931\u8d25\u4fdd\u7814\u7ecf\u5386\uff08\u6b66\u5927/\u590d\u65e6/\u8ba1\u7b97\u6240/\u534e\u79d1/\u540c\u6d4e/\u4e0a\u4ea4\uff09</li> <li>@\u5fc3\u5151\u76842021\u5e74\u534a\u8de8CS\u4fdd\u7814\u7ecf\u5386\uff08\u5df2\u4e0a\u5cb8pku\uff09</li> <li>@randyzhang\u76842021\u8ba1\u7b97\u673a\u8f6f\u5de5\u4fdd\u7814\u8bb0\u5f55\uff08\u5317\u5927\u8f6f\u5fae\u3001\u5357\u5927\u3001\u6d59\u5927\u3001\u54c8\u6df1\u3001\u540c\u6d4e\u3001\u534e\u79d1\u3001\u56fd\u9632\u79d1\u5927\u7b49\uff09</li> <li>@Emanual20\u76842021\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u56de\u987e\uff08\u4eba\u5927\u4fe1\u606f\u3001\u4eba\u5927\u9ad8\u74f4\u3001\u81ea\u52a8\u5316\u6240\u3001\u6e05\u6df1AI\u3001\u590d\u65e6\u8ba1\u7b97\u673a\uff09</li> <li>@xq\u522b\u7761\u4e86\u76842021\u8ba1\u7b97\u673a \u4f4erk\u4fdd\u7814\u7ecf\u5386\uff08\u4e0a\u5cb8pku\u4fe1\u79d1\uff09</li> <li>@\u8f7b\u8a00\u7684\u5982\u4f55\u8bc4\u4ef72021\u5e74\u4fdd\u7814\u590f\u4ee4\u8425\u53ca\u9884\u63a8\u514d\u5f62\u52bf\uff1f\u7684\u56de\u7b54</li> <li>@CH-2\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\u590f\u4ee4\u8425\u3001\u9884\u63a8\u514d\u8bb0\u5f55\uff08\u542bPKU\u3001THU\u3001NJU\u3001USTC\u3001WHU\u3001XJTU\u3001NSSC\u7b49\uff09</li> <li>@\u533f\u540d\u7528\u6237\u7684\u5982\u4f55\u8bc4\u4ef72021\u5e74\u4fdd\u7814\u590f\u4ee4\u8425\u53ca\u9884\u63a8\u514d\u5f62\u52bf\uff1f</li> <li>@Cyril_KI\u7684CS\u4fdd\u7814\u8bb0\u5f55\uff08211 rk2\uff0c\u5317\u90ae\u8ba1\u7b97\u673a\u5b66\u9662\u3001\u5929\u6d25\u5927\u5b66\u667a\u7b97\u5b66\u90e8\u3001\u5c71\u4e1c\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662\u3001\u5317\u5e08\u5927AI\u3001\u897f\u7535\u8ba1\u7b97\u673a\u79d1\u5b66\u4e0e\u6280\u672f\u5b66\u9662\uff09</li> <li>@Sumsky21\u7684\u5173\u4e8e\u4fdd\u7814\u7684ABC\uff083\uff09\u4e2a\u4eba\u7ecf\u5386\u4e0e\u4f53\u4f1a</li> <li>@\u738b\u4efb\u4e4b\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\uff08\u5317\u822a\u3001\u5357\u5927\u3001\u6d59\u5927\u3001\u540c\u6d4e\uff09</li> <li>@Funforever\u76842021\u67d0\u4e0d\u77e5\u540d211rank9%\u8f6f\u5de5\u4fdd\u7814&amp;\u67d0\u7f51\u7ea6\u8f66\u5927\u5382\u5b9e\u4e60\u7ecf\u9a8c\u5206\u4eab\uff08\u5c31\u4e1a\u5411\uff09</li> <li>@rookie\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814|\u4e2d\u4e5d\u4f4erk\u666e\u901a\u4eba|\u5317\u5927 \u4e0a\u4ea4cs \u590d\u65e6\u5927\u6570\u636e&amp;cs \u9762\u7ecf\u3001\u603b\u7ed3\u4ee5\u53ca\u590d\u4e60\u5efa\u8bae</li> <li>@dragon_bra\u76842021\u53a6\u95e8\u5927\u5b66CS\u4fdd\u7814\u7ecf\u5386 | \u590f\u4ee4\u8425\u6e38\u8bb0 | MAC\u5b9e\u9a8c\u5ba4</li> <li>@\u65b9\u77e5\u76842021\u4fdd\u7814\u590f\u4ee4\u8425\u7ecf\u9a8c\u8d34</li> <li>@libcso6\u7684\u3010OUC\u4fdd\u7814NO.56\u3011To\u590d\u65e6\uff1a\u4fdd\u7814\u8fb9\u7f18\uff0c\u611f\u89c9\u5bc4\u4e86\uff1f\u90a3\u5c31\u5f00\u6446\uff01</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2020","title":"2020\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@\u58a8\u4e91\u6ca7\u76842020\u8ba1\u7b97\u673a\u4e13\u4e1a\u4fdd\u7814\u7ecf\u9a8c\u8d34</li> <li>@KID22\u7684\u8ba1\u7b97\u673a\u4fdd\u7814</li> <li>@\u732a\u513f\u866b\u7684\u5c0f\u4ed3\u5e93\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u5e16 \u6e05\u534e\u00b7\u5317\u5927\u00b7\u4e0a\u4ea4\u00b7\u590d\u65e6\u00b7\u5357\u5927</li> <li>@William\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</li> <li>@50Hum\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</li> <li>@Lemon Qin\u7684\u590f\u4ee4\u8425\u9884\u63a8\u514d\u7ecf\u5386\u5c0f\u7ed3</li> <li>@SinclairWang\u7684CS\u4fdd\u7814N\u95eeN\u7b54</li> <li>@\u5f17\u5170\u80af\u65af\u5766358\u7684\u4fdd\u59c6\u7ea7\u4fdd\u7814\u6559\u5b66--\u975e\u5927\u4f6c2020\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34</li> <li>@Troyyyyyyyy\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u590f\u4ee4\u8425\u7ecf\u5386-\u5357\u5927\u3001\u6e05\u534e\u53c9\u9662\u3001\u6e05\u534e\u8d35\u7cfb...</li> <li>@\u4f36\u7235\u76842020\u8ba1\u7b97\u673a\u7c7b\u4fdd\u7814\u7ecf\u5386\u56de\u987e</li> <li>@njDDD\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\u5206\u4eab</li> <li>@\u98de\u5929\u6e38\u4fa0\u76842020\u8ba1\u7b97\u673a\u7c7b\u4fdd\u7814\u7ecf\u5386\u56de\u987e</li> <li>@sanshui\u76842021\u8ba1\u7b97\u673a\u4fdd\u7814\u4e0a\u5cb8\u7ecf\u9a8c\u8d34 \u6e05\u534e\u00b7\u4e0a\u4ea4\u00b7\u5357\u5927\u00b7\u6d59\u5927\u00b7\u5317\u822a\u00b7\u897f\u4ea4</li> <li>@rershall\u76842020\u8ba1\u7b97\u673a\u7c7b\u4fdd\u7814\u7ecf\u5386\u56de\u987e</li> <li>@Maze Runner\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u590f\u4ee4\u8425--\u590f\u5b63\u8fc7\u5f80</li> <li>@Polo\u7684\u7f51\u7edc\u5b89\u5168\u4e13\u4e1a-\u590f\u4ee4\u8425/\u9884\u63a8\u514d\u9762\u7ecf</li> <li>@\u7f8a\u7537\u7684\u4e2d\u79d1\u9662\u8ba1\u7b97\u6240\uff5c\u4e0a\u4ea4\u8f6f\u9662ipads\uff5c\u6e05\u534e\u8ba1\u7b97\u673a\u7cfb\u590f\u4ee4\u8425\u4fdd\u7814\u63a8\u514d\u7ecf\u5386</li> <li>@Alive\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u8bb0(\u6e05\u534e\uff0c\u5317\u5927\uff0c\u534e\u4e94..\uff09</li> <li>@TheTopMing\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u4e4b\u8def\uff1a211\u4e0a\u5cb8\u4e0a\u6d77985</li> <li>@\u968f\u5904\u53ef\u89c1\u7684\u6253\u5b57\u54587952\u7684\u3010\u4fdd\u7814\u7ecf\u9a8c\u3011\u6765\u81ea\u4e00\u53eafive\u7684\u4e00\u70b9\u7ecf\u9a8c\uff08\u6700\u7ec8\u53bb\u5411\uff1a\u897f\u7535\u5e7f\u7814\u9662\u4e13\u7855\uff09</li> <li>@sub_waer\u76842021\u7ea7\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386</li> <li>@\u9648\u60a3\u8005\u76842021\u5c4a-\u8ba1\u7b97\u673a\u7c7b\u8fb9\u7f18\u4eba\u58eb\u4fdd\u7814\u603b\u7ed3</li> <li>@\u738b\u68eeouc\u76842020\u4fdd\u7814\u590f\u4ee4\u8425\u2014\u2014\u65e0\u79d1\u7814\u65e0\u7ade\u8d5b\u7684\u590f\u4ee4\u8425\u4e4b\u65c5</li> <li>@\u5b66\u5206\u76842020\u5e74\u4fdd\u7814\u7533\u8bf7\u5230\u73b0\u5728\uff0c\u4f60\u7684\u60c5\u51b5\u600e\u4e48\u6837\u5462\uff1f</li> <li>@\u4e00\u8f88\u95f2\u7684\u5e72\u8d27\u6ee1\u6ee1\u76842020\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff01\uff08\u4e0a\u4ea4\u3001\u5317\u5927\u7b49\uff09</li> <li>@Annalovecoding\u76842020\u8ba1\u7b97\u673a\u3001\u4fe1\u606f\u5b89\u5168\u4fdd\u7814\u8bb0</li> <li>@\u4e00\u7a0b\u5c71\u8def\u76842020\u5e74\u8ba1\u7b97\u673a\u65b9\u5411\u590f\u4ee4\u8425\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab\uff08\u5357\u5927\uff0c\u5317\u822a\uff0c\u5929\u5927\uff0c\u5357\u5f00\uff09</li> <li>@ss-Z\u7684\"\u65e5\u6708\u661f\u8fb0\u966a\u6211\u8d70\"-2021\u8ba1\u7b97\u673a\u4fdd\u7814\u8bb0\u5f55/\u7ecf\u9a8c\u8d34</li> <li>@b\u7ad9\u4eca\u5929\u6709\u5b66\u4e60\u533a\u4e86\u5417\u7684\u3010\u8ba1\u7b97\u673a\u63a8\u514d\u3011\u5ddd\u5927\u8ba1\u7b97\u673a\u590f\u4ee4\u8425\u2014\u534e\u5357\u7406\u5de5\u8f6f\u4ef6\u9884\u63a8\u514d\u2014\u534e\u79d1\u8ba1\u7b97\u673a\u9884\u63a8\u514d\uff082020.10\uff09</li> <li>@\u84dd\u8272\u6811\u736d\u76842020CS\u5b89\u5168\u65b9\u5411\u5347\u5b66\u5c0f\u8ba1 \u4fdd\u7814\u590f\u4ee4\u8425\uff5c\u6e2f\u6821early admission</li> <li>@lfysec\u76842020CS\u4fdd\u7814\u7b14\u8bb0 &amp; \u8270\u96be2020\u603b\u7ed3</li> <li>@Ji Peng\u76842020\u5e74\u201c\u5de5\u7406\u7ecf\u7ba1\u201d\u56db\u5927\u95e8\u7c7b\u4fdd\u7814\u590f\u4ee4\u8425\u6df7\u7533\u56de\u5fc6\u5f55\uff08\u6e05\u6df1\u3001TBSI\u3001\u8ba1\u7b97\u6240\u3001\u4e0a\u4ea4\u7535\u9662\u3001\u5317\u5927\u6c47\u4e30\u7b49\u5341\u4f59\u4e2a\u9879\u76ee\uff09</li> <li>@Rogers\u535a\u7684\u9002\u5408\u5bf9\u4e8e\u6280\u672f\u4e0d\u81ea\u4fe1\uff0c\u4f46\u60f3\u51b2\u51fbtop\u5b66\u6821\u7684\u540c\u5b66\uff0c\u5c1d\u8bd5\u4e86\u5f88\u591a\u65c1\u95e8\u5de6\u9053\u7684\u201c\u5b9d\u85cf\u201d\u9879\u76ee\uff08\u6e05\u534e\u6df1\u5733\uff0c\u5357\u5927\u5de5\u7a0b\u7ba1\u7406\uff0c\u4e2d\u79d1\u5927\u82cf\u5dde\uff0c\u6d59\u5927\u6c42\u662f\u7814\u7a76\u9662\uff0c\u6b66\u5927\u4fe1\u606f\u7ba1\u7406\u7b49\uff09</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2019","title":"2019\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@\u4e00\u5cb8\u6d41\u5e74\u76842019\u5317\u7406\u8ba1\u7b97\u673a\uff0c\u5317\u822a\u8ba1\u7b97\u673a\u590f\u4ee4\u8425\uff0c\u4e2d\u79d1\u9662\u9738\u9762\u4fdd\u7814\u7ecf\u9a8c</li> <li>@Quentin Lee\u7684\u6211\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u6d41\u6c34\u8d26\uff082020\u5c4a\uff09</li> <li>@Y.Shu\u76842019\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u5386\uff1a\u6e05\u534e\u8ba1\u7b97\u673a\u00b7\u6e05\u534e\u8f6f\u9662\u00b7\u6e05\u534e\u6df1\u7814\u9662\u00b7\u5357\u5927\u8ba1\u7b97\u673a\u00b7\u6d59\u5927\u8ba1\u7b97\u673a\u7b49</li> <li>@Johnson\u7684\u30102019\u4fdd\u7814\u7ecf\u9a8c\u3011\u6e05\u534e\u8d35\u7cfb\u3001\u6e05\u534e\u8f6f\u9662\u3001\u5317\u5927\u53c9\u9662\u3001\u4e2d\u79d1\u9662\u81ea\u52a8\u5316\u6240\u7b49</li> <li>@\u5bab\u00b7\u5546\u76842019\u4e0a\u4ea4\u3001\u4e0a\u79d1\u3001\u5317\u822a\u3001\u4e2d\u79d1\u5927\u3001\u81ea\u52a8\u5316\u6240\u8ba1\u7b97\u673a\u590f\u4ee4\u8425+\u6d59\u5927\u8ba1\u7b97\u673a\u9884\u63a8\u514d\u7b80\u8bb0</li> <li>@\u5708\u5708\u76842020\u5e74\u4fdd\u7814\u7ecf\u5386</li> <li>@Ji Peng\u76842020\u5e74\u201c\u5de5\u7406\u7ecf\u7ba1\u201d\u56db\u5927\u95e8\u7c7b\u4fdd\u7814\u590f\u4ee4\u8425\u6df7\u7533\u56de\u5fc6\u5f55\uff08\u6e05\u6df1\u3001TBSI\u3001\u8ba1\u7b97\u6240\u3001\u4e0a\u4ea4\u7535\u9662\u3001\u5317\u5927\u6c47\u4e30\u7b49\u5341\u4f59\u4e2a\u9879\u76ee\uff09</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2018","title":"2018\u5e74\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@Johnny\u7684\u535a\u5ba2\u7684\u4f5b\u7cfb\u4fdd\u7814\uff1a\u7535\u6c14\u5de5\u7a0b\u8de8\u4fddAI</li> <li>@TINA\u76842018\u4fdd\u7814\u5fc3\u5f97\u4f53\u4f1a</li> <li>@\u5b59\u7b11\u5ddd\u7684\u4f4e\u4ef7\u503c\u4fdd\u7814\u7ecf\u9a8c</li> <li>@\u57fa\u672c\u6cd5\u7684\u4fdd\u7814\u5450\u5c31\u90fd\u4e0d\u77e5\u9053\uff0c\u81ea\u5df1\u5c31\u4e0d\u53ef\u4ee5\u9884\u6599</li> <li>@Smlight\u7684\u4fdd\u7814\u7ecf\u5386</li> <li>@mengwuyaaa\u7684\u6e05\u534e\u5317\u5927\u8ba1\u7b97\u6240\u81ea\u52a8\u5316\u6240\u8ba1\u7b97\u673a\u590f\u4ee4\u8425\u8be6\u7ec6\u653b\u7565</li> <li>@Zarper\u7684\u4fdd\u7814\u63a8\u514d\u7ecf\u9a8c\u5206\u4eab - \u6570\u5b66\u7cfb\u8de8\u4fdd CS </li> <li>@lhw\u7684211\u7269\u8054\u7f51\u5de5\u7a0b\u4fdd\u7814\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66cs\u81ea\u7136\u8bed\u8a00\u5904\u7406\u65b9\u5411</li> <li>@\u83dc\u5f97\u62a0\u811a\u7684\u67d0\u83dc\u5728\u5317\u822a\u3001\u4e2d\u79d1\u9662\u3001\u5357\u5f00\u7684\u8ba1\u7b97\u673a\u89c6\u89c9(CV)\u65b9\u5411\u4fdd\u7814\u7ecf\u5386</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#2017","title":"2017\u5e74\u590f\u4ee4\u8425\u603b\u7ed3\u8d34","text":"<ul> <li>@\u594b\u6597\u7684\u5c0f\u9e1flcy\u7684\u8ba1\u7b97\u673a\u4e13\u4e1a\u6691\u671f\u590f\u4ee4\u8425\u4e4b\u884c\u603b\u7ed3</li> <li>@\u897f\u7535\u738b\u5c0f\u718a\u7684[\u8bfb\u7814]\u738b\u5c0f\u718a\u7684\u63a8\u514d\u9762\u8bd5\u7ecf\u5386</li> <li>@WonderSeven\u7684\u4e2a\u4eba\u4fdd\u7814\u7ecf\u5386\u4ee5\u53ca\u7ecf\u9a8c\u5206\u4eab</li> <li>@sunrise\u7684\u535a\u5ba2\u7684\u4fdd\u7814\u7ecf\u5386-\u4ece\u4fe1\u5de5\u6240-\u56fd\u9632\u79d1\u5927-\u4e0a\u4ea4-\u6700\u540e\u786e\u5b9a\u590d\u65e6\uff08\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\uff09</li> <li>\u672c\u79d1\u56db\u975e\u4fdd\u7814\u5230\u4e86\u5317\u5927\u4fe1\u79d1\u5b66\u7855</li> <li>\u6240\u6709\u7ed3\u5c40\u5728\u52aa\u529b\u9762\u524d\u90fd\u4e0d\u6210\u656c\u610f</li> <li>@gtcer\u76842018\u5c4a\u7814\u7a76\u751f\u62db\u751f\u6691\u671f\u590f\u4ee4\u8425\u7ecf\u5386\u5206\u4eab\u2014\u2014guochengtao</li> <li>@Dracula\u7684\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_1","title":"\u5b66\u6821\u76f8\u5173","text":""},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_2","title":"\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb","text":"<ul> <li> <p>@CYMario\u7684\u6e05\u534e\u5927\u5b66\u8ba1\u7b97\u673a\u7c7b\u4e13\u4e1a\u8003\u7814/\u4fdd\u7814--\u673a\u8bd5\u7ecf\u9a8c\u8d34\uff08\u673a\u8003\u7b2c\u4e00\u5173\u4e8e\u4e0a\u673a\u8003\u8bd5\u7684\u5168\u9762\u89e3\u6790\uff09</p> </li> <li> <p>@\u9a6c\u5929\u732b\u7684\u9a6c\u5929\u732b\u7684CS\u4fdd\u7814\u7ecf\u5386</p> </li> <li>\u675c\u946b\u4e50\u7684\u675c\u946b\u4e50\uff1a\u6211\u7684\u6e05\u534e\u68a6</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_3","title":"\u6e05\u534e\u5927\u5b66\u4ea4\u53c9\u5b66\u9662","text":"<ul> <li>@\u6d6e\u69ce\u76842022\u5e74\u8ba1\u7b97\u673a\u4fdd\u7814\u7ecf\u9a8c\u8d34\uff08\u6e05\u534e\u53c9\u9662\u3001\u6e05\u534e\u8d35\u7cfb\u3001\u5317\u5927\u8ba1\u7b97\u673a\u3001\u5317\u5927\u667a\u80fd\u3001\u4e0a\u4ea4\u7535\u9662\u8ba1\u7b97\u673a\u3001\u590d\u65e6\u8ba1\u7b97\u673a\uff09</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_4","title":"\u6e05\u534e\u5927\u5b66\u7f51\u7814\u9662","text":"<ul> <li>@\u4e00\u5cb8\u6d41\u5e74\u76842019\u5e749\u6708\u6e05\u534e\u7f51\u7814\u9662\u9884\u63a8\u514d\u4fdd\u7814\u7ecf\u9a8c</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_5","title":"\u5317\u4eac\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u9662","text":"<ul> <li>@Lee\u76842017\u5317\u4eac\u5927\u5b66\u4fe1\u606f\u79d1\u5b66\u4e0e\u6280\u672f\u5b66\u9662\u590f\u4ee4\u8425\u603b\u7ed3</li> <li>@fxx\u5f88\u68d2\u68d2\u54e6\u7684\u8bb02017\u5317\u5927\u8ba1\u7b97\u6240\u590f\u4ee4\u8425\u7ecf\u5386</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_6","title":"\u5317\u4eac\u5927\u5b66\u4ea4\u53c9\u5b66\u9662","text":"<ul> <li>@shiyi001\u7684\u8bb02017\u5317\u5927\u53c9\u9662\u590f\u4ee4\u8425\u7ecf\u5386</li> <li>@zjunzhao\u76842017\u5317\u4eac\u5927\u5b66\u6570\u636e\u79d1\u5b66\u4e2d\u5fc3\u590f\u4ee4\u8425\u7ecf\u5386</li> <li>@MY_Devotion\u7684\u8bb02017\u5317\u5927\u53c9\u9662\u590f\u4ee4\u8425\u7ecf\u5386</li> <li>@MY_Devotion\u7684\u8ba1\u7b97\u673a\u7cfb\u4fdd\u7814\u590f\u4ee4\u8425\u673a\u8bd5\u653b\u7565\u7bc701\u2014\u2014\u5317\u5927\u53c9\u9662\u673a\u8bd5</li> <li>@Erin\u660e\u660e\u5982\u6708\u7684\u5317\u5927\u4ea4\u53c9\u5b66\u9662\u5927\u6570\u636e\u4e2d\u5fc3\u590f\u4ee4\u8425</li> <li>@\u4ef2\u590f123\u7684\u8bb0\u5317\u5927\u53c9\u9662\uff0c\u5317\u822a\u590f\u4ee4\u8425\u7ecf\u5386</li> <li>@leran2098\u7684\u5317\u5927\u53c9\u9662\u6570\u636e\u79d1\u5b66\u590f\u4ee4\u8425</li> <li>@yingtaomj\u7684CS\u4fdd\u7814\u7ecf\u9a8c\u8d34</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_7","title":"\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662","text":"<ul> <li>@\u51b0\u5c01\u58a8\u8005\u76842017\u4e0a\u6d77\u4ea4\u5927\u7535\u9662\u8ba1\u7b97\u673a\u81ea\u4e3b\u62db\u751f\u7ecf\u5386</li> <li>@yingtaomj\u7684CS\u4fdd\u7814\u7ecf\u9a8c\u8d34</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_8","title":"\u590d\u65e6\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662","text":"<ul> <li>@RowitZou\u7684\u590d\u65e6\u8ba1\u7b97\u673a\u590f\u4ee4\u8425\u4fdd\u7814\u8bb0</li> <li>@sunrise\u7684\u535a\u5ba2\u7684\u4fdd\u7814\u7ecf\u5386-\u4ece\u4fe1\u5de5\u6240-\u56fd\u9632\u79d1\u5927-\u4e0a\u4ea4-\u6700\u540e\u786e\u5b9a\u590d\u65e6\uff08\u4fe1\u606f\u5b89\u5168\u4e13\u4e1a\uff09</li> <li>@Hwcoder\u76842022\u4e2d\u4e5dCS\u4fdd\u7814\u56de\u5fc6\u5f55\uff08\u590d\u65e6CS/\u4eba\u5927\u9ad8\u74f4/\u5317\u5927\u8f6f\u5fae/\u79d1\u5927/\u6e05\u534e\u8f6f\u9662...\uff09</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_9","title":"\u5317\u4eac\u822a\u7a7a\u822a\u5929\u5927\u5b66\u8ba1\u7b97\u673a\u5b66\u9662","text":"<ul> <li>@EternalWang\u76842017\u5317\u822a\u8ba1\u7b97\u673a\u5b66\u9662\u590f\u4ee4\u8425\u7ecf\u5386</li> <li>@\u4ef2\u590f123\u7684\u8bb0\u5317\u5927\u53c9\u9662\uff0c\u5317\u822a\u590f\u4ee4\u8425\u7ecf\u5386</li> <li>@\u4e0d\u4f1a\u6e38\u6cf3\u7684\u9c7c\u9c7c\u9c7c\u7684\u897f\u7535to\u5317\u822a \u4e00\u8def\u4fdd\u7814\u7ecf\u9a8c\u5206\u4eab</li> <li>@Trrific\u7684\u53cc\u975eto\u5317\u822aCS\u306e\u574e\u5777\u4fdd\u7814\u8def</li> <li>@\u83dc\u5f97\u62a0\u811a\u7684\u67d0\u83dc\u6df7\u8fdb\u5317\u822a\u505a\u8ba1\u7b97\u673a\u89c6\u89c9\u7684\u4fdd\u7814\u7ecf\u5386</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_10","title":"\u4e2d\u79d1\u9662\u81ea\u52a8\u5316\u6240","text":"<ul> <li>@mallmeen\u7684\u81ea\u52a8\u5316\u62409\u6708\u63a8\u514d\u9762\u7ecf</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_11","title":"\u4e2d\u79d1\u9662\u8ba1\u7b97\u6240","text":"<ul> <li>@027b6fdc57ec\u7684\u4e2d\u79d1\u9662\u8ba1\u7b97\u6240\u9738\u9762\u7ecf\u5386</li> <li>@Tinet_\u7684\u8ba1\u7b97\u6240\u590f\u4ee4\u8425\u7ecf\u5386</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_12","title":"\u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240","text":"<ul> <li>@\u547c\u5566\u5566\u8471\u76847.17-7.21\u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240\u590f\u4ee4\u8425</li> <li>@banpicai9259\u7684 2017\u4fdd\u7814\u2014\u2014\u8f6f\u4ef6\u6240\u590f\u4ee4\u8425\u4eb2\u4f53\u9a8c</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_13","title":"\u4e2d\u79d1\u9662\u4fe1\u5de5\u6240","text":"<ul> <li>@\u547c\u5566\u5566\u8471\u76847.9-7.15\u4e2d\u79d1\u9662\u4fe1\u5de5\u6240\u7b2c\u4e00\u6279\u590f\u4ee4\u8425</li> <li>@rebirthwyw\u7684\u4fe1\u5de5\u6240\u516d\u5ba4\u9762\u8bd5\u7ecf\u5386</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_14","title":"\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u7cfb","text":"<ul> <li>@\u6817\u5b50\u6817\u5b50\u76842017\u5357\u4eac\u5927\u5b66\u8ba1\u7b97\u673a\u5f00\u653e\u65e5\u673a\u8bd5\u9898\u89e3</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_15","title":"\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66","text":"<ul> <li>@lhw\u7684211\u7269\u8054\u7f51\u5de5\u7a0b\u4fdd\u7814\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66cs\u81ea\u7136\u8bed\u8a00\u5904\u7406\u65b9\u5411</li> </ul>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#_16","title":"\u5357\u5f00\u5927\u5b66\u8f6f\u4ef6\u5b66\u9662","text":"<ul> <li>@gtcer\u76842018\u5c4a\u7814\u7a76\u751f\u62db\u751f\u6691\u671f\u590f\u4ee4\u8425\u7ecf\u5386\u5206\u4eab\u2014\u2014guochengtao</li> </ul> <p>\u611f\u8c22\u4ee5\u4e0a\u6240\u6709\u540c\u5b66\u7684\u65e0\u79c1\u5206\u4eab~ \u8c22\u8c22\u5927\u5bb6~ \u611f\u8c22\u524d\u4efb\u7fa4\u4e3b\u548c\u5b66\u957f\u4eecshiyi001\u3001hcy\u3001Andy Zheng\u3001BoJack\u3001\u58a8\u4e91\u6ca7\uff08\u864e\u54e5\uff09\u548c\u963f\u5c14\u6cd5\u6768XDU\uff08\u6768\u795e\uff09\u7684\u6536\u96c6\u548c\u6574\u7406\uff0c\u4fdd\u7814\u7ecf\u9a8c\u8d34\u3001\u590f\u4ee4\u8425\u4fe1\u606f\u548c\u9884\u63a8\u514d\u4fe1\u606f\u4ee5\u540e\u5c06\u7edf\u4e00\u5728\u672c\u9879\u76ee\u4e2d\u66f4\u65b0\u3002</p>"},{"location":"%E4%BF%9D%E7%A0%94%E7%BB%8F%E9%AA%8C%E5%B8%96/#copyright","title":"Copyright","text":"<pre><code># Copyright      2023  (Yifan   Yang, https://github.com/yfyeung,\n#                       Renbiao Liu,  https://github.com/richardodliu,\n#                       Wenhao  Yang, https://github.com/Alpha-Yang,\n#                       Zengkai Peng, https://github.com/zengkaipeng,\n#                       Ziyang  Ma,   https://github.com/ddlBoJack)\n#\n# See ../LICENSE for clarification regarding multiple authors\n#\n# Licensed under the GNU GENERAL PUBLIC LICENSE (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     https://www.gnu.org/licenses/gpl-3.0.html\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n</code></pre>"},{"location":"%E5%A1%AB%E6%8A%A5%E6%8C%87%E5%8D%97/%E5%A1%AB%E6%8A%A5%E6%8C%87%E5%8D%97/","title":"\u586b\u62a5\u6307\u5357","text":"<p>\u8be6\u89c1\u586b\u62a5\u6307\u5357 PDF</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/","title":"\u590d\u4e60\u8d44\u6599\u603b\u89c8","text":"<ul> <li>\u767e\u9762\u673a\u5668\u5b66\u4e60\uff1a\u7b97\u6cd5\u5de5\u7a0b\u5e08\u5e26\u4f60\u53bb\u9762\u8bd5</li> <li>\u673a\u5668\u5b66\u4e60\u4e0e\u6df1\u5ea6\u5b66\u4e60\u4e60\u9898\u96c6-1</li> <li>\u673a\u5668\u5b66\u4e60\u4e0e\u6df1\u5ea6\u5b66\u4e60\u4e60\u9898\u96c6-2</li> </ul>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/","title":"\u5176\u4ed6\u683c\u5f0f\u7684\u590d\u4e60\u8d44\u6599","text":"<ul> <li>2018\u4e0a\u673a\u771f\u987b\u77e5.docx</li> <li>2019\u4e0a\u673a\u987b\u77e5jpeg</li> <li>acm\u6a21\u677f.pdf</li> <li>\u4e0a\u6d77\u4ea4\u5927ACM\u6a21\u677f.pdf</li> <li>ACM\u6a21\u677f-f_zyj%20v%202.1.pdf</li> <li>acm\u6a21\u677f.html</li> <li>\u53c2\u8003.pdf</li> <li>\u7b97\u6cd5\u7ade\u8d5b\u5165\u95e8\u7ecf\u5178 \u7b2c2\u7248.pdf</li> <li>\u8003\u7814\u673a\u8bd5\u653b\u7565.pdf</li> <li>\u8ba1\u7b97\u673a\u8003\u7814\u673a\u8bd5\u653b\u7565-\u6ee1\u5206\u7bc7.pdf</li> <li>\u8bad\u7ec3\u8425OJ\u5b8c\u6574\u7248.pdf</li> </ul>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/","title":"\u6570\u5b66\u6a21\u677f","text":"<ul> <li>\u6570\u5b66\u6a21\u677f<ul> <li>\u7d20\u6570\u6253\u8868</li> <li>\u6c42\u6392\u5217\u7ec4\u5408\u6570</li> <li>\u884c\u5217\u5f0f\u8ba1\u7b97</li> <li>Ronberg\u7b97\u6cd5\u8ba1\u7b97\u79ef\u5206</li> <li>\u7ec4\u5408\u5e8f\u5217</li> <li>\u6700\u5927\u516c\u7ea6\u6570\u3001\u6700\u5c0f\u516c\u500d\u6570</li> <li>\u4efb\u610f\u8fdb\u5236\u8f6c\u6362</li> <li>\u5927\u6570\u95ee\u9898<ul> <li>\u5927\u6570\u9636\u4e58</li> <li>\u5927\u6570\u52a0\u6cd5</li> <li>\u5927\u6570\u51cf\u6cd5(\u672a\u5904\u7406\u8d1f\u6570\u60c5\u51b5)</li> <li>\u5927\u6570\u4e58\u6cd5(\u5927\u6570\u4e58\u5c0f\u6570)</li> <li>\u5927\u6570\u4e58\u6cd5(\u5927\u6570\u4e58\u5927\u6570)</li> <li>\u5927\u6570\u6bd4\u8f83</li> </ul> </li> </ul> </li> </ul>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_2","title":"\u7d20\u6570\u6253\u8868","text":"<pre><code>/*\n\u8bed\u6cd5\uff1aprimetable(n,prime)\n\n\u5934\u6587\u4ef6\uff1astdio.h string.h\n\n\u53c2\u6570\uff1a\nm\uff1a\u6c42\u5c0f\u4e8e\u7b49\u4e8en\u7684\u7d20\u6570\u7684\u4e2a\u6570\u4e2d\u7684n\nprime\uff1a\u5b58\u7d20\u6570\u7684\u6570\u7ec4\n\u8fd4\u56de\u503c\uff1anull\n\n*/\n\n/*\u6c42\u5c0f\u4e8e\u7b49\u4e8en\u7684\u7d20\u6570\u7684\u4e2a\u6570*/\nint prime[100001];//\u5b58\u7d20\u6570 \nvoid primetable(int n,int prime[])\n{\n    int cnt = 0;\n    bool vis[100001];//\u4fdd\u8bc1\u4e0d\u505a\u7d20\u6570\u7684\u500d\u6570 \n    memset(vis, false, sizeof(vis));//\u521d\u59cb\u5316 \n    memset(prime, 0, sizeof(prime));\n    for(int i = 2; i &lt;= n; i++)\n    {\n        if(!vis[i])//\u4e0d\u662f\u76ee\u524d\u627e\u5230\u7684\u7d20\u6570\u7684\u500d\u6570 \n        prime[cnt++] = i;//\u627e\u5230\u7d20\u6570~ \n        for(int j = 0; j&lt;cnt &amp;&amp; i*prime[j]&lt;=n; j++)\n        {\n            vis[i*prime[j]] = true;//\u627e\u5230\u7684\u7d20\u6570\u7684\u500d\u6570\u4e0d\u8bbf\u95ee \n            if(i % prime[j] == 0) break;//\u5173\u952e\uff01\uff01\uff01\uff01 \n        }\n    }\n    printf(\"%d\\n\", cnt);\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_3","title":"\u6c42\u6392\u5217\u7ec4\u5408\u6570","text":"<pre><code>/*\n\u8bed\u6cd5\uff1aresult=P(long n,long m); / result=long C(long n,long m);\n\n\u53c2\u6570\uff1a\nm\uff1a\u6392\u5217\u7ec4\u5408\u7684\u4e0a\u7cfb\u6570\nn\uff1a\u6392\u5217\u7ec4\u5408\u7684\u4e0b\u7cfb\u6570\n\u8fd4\u56de\u503c\uff1a\u6392\u5217\u7ec4\u5408\u6570\n\n\u6ce8\u610f\uff1a\n\u7b26\u5408\u6570\u5b66\u89c4\u5219\uff1am&lt;\uff1dn\n*/\nlong P(long n,long m)\n{\n    long p=1;\n    while(m!=0)\n        {p*=n;n--;m--;}\n    return p;\n} \n\nlong C(long n,long m)\n{\n    long i,c=1;\n    i=m;\n    while(i!=0)\n        {c*=n;n--;i--;}\n    while(m!=0)\n        {c/=m;m--;}\n    return c;\n} \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_4","title":"\u884c\u5217\u5f0f\u8ba1\u7b97","text":"<pre><code>/*\n\u8bed\u6cd5\uff1aresult=js(int s[][],int n)\n\n\u53c2\u6570\uff1a\ns[][]\uff1a\u884c\u5217\u5f0f\u5b58\u50a8\u6570\u7ec4\nn\uff1a\u884c\u5217\u5f0f\u7ef4\u6570\uff0c\u9012\u5f52\u7528\n\u8fd4\u56de\u503c\uff1a\u884c\u5217\u5f0f\u503c\n\n\u6ce8\u610f\uff1a\u51fd\u6570\u4e2d\u5e38\u6570N\u4e3a\u884c\u5217\u5f0f\u7ef4\u5ea6\uff0c\u9700\u81ea\u884c\u5b9a\u4e49\n*/\n\nint s[][N],n; \nint js(s,n) {\n    int z,j,k,r,total=0; \n    int b[N][N]; \n    if(n&gt;2)\n        {\n        for(z=0;z&lt;n;z++) \n            {\n            for(j=0;j&lt;n-1;j++) \n                 for(k=0;k&lt;n-1;k++){\n                        if(k&gt;=z) b[j][k]=s[j+1][k+1]; \n                        else b[j][k]=s[j+1][k];\n                        }\n            if(z%2==0) r=s[0][z]*js(b,n-1);  \n            else r=(-1)*s[0][z]*js(b,n-1); \n            total=total+r; \n            } \n        } \n    else if(n==2)\n       total=s[0][0]*s[1][1]-s[0][1]*s[1][0]; \n    return total; \n} \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#ronberg","title":"Ronberg\u7b97\u6cd5\u8ba1\u7b97\u79ef\u5206","text":"<pre><code>/*\n\u8bed\u6cd5\uff1aresult=integral(double a,double b);\n\n\u5934\u6587\u4ef6\uff1amath.h\n\n\u53c2\u6570\uff1a\na\uff1a\u79ef\u5206\u4e0a\u9650\nb\uff1a\u79ef\u5206\u4e0b\u9650\nfunction f\uff1a\u79ef\u5206\u51fd\u6570\n\u8fd4\u56de\u503c\uff1af\u5728\uff08a,b\uff09\u4e4b\u95f4\u7684\u79ef\u5206\u503c\n\n\u6ce8\u610f\uff1a\nfunction f(x)\u9700\u8981\u81ea\u884c\u4fee\u6539\uff0c\u7a0b\u5e8f\u4e2d\u7528\u7684\u662fsina(x)/x\n\u9ed8\u8ba4\u7cbe\u5ea6\u8981\u6c42\u662f1e-5\n*/\ndouble f(double x)\n{ \n    return sin(x)/x; //\u5728\u8fd9\u91cc\u63d2\u5165\u88ab\u79ef\u51fd\u6570 \n}\n\ndouble integral(double a,double b) \n{ \n    double h=b-a; \n    double t1=(1+f(b))*h/2.0;\n    int k=1; \n    double r1,r2,s1,s2,c1,c2,t2; \nloop: \n    double s=0.0; \n    double x=a+h/2.0; \n    while(x&lt;b) \n        { \n        s+=f(x); \n        x+=h; \n        } \n    t2=(t1+h*s)/2.0;\n    s2=t2+(t2-t1)/3.0;\n    if(k==1)\n      { \n        k++;h/=2.0;t1=t2;s1=s2;\n        goto loop; \n        } \n    c2=s2+(s2-s1)/15.0; \n    if(k==2){ \n        c1=c2;k++;h/=2.0; \n        t1=t2;s1=s2; \n        goto loop; \n        } \n    r2=c2+(c2-c1)/63.0; \n    if(k==3){ \n        r1=r2; c1=c2;k++; \n        h/=2.0; \n        t1=t2;s1=s2;\n        goto loop; \n        } \n    while(fabs(1-r1/r2)&gt;1e-5){ \n        r1=r2;c1=c2;k++;\n        h/=2.0; \n        t1=t2;s1=s2; \n        goto loop; \n        } \n    return r2;\n} \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_5","title":"\u7ec4\u5408\u5e8f\u5217","text":"<pre><code>/*\n\u8bed\u6cd5\uff1am_of_n(int m, int n1, int m1, int* a, int head)\n\n\u53c2\u6570\uff1a\nm\uff1a\u7ec4\u5408\u6570C\u7684\u4e0a\u53c2\u6570\nn1\uff1a\u7ec4\u5408\u6570C\u7684\u4e0b\u53c2\u6570\nm1\uff1a\u7ec4\u5408\u6570C\u7684\u4e0a\u53c2\u6570\uff0c\u9012\u5f52\u4e4b\u7528\n*a\uff1a1\uff5en\u7684\u6574\u6570\u5e8f\u5217\u6570\u7ec4\nhead\uff1a\u5934\u6307\u9488\n\n\u8fd4\u56de\u503c\uff1anull\n\n\u6ce8\u610f\uff1a*a\u9700\u8981\u81ea\u884c\u4ea7\u751f\n\u521d\u59cb\u8c03\u7528\u65f6\uff0cm=m1\u3001head=0\n\u8c03\u7528\u4f8b\u5b50\uff1a\u6c42C(m,n)\u5e8f\u5217\uff1am_of_n(m,n,m,a,0);\n*/\n\nvoid m_of_n(int m, int n1, int m1, int* a, int head) \n{ \n    int i,t; \n    if(m1&lt;0 || m1&gt;n1) return; \n\n    if(m1==n1) \n        { \n        for(i=0;i&lt;m;i++) cout&lt;&lt;a[i]&lt;&lt;' '; // \u8f93\u51fa\u5e8f\u5217 \n        cout&lt;&lt;'\\n'; \n        return; \n        } \n    m_of_n(m,n1-1,m1,a,head); // \u9012\u5f52\u8c03\u7528 \n    t=a[head];a[head]=a[n1-1+head];a[n1-1+head]=t;\n    m_of_n(m,n1-1,m1-1,a,head+1); // \u518d\u6b21\u9012\u5f52\u8c03\u7528 \n    t=a[head];a[head]=a[n1-1+head];a[n1-1+head]=t;\n} \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_6","title":"\u6700\u5927\u516c\u7ea6\u6570\u3001\u6700\u5c0f\u516c\u500d\u6570","text":"<pre><code>/*\n\u8bed\u6cd5\uff1aresulet=hcf(int a,int b)\u3001result=lcd(int a,int b)\n\n\u53c2\u6570\uff1a\na\uff1aint a\uff0c\u6c42\u6700\u5927\u516c\u7ea6\u6570\u6216\u6700\u5c0f\u516c\u500d\u6570\nb\uff1aint b\uff0c\u6c42\u6700\u5927\u516c\u7ea6\u6570\u6216\u6700\u5c0f\u516c\u500d\u6570\n\n\u8fd4\u56de\u503c\uff1a\u8fd4\u56de\u6700\u5927\u516c\u7ea6\u6570\uff08hcf\uff09\u6216\u6700\u5c0f\u516c\u500d\u6570\uff08lcd\uff09\n\n\u6ce8\u610f\uff1alcd \u9700\u8981\u8fde\u540c hcf \u4f7f\u7528\n*/\n\nint hcf(int a,int b)\n{\n    int r=0;\n    while(b!=0)\n        {\n        r=a%b;\n        a=b;\n        b=r;\n        }\n    return(a);\n} \n\nlcd(int u,int v,int h)\n{\n    return(u*v/h);\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_7","title":"\u4efb\u610f\u8fdb\u5236\u8f6c\u6362","text":"<pre><code>/*\n\u8bed\u6cd5\uff1aconversion(char s1[],char s2[],long d1,long d2);\n\n\u53c2\u6570\uff1a\ns[]\uff1a\u539f\u8fdb\u5236\u6570\u5b57\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\ns2[]\uff1a\u8f6c\u6362\u7ed3\u679c\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\nd1\uff1a\u539f\u8fdb\u5236\u6570\nd2\uff1a\u9700\u8981\u8f6c\u6362\u5230\u7684\u8fdb\u5236\u6570\n\n\u8fd4\u56de\u503c\uff1a\nnull\n\n\u6ce8\u610f\uff1a\n\u9ad8\u4e8e9\u7684\u4f4d\u6570\u7528\u5927\u5199'A'\uff5e'Z'\u8868\u793a\uff0c2\uff5e16\u4f4d\u8fdb\u5236\u901a\u8fc7\u9a8c\u8bc1\n*/\nvoid conversion(char s[],char s2[],long d1,long d2)\n{\n    long i,j,t,num;\n    char c;\n    num=0;\n    for (i=0;s[i]!='\\0';i++)\n        {\n        if (s[i]&lt;='9'&amp;&amp;s[i]&gt;='0') t=s[i]-'0'; else t=s[i]-'A'+10;\n        num=num*d1+t;\n        }\n    i=0;\n    while(1)\n        {\n        t=num;\n        if (t&lt;=9) s2[i]=t+'0'; else s2[i]=t+'A'-10;\n        num/=d2;\n        if (num==0) break;\n        i++;\n        }\n    for (j=0;j&lt;i/2;j++)\n        {c=s2[j];s2[j]=s[i-j];s2[i-j]=c;}\n    s2[i+1]='\\0';\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_8","title":"\u5927\u6570\u95ee\u9898","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_9","title":"\u5927\u6570\u9636\u4e58","text":"<pre><code>/* \n\u8bed\u6cd5\uff1aint result=factorial(int n);\n\n\u5934\u6587\u4ef6\uff1amath.h stdio.h\n\n\u53c2\u6570\uff1a\nn\uff1an \u7684\u9636\u4e58\n\u8fd4\u56de\u503c\uff1a\u9636\u4e58\u7ed3\u679c\u7684\u4f4d\u6570\n\n\u6ce8\u610f\uff1a\n\u672c\u7a0b\u5e8f\u76f4\u63a5\u8f93\u51fan!\u7684\u7ed3\u679c\uff0c\u9700\u8981\u8fd4\u56de\u7ed3\u679c\u8bf7\u4fdd\u7559long a[]\n*/\n\nint factorial(int n){\n      long a[10000];\n      int i,j,l,c,m=0,w; \n      a[0]=1; \n      for(i=1;i&lt;=n;i++)\n          { \n          c=0; \n          for(j=0;j&lt;=m;j++)\n              { \n              a[j]=a[j]*i+c; \n              c=a[j]/10000; \n              a[j]=a[j]%10000; \n          } \n          if(c&gt;0) {m++;a[m]=c;} \n      } \n      w=m*4+log10((double)a[m])+1;\n      printf(\"%ld\",a[m]); \n      for(i=m-1;i&gt;=0;i--) printf(\"%4.4ld\",a[i]);\n      return w;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_10","title":"\u5927\u6570\u52a0\u6cd5","text":"<pre><code>/*\n\u00a0     \u8bed\u6cd5\uff1aadd(char a[],char b[],char s[]);\n\u00a0     \n\u00a0     \u5934\u6587\u4ef6\uff1astring.h\n\n\u00a0 \u00a0 \u00a0 \u53c2\u6570\uff1a\n\u00a0 \u00a0 \u00a0 a[]\uff1a\u88ab\u52a0\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 b[]\uff1a\u52a0\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 s[]\uff1a\u7ed3\u679c\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\n\u00a0 \u00a0 \u00a0 \u8fd4\u56de\u503c\uff1anull\n\n\u00a0 \u00a0 \u00a0 \u6ce8\u610f\uff1a\u00a0\n\u00a0 \u00a0 \u00a0\u00a0\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a o(n^2)\n*/\n\nvoid add(char a[],char b[],char back[]){\n          int i,j,k,up,x,y,z,l;\n          char *c;\n          if (strlen(a)&gt;strlen(b)) \n          l=strlen(a)+2; \n          else l=strlen(b)+2;\n          c=(char *) malloc(l*sizeof(char));\n          i=strlen(a)-1;\n          j=strlen(b)-1;\n          k=0;up=0;\n          while(i&gt;=0||j&gt;=0)\n              {\n                  if(i&lt;0) x='0'; else x=a[i];\n                  if(j&lt;0) y='0'; else y=b[j];\n                  z=x-'0'+y-'0';\n                  if(up) z+=1;\n                  if(z&gt;9) {up=1;z%=10;} else up=0;\n                  c[k++]=z+'0';\n                  i--;j--;\n              }\n          if(up) c[k++]='1';\n          i=0;\n          c[k]='\\0';\n          for(k-=1;k&gt;=0;k--)\n              back[i++]=c[k];\n          back[i]='\\0';\n      }\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_11","title":"\u5927\u6570\u51cf\u6cd5(\u672a\u5904\u7406\u8d1f\u6570\u60c5\u51b5)","text":"<pre><code>/*\n  \u8bed\u6cd5\uff1asub(char s1[],char s2[],char t[]);\n\n  \u5934\u6587\u4ef6\uff1astring.h\n\n\u00a0 \u00a0 \u00a0\u53c2\u6570\uff1a\n\u00a0 \u00a0 \u00a0 s1[]\uff1a\u88ab\u51cf\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 s2[]\uff1a\u51cf\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 t[]\uff1a\u7ed3\u679c\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\n\u00a0 \u00a0 \u00a0 \u8fd4\u56de\u503c\uff1anull\n\n\u00a0 \u00a0 \u00a0 \u6ce8\u610f\uff1a\u00a0\n\u00a0\u00a0 \u00a0 \u00a0\u9ed8\u8ba4s1&gt;=s2\uff0c\u7a0b\u5e8f\u672a\u5904\u7406\u8d1f\u6570\u60c5\u51b5(\u5012\u8fc7\u6765\u52a0\u7b26\u53f7)\n\u00a0 \u00a0\n*/\nvoid sub(char s1[],char s2[],char t[])\n      {\n          int i,l2,l1,k;\n          l2=strlen(s2);l1=strlen(s1);\n          t[l1]='\\0';l1--;\n          for (i=l2-1;i&gt;=0;i--,l1--)\n              {\n              if (s1[l1]-s2[i]&gt;=0) \n                  t[l1]=s1[l1]-s2[i]+'0';\n              else\n                  {\n                  t[l1]=10+s1[l1]-s2[i]+'0';\n                  s1[l1-1]=s1[l1-1]-1;\n                  }\n              }\n          k=l1;\n          while(s1[k]&lt;0) {s1[k]+=10;s1[k-1]-=1;k--;}\n          while(l1&gt;=0) {t[l1]=s1[l1];l1--;}\n      loop:\n          if (t[0]=='0') \n              {\n              l1=strlen(s1);\n              for (i=0;i&lt;l1-1;i++) t[i]=t[i+1];\n              t[l1-1]='\\0';\n              goto loop;\n              }\n          if (strlen(t)==0){t[0]='0';t[1]='\\0';}\n      } \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_12","title":"\u5927\u6570\u4e58\u6cd5(\u5927\u6570\u4e58\u5c0f\u6570)","text":"<pre><code>/*\n  \u8bed\u6cd5\uff1amult(char c[],char t[],int m);\n\n  \u5934\u6587\u4ef6\uff1astring.h\n\n\u00a0 \u00a0 \u00a0\u53c2\u6570\uff1a\n\u00a0 \u00a0 \u00a0 c[]\uff1a\u88ab\u4e58\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 t[]\uff1a\u7ed3\u679c\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\u00a0\n\u00a0 \u00a0 \u00a0 m\uff1a\u4e58\u6570\uff0c\u9650\u5b9a10\u4ee5\u5185\n\u00a0 \u00a0 \u00a0 \u8fd4\u56de\u503c\uff1anull\n*/\n\nvoid mult(char c[],char t[],int m)\n      {\n          int i,l,k,flag,add=0;\n          char s[100];\n          l=strlen(c);\n          for (i=0;i&lt;l;i++)\n              s[l-i-1]=c[i]-'0'; \n          for (i=0;i&lt;l;i++)\n                 {\n                 k=s[i]*m+add;\n                 if (k&gt;=10) {s[i]=k%10;add=k/10;flag=1;} else \n      {s[i]=k;flag=0;add=0;}\n                 }\n          if (flag) {l=i+1;s[i]=add;} else l=i;\n          for (i=0;i&lt;l;i++)\n              t[l-1-i]=s[i]+'0';\n          t[l]='\\0';\n      }\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_13","title":"\u5927\u6570\u4e58\u6cd5(\u5927\u6570\u4e58\u5927\u6570)","text":"<pre><code>/*\n  \u8bed\u6cd5\uff1amult(char a[],char b[],char s[]);\n\n  \u5934\u6587\u4ef6\uff1astring.h\n\n\u00a0 \u00a0 \u00a0\u53c2\u6570\uff1a\n\u00a0 \u00a0 \u00a0 a[]\uff1a\u88ab\u4e58\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 b[]\uff1a\u4e58\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 t[]\uff1a\u7ed3\u679c\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\n\u00a0 \u00a0 \u00a0 \u8fd4\u56de\u503c\uff1anull\n\n\u00a0 \u00a0 \u00a0 \u6ce8\u610f\uff1a\u00a0\n\u00a0\u00a0 \u00a0 \u00a0\u7a7a\u95f4\u590d\u6742\u5ea6\u4e3a o(n^2)\n*/\n\nvoid mult(char a[],char b[],char s[])\n      {\n          int i,j,k=0,alen,blen,sum=0,res[65][65]={0},flag=0;\n          char result[65];\n          alen=strlen(a);blen=strlen(b); \n          for (i=0;i&lt;alen;i++)\n          for (j=0;j&lt;blen;j++) res[i][j]=(a[i]-'0')*(b[j]-'0');\n          for (i=alen-1;i&gt;=0;i--)\n              {\n                  for (j=blen-1;j&gt;=0;j--) sum=sum+res[i+blen-j-1][j];\n                  result[k]=sum%10;\n                  k=k+1;\n                  sum=sum/10;\n              }\n          for (i=blen-2;i&gt;=0;i--)\n              {\n                  for (j=0;j&lt;=i;j++) sum=sum+res[i-j][j];\n                  result[k]=sum%10;\n                  k=k+1;\n                  sum=sum/10;\n              }\n          if (sum!=0) {result[k]=sum;k=k+1;}\n          for (i=0;i&lt;k;i++) result[i]+='0';\n          for (i=k-1;i&gt;=0;i--) s[i]=result[k-1-i];\n          s[k]='\\0';\n          while(1)\n              {\n              if (strlen(s)!=strlen(a)&amp;&amp;s[0]=='0') \n                  strcpy(s,s+1);\n              else\n                  break;\n              }\n      }\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/math/#_14","title":"\u5927\u6570\u6bd4\u8f83","text":"<pre><code>/*\n  \u8bed\u6cd5\uff1aint compare(char a[],char b[]);\n\n\u00a0 \u00a0 \u00a0\u00a0\u53c2\u6570\uff1a\u00a0\n\u00a0 \u00a0 \u00a0\u00a0a[]\uff1a\u88ab\u6bd4\u8f83\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\u00a0 \u00a0 \u00a0 b[]\uff1a\u6bd4\u8f83\u6570\uff0c\u7528\u5b57\u7b26\u4e32\u8868\u793a\uff0c\u4f4d\u6570\u4e0d\u9650\n\n\u00a0 \u00a0 \u00a0\u00a0\u8fd4\u56de\u503c: \n\u00a0 \u00a0 \u00a0\u00a00\u00a0 \u00a0 a&lt;b\n\u00a0 \u00a0 \u00a0\u00a01\u00a0 \u00a0 a&gt;b\n\u00a0 \u00a0 \u00a0\u00a02\u00a0 \u00a0 a=b\n*/\n\nint compare(char a[], char b[])  \n{  \n    int lena=strlen(a);  \n    int lenb=strlen(b);  \n    if(lena&gt;lenb)  \n        return 1;  \n    else if(lena&lt;lenb)  \n        return 0;  \n    for(int i=0;i&lt;lena;i++)  \n    {  \n        if(a[i]&gt;b[i])  \n            return 1;  \n        else if(a[i]&lt;b[i])  \n            return 0;  \n    }  \n    return 2;  \n} \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/","title":"\u56fe\u4e0e\u6811","text":"<p>[toc]</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/#_2","title":"\u56fe\u6a21\u677f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b) )\n\n//\u5b9a\u4e49\u56fe\u7684\u5b9a\u70b9\ntypedef struct Vertex {\n    int id;\n    vector&lt;int&gt; connectors;    //\u5b58\u50a8\u8282\u70b9\u7684\u540e\u7eed\u8fde\u63a5\u9876\u70b9\u7f16\u53f7\n    Vertex() : id(-1) {}\n    Vertex(int nid) : id(nid) {}\n} Vertex;\n\n//\u5b9a\u4e49Graph\u7684\u90bb\u63a5\u8868\u8868\u793a\ntypedef struct Graph {\n    vector&lt;Vertex&gt; vertexs;   //\u5b58\u50a8\u5b9a\u70b9\u4fe1\u606f\n    int nVertexs;             //\u8ba1\u6570\uff1a\u90bb\u63a5\u6570\n    bool isDAG;               //\u6807\u5fd7\uff1a\u662f\u6709\u5411\u56fe\u5417\n\n    Graph(int n, bool isDAG) : nVertexs(n), isDAG(isDAG) { vertexs.resize(n); }\n\n    //\u5411\u56fe\u4e2d\u6dfb\u52a0\u8fb9\n    bool addEdge(int id1, int id2) {\n        if (!(MAX(id1, id2) &lt; vertexs.size())) return false;\n\n        if (isDAG) {\n            vertexs[id1].connectors.push_back(id2);\n        }\n        else {\n            vertexs[id1].connectors.push_back(id2);\n            vertexs[id2].connectors.push_back(id1);\n        }\n        return true;\n    }\n\n    //\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n    vector&lt;int&gt; BFS(int start) {\n        set&lt;int&gt; visited;\n        vector&lt;int&gt; g, rst;\n        g.push_back(start);\n        visited.insert(start);\n        while(g.size() &gt; 0) {\n            int id = g[0];          \n            g.erase(g.begin());\n            rst.push_back(id);\n            for(int i = 0; i &lt; vertexs[id].connectors.size(); i++) {\n                int id1 = vertexs[id].connectors[i];\n                if (visited.count(id1) == 0) {\n                    g.push_back(id1);\n                    visited.insert(id1);\n                }\n            }\n        }\n        return rst;\n    }\n\n    //\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n    vector&lt;int&gt; DFS(int start) {\n        set&lt;int&gt; visited;\n        vector&lt;int&gt; g, rst;\n        g.push_back(start);\n        //cout &lt;&lt; \"push \" &lt;&lt; start &lt;&lt; \" \";\n        visited.insert(start);\n        rst.push_back(start);\n        bool found;\n        while(g.size() &gt; 0) {\n            int id = g[g.size()-1];         \n            found = false;\n            for(int i = 0; i &lt; vertexs[id].connectors.size(); i++) {\n                int id1 = vertexs[id].connectors[i];\n                if (visited.count(id1) == 0) {\n                    g.push_back(id1);\n                    rst.push_back(id1);\n                    visited.insert(id1);\n                    //cout &lt;&lt; \"push \" &lt;&lt; id1 &lt;&lt; \" \";\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                int id2 = g[g.size()-1];\n                rst.push_back(-1 * id2);\n                //cout &lt;&lt; \"pop \" &lt;&lt; id2 &lt;&lt; \" \";\n                g.pop_back();\n            }\n        }\n        //cout &lt;&lt; endl;\n        return rst;\n    }\n} Graph;\n\nint main() {\n    Graph g(8, false);\n    g.addEdge(0, 1);\n    g.addEdge(0, 3);\n    g.addEdge(1, 2);\n    g.addEdge(3, 4);\n    g.addEdge(3, 5);\n    g.addEdge(4, 5);\n    g.addEdge(4, 6);    \n    g.addEdge(5, 6);\n    g.addEdge(5, 7);    \n    g.addEdge(6, 7);\n    vector&lt;int&gt; bv = g.BFS(0);\n    cout &lt;&lt; \"\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u8282\u70b9\u987a\u5e8f\uff1a\";\n    for(int j = 0; j &lt; bv.size(); j++)\n        cout &lt;&lt; bv[j] &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u8282\u70b9\u987a\u5e8f\uff1a\";\n    Graph g1(6, false);\n    g1.addEdge(0, 1);\n    g1.addEdge(0, 4);\n    g1.addEdge(0, 5);\n    g1.addEdge(1, 5);\n    g1.addEdge(4, 5);\n    g1.addEdge(5, 2);\n    g1.addEdge(5, 3);\n    g1.addEdge(2, 3);\n    vector&lt;int&gt; route = g1.DFS(0);\n    for(int i = 0; i &lt; route.size(); i++)\n        cout &lt;&lt; route[i] &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n\n    char ch;\n    cin &gt;&gt; ch;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/#2019-1","title":"2019-1","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b) )\nusing namespace std;\nint n,m;\nvector&lt;int&gt; inDegreelist,outDegreelist;\n\n//\u5b9a\u4e49\u56fe\u7684\u5b9a\u70b9\ntypedef struct Vertex {\n    int id,inDegree,outDegree;\n    vector&lt;int&gt; connectors;    //\u5b58\u50a8\u8282\u70b9\u7684\u540e\u7eed\u8fde\u63a5\u9876\u70b9\u7f16\u53f7\n    Vertex() : id(-1),inDegree(0),outDegree(0) {}\n    Vertex(int nid) : id(nid),inDegree(0),outDegree(0) {}\n} Vertex;\n\n//\u5b9a\u4e49Graph\u7684\u90bb\u63a5\u8868\u8868\u793a\ntypedef struct Graph {\n    vector&lt;Vertex&gt; vertexs;   //\u5b58\u50a8\u5b9a\u70b9\u4fe1\u606f\n    int nVertexs;             //\u8ba1\u6570\uff1a\u90bb\u63a5\u6570\n    bool isDAG;               //\u6807\u5fd7\uff1a\u662f\u6709\u5411\u56fe\u5417\n\n    Graph(int n, bool isDAG) : nVertexs(n), isDAG(isDAG) { vertexs.resize(n); }\n    Graph() : nVertexs(1), isDAG(1) { vertexs.resize(1); }\n    //\u5411\u56fe\u4e2d\u6dfb\u52a0\u8fb9\n    bool addEdge(int id1, int id2) {\n        if (!(MAX(id1, id2) &lt; vertexs.size())) return false;\n\n        if (isDAG) {\n            vertexs[id1].connectors.push_back(id2);\n            vertexs[id1].outDegree++;\n            vertexs[id2].inDegree++;\n        }\n        else {\n            vertexs[id1].connectors.push_back(id2);\n            vertexs[id2].connectors.push_back(id1);\n\n            vertexs[id1].outDegree++;\n            vertexs[id1].inDegree++;\n\n            vertexs[id2].outDegree++;\n            vertexs[id2].inDegree++;\n\n        }\n        return true;\n    }\n} Graph;\n\nGraph g;\n\nvoid init(){\n    cin&gt;&gt;n&gt;&gt;m;\n    g=Graph(n, true);\n    int src,dst;\n    while(m--){\n        cin&gt;&gt;src&gt;&gt;dst;\n        g.addEdge(src,dst);\n    }\n    vector&lt;Vertex&gt;::iterator it = g.vertexs.begin();\n    while(it!=g.vertexs.end()){\n        inDegreelist.push_back(it-&gt;inDegree);\n        outDegreelist.push_back(it-&gt;outDegree);\n        it++;\n    }\n}\nint countin(int n){\n    return count(inDegreelist.begin(),inDegreelist.end(),n);\n}\nint countout(int n){\n    return count(outDegreelist.begin(),outDegreelist.end(),n);\n}\n\nbool Is_List(){\n    //\u6709\u4e00\u4e2ainDegree\u4e3a0\u7684\u5934\u548c\u4e00\u4e2aoutDegree\u4e3a0\u7684\u5c3e\uff0c\u4e14\u5176\u4f59\u8282\u70b9\u5165\u5ea6\u4e0e\u51fa\u5ea6\u90fd\u4e3a1;\n    return (countin(0)==1)&amp;&amp;(countout(0)==1)&amp;&amp;(countin(1)==n-1)&amp;&amp;(countout(1)==n-1);\n}\n\nbool Is_Tree(){\n    //\u6709\u4e00\u4e2ainDegree\u4e3a0\u7684\u5934\u4e14\u5176\u4f59\u8282\u70b9inDegree\u5747\u4e3a1\uff0c\u4e14\u4e0d\u662f\u94fe\u8868;\n    return (countin(0)==1)&amp;&amp;(countin(1)==n-1);\n}\n\nbool topologicalSort(){//\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u6709\u73af\u65e0\u73af\n    int num=0;//\u8bb0\u5f55\u52a0\u5165\u62d3\u6251\u6392\u5e8f\u7684\u9876\u70b9\u6570\n    queue&lt;int&gt; q;\n    for(int i=0;i&lt;n;i++){\n        if(inDegreelist[i]==0){\n            q.push(i);//\u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\u5165\u961f\n        }\n    }\n\n    while(!q.empty()){\n        int u=q.front();//\u53d6\u961f\u9996\u9876\u70b9u\n        q.pop();\n        for(int i=0;i&lt;g.vertexs[u].connectors.size();i++){\n            int v=g.vertexs[u].connectors[i];//u\u7684\u540e\u7ee7\u8282\u70b9v\n            inDegreelist[v]--;//v\u7684\u5165\u5ea6\u51cf1\n            if(inDegreelist[v]==0){//\u9876\u70b9v\u7684\u5165\u5ea6\u51cf\u4e3a0\u5219\u5165\u961f\n                q.push(v);\n            }\n        }\n        g.vertexs[u].connectors.clear();//\u6e05\u7a7au\u7684\u6240\u6709\u51fa\u8fb9\n        num++;//\u52a0\u5165\u62d3\u6251\u6392\u5e8f\u7684\u9876\u70b9\u6570\u52a01\n    }\n    if(num==n) return true;//\u52a0\u5165\u62d3\u6251\u6392\u5e8f\u7684\u9876\u70b9\u4e3an\uff0c\u5219\u62d3\u6251\u6392\u5e8f\u6210\u529f\uff0c\u56fe\u65e0\u73af\n    else return false;//\u5426\u5219\u62d3\u6251\u6392\u5e8f\u5931\u8d25\uff0c\u56fe\u6709\u73af\n}\n\n\nint main(){\n    init();\n    if(n==0||m==0){\n        cout&lt;&lt;\"error\"&lt;&lt;endl;\n    }\n    if(Is_List()){\n        cout&lt;&lt;\"list\"&lt;&lt;endl;\n    }\n\n    else if(Is_Tree()){\n        cout&lt;&lt;\"tree\"&lt;&lt;endl;\n    }\n    else if(topologicalSort()){\n        cout&lt;&lt;\"no ring\"&lt;&lt;endl;\n    }\n    else{\n    cout&lt;&lt;\"have ring\"&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/#_3","title":"\u6811\u6a21\u677f","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/#_4","title":"\u6ce8\u91ca\u7248","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#include&lt;cmath&gt;\n\n#define mem(a,b) memset(a,b,sizeof a);\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn=50;\nint mid[maxn],po[maxn],pr[maxn];\nint first;\n\nstruct node\n{\n    int l,r;\n}T[maxn];\n\n// \u4e2d\u5e8f+\u5148\u5e8f=&gt;\u4e8c\u53c9\u6811\nint mid_pr_build(int la,int ra,int lb,int rb) // la,ra\uff1a\u8868\u793a\u4e2d\u5e8f\u904d\u5386  lb,rb\uff1a\u8868\u793a\u5148\u5e8f\u904d\u5386\n{\n\u00a0\u00a0\u00a0\u00a0// \u8fd9\u91cc\u4e0d\u80fd\u7b49\u4e8e\uff0c\u56e0\u4e3a\u5047\u8bbe\uff1alen==1\uff0c\u5219la==ra\uff0c\u76f4\u63a5\u8fd4\u56de\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u662f\u6709\u4e00\u4e2a rt \u7684\uff0c\u5374\u6ca1\u88ab\u5efa\u7acb\n    if(la&gt;ra) return 0; \n    int rt=pr[lb]; // \u56e0\u4e3a\u5148\u5e8f\u904d\u5386\u7b2c\u4e00\u4e2a\u662f\u6839\u8282\u70b9\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++; // \u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u6839\u8282\u70b9\n    p2=p1-la;\n    T[rt].l=mid_pr_build(la,p1-1,lb+1,lb+p2); // \u5de6\u5b50\u6811\uff08\u9501\u5b9a\u5de6\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n    T[rt].r=mid_pr_build(p1+1,ra,lb+p2+1,rb); // \u53f3\u5b50\u6811\uff08\u9501\u5b9a\u53f3\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n\n    return rt;\n}\n\n// \u4e2d\u5e8f+\u540e\u5e8f=&gt;\u4e8c\u53c9\u6811\nint mid_po_build(int la,int ra,int lb,int rb) // la,ra\uff1a\u8868\u793a\u4e2d\u5e8f\u904d\u5386  lb,rb\uff1a\u8868\u793a\u540e\u5e8f\u904d\u5386\n{\n    if(la&gt;ra) return 0;\n    int rt=po[rb]; // \u56e0\u4e3a\u540e\u5e8f\u904d\u5386\u6700\u540e\u4e00\u4e2a\u662f\u6839\u8282\u70b9\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++; // \u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u6839\u8282\u70b9\n    p2=p1-la;\n    T[rt].l=mid_po_build(la,p1-1,lb,lb+p2-1); // \u5de6\u5b50\u6811\uff08\u9501\u5b9a\u5de6\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n    T[rt].r=mid_po_build(p1+1,ra,lb+p2,rb-1); // \u53f3\u5b50\u6811\uff08\u9501\u5b9a\u53f3\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n\n    return rt;\n}\n\n// \u6c42\u6811\u9ad8\nint getHeight(int rt)\n{\n\u00a0 \u00a0 if(rt==0) return 0;\n\u00a0 \u00a0 return 1+max(getHeight(T[rt].l),getHeight(T[rt].r));\n}\n\n// \u5c42\u5e8f\u904d\u5386\nvoid bfs(int rt)\n{\n    queue&lt;int&gt; q;\n    vector&lt;int&gt; v;\n    q.push(rt);\n\n    while(!q.empty())\n    {\n        int w=q.front();\n        q.pop();\n        v.push_back(w);\n        if(T[w].l!=0) q.push(T[w].l);\n        if(T[w].r!=0) q.push(T[w].r);\n    }\n\n    int len=v.size();\n    for(int i=0;i&lt;len;i++)\n        printf(\"%d%c\",v[i],i==len-1?'\\n':' '); // \u63a8\u8350\u8fd9\u79cd\u5199\u6cd5\uff0c\u7b80\u6d01\n}\n\n// \u5148\u5e8f\u904d\u5386\nvoid preT(int rt)\n{\n    if(rt==0) return;\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    preT(T[rt].l);\n    preT(T[rt].r);\n}\n\n// \u4e2d\u5e8f\u904d\u5386\nvoid midT(int rt)\n{\n    if(rt==0) return;\n    midT(T[rt].l);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    midT(T[rt].r);\n}\n\n// \u540e\u5e8f\u904d\u5386\nvoid postT(int rt)\n{\n    if(rt==0) return;\n    postT(T[rt].l);\n    postT(T[rt].r);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n}\n\nint main()\n{\n    int n;\n    while(~scanf(\"%d\",&amp;n))\n    {\n        first=1;\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;po[i]); // \u540e\u5e8f\u7ed3\u70b9\n//        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;pr[i]); // \u5148\u5e8f\u7ed3\u70b9\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;mid[i]); // \u4e2d\u5e8f\u7ed3\u70b9\n\n        int rt=mid_po_build(0,n-1,0,n-1); // \u4e2d+\u540e\uff0c\u8fd4\u56de\u6839\u8282\u70b9\n//        int rt=mid_pr_build(0,n-1,0,n-1); // \u4e2d+\u5148\uff0c\u8fd4\u56de\u6839\u8282\u70b9\n\n        bfs(rt); // \u5c42\u5e8f\u904d\u5386\n//        preT(rt); // \u5148\u5e8f\u904d\u5386\n//        puts(\"\");\n//        postT(rt); // \u540e\u5e8f\u904d\u5386\n//        puts(\"\");\n//        midT(rt); // \u4e2d\u5e8f\u904d\u5386\n//        puts(\"\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/#val-as-index1n","title":"\u7b80\u5316\u7248\uff08Val As Index\uff0c\u82e5\u6570\u636e\u4e0d\u57281~N\u5185\uff0c\u5219\u53ef\u80fd\u8d8a\u754c\uff09","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#include&lt;cmath&gt;\n\n#define mem(a,b) memset(a,b,sizeof a);\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn=50;\nint mid[maxn],po[maxn],pr[maxn];\nint first;\n\nstruct node\n{\n    int l,r;\n}T[maxn];\n\nint mid_pr_build(int la,int ra,int lb,int rb)\n{\n    if(la&gt;ra) return 0;\n    int rt=pr[lb];\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++;\n    p2=p1-la;\n    T[rt].l=mid_pr_build(la,p1-1,lb+1,lb+p2);\n    T[rt].r=mid_pr_build(p1+1,ra,lb+p2+1,rb);\n\n    return rt;\n}\n\nint mid_po_build(int la,int ra,int lb,int rb)\n{\n    if(la&gt;ra) return 0;\n    int rt=po[rb];\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++;\n    p2=p1-la;\n    T[rt].l=mid_po_build(la,p1-1,lb,lb+p2-1);\n    T[rt].r=mid_po_build(p1+1,ra,lb+p2,rb-1);\n\n    return rt;\n}\n\nint getHeight(int rt)\n{\n\u00a0 \u00a0 if(rt==0) return 0;\n\u00a0 \u00a0 return 1+max(getHeight(T[rt].l),getHeight(T[rt].r));\n}\n\nvoid bfs(int rt)\n{\n    queue&lt;int&gt; q;\n    vector&lt;int&gt; v;\n    q.push(rt);\n\n    while(!q.empty())\n    {\n        int w=q.front();\n        q.pop();\n        v.push_back(w);\n        if(T[w].l!=0) q.push(T[w].l);\n        if(T[w].r!=0) q.push(T[w].r);\n    }\n\n    int len=v.size();\n    for(int i=0;i&lt;len;i++)\n        printf(\"%d%c\",v[i],i==len-1?'\\n':' ');\n}\n\nvoid preT(int rt)\n{\n    if(rt==0) return;\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    preT(T[rt].l);\n    preT(T[rt].r);\n}\n\nvoid midT(int rt)\n{\n    if(rt==0) return;\n    midT(T[rt].l);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    midT(T[rt].r);\n}\n\nvoid postT(int rt)\n{\n    if(rt==0) return;\n    postT(T[rt].l);\n    postT(T[rt].r);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n}\n\nint main()\n{\n    int n;\n    while(~scanf(\"%d\",&amp;n))\n    {\n        first=1;\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;po[i]);\n//        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;pr[i]);\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;mid[i]);\n\n        int rt=mid_po_build(0,n-1,0,n-1);\n//        int rt=mid_pr_build(0,n-1,0,n-1);\n\n        bfs(rt);\n//        preT(rt);\n//        postT(rt);\n//        midT(rt);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E5%9B%BE%E4%B8%8E%E6%A0%91/#val-not-as-index-val","title":"\u7b80\u5316\u7248\uff08Val Not As Index\uff0c\u53ef\u4ee5\u5b58\u4efb\u610f\u7684 Val\uff09","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#include&lt;cmath&gt;\n\n#define mem(a,b) memset(a,b,sizeof a)\n#define ssclr(ss) ss.clear(), ss.str(\"\")\n#define INF 0x3f3f3f3f\n#define MOD 1000000007\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn=5e4+1000;\n\nint f;\nint pre[maxn], in[maxn];\n\nstruct node\n{\n    int l,r,d;\n}T[maxn];\n\nint create(int l1,int r1,int l2,int r2) // in pre\n{\n    if(l2&gt;r2) return -1;\n    int rt=l2;\n    int p1=l1,p2;\n\n    while(in[p1]!=pre[rt]) p1++;\n    p2=p1-l1;\n\n    T[rt].d=pre[rt];\n    T[rt].l=create(l1,p1-1,l2+1,l2+p2);\n    T[rt].r=create(p1+1,r1,l2+p2+1,r2);\n\n    return rt;\n}\n\nvoid postT(int rt)\n{\n    if(rt==-1 || !f) return;\n    postT(T[rt].l);\n    postT(T[rt].r);\n    if(f) f=0, printf(\"%d\\n\",T[rt].d);\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;pre[i]);\n    for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;in[i]);\n    int rt=create(0,n-1,0,n-1);\n    f=1, postT(rt);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/","title":"\u6700\u540e\u7684\u6323\u624e","text":"<ul> <li>\u6700\u540e\u7684\u6323\u624e<ul> <li>\u7ed3\u6784\u4f53\u521d\u59cb\u5316<ul> <li>\u5b9a\u4e49</li> <li>\u65b9\u6cd5\u4e00\uff1a\u5b9a\u4e49\u65f6\u8d4b\u503c</li> <li>\u65b9\u6cd5\u4e8c\uff1a\u5b9a\u4e49\u540e\u9010\u4e2a\u8d4b\u503c</li> <li>\u65b9\u6cd5\u4e09\uff1a\u5b9a\u4e49\u65f6\u4e71\u5e8f\u8d4b\u503c\uff08C++\u98ce\u683c\uff09</li> <li>\u65b9\u6cd5\u56db\uff1a\u6784\u9020\u51fd\u6570</li> </ul> </li> <li>CCF \u7f16\u8bd1\u51fa\u9519\u539f\u56e0\uff1a \u4e0d\u5141\u8bb8C++STL\u5bb9\u5668\u5d4c\u5957\uff08\u9700\u8981\u6ee1\u8db3\u76f8\u5e94\u7684\u683c\u5f0f\uff09</li> </ul> </li> </ul>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#_2","title":"\u7ed3\u6784\u4f53\u521d\u59cb\u5316","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#_3","title":"\u5b9a\u4e49","text":"<pre><code>struct InitMember\n{\n    int first\uff1b\n    double second\uff1b\n    char* third\uff1b\n    float four;\n};\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#_4","title":"\u65b9\u6cd5\u4e00\uff1a\u5b9a\u4e49\u65f6\u8d4b\u503c","text":"<pre><code>struct InitMember test = {-10,3.141590\uff0c\"method one\"\uff0c0.25}\uff1b\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#_5","title":"\u65b9\u6cd5\u4e8c\uff1a\u5b9a\u4e49\u540e\u9010\u4e2a\u8d4b\u503c","text":"<pre><code>struct InitMember test\uff1b\n\ntest.first = -10;\ntest.second = 3.141590;\ntest.third = \"method two\";\ntest.four = 0.25;\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#c","title":"\u65b9\u6cd5\u4e09\uff1a\u5b9a\u4e49\u65f6\u4e71\u5e8f\u8d4b\u503c\uff08C++\u98ce\u683c\uff09","text":"<pre><code>struct InitMember test = {\n    second\uff1a3.141590,\n    third\uff1a\"method three\",\n    first\uff1a-10,\n    four\uff1a0.25\n};\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#_6","title":"\u65b9\u6cd5\u56db\uff1a\u6784\u9020\u51fd\u6570","text":"<pre><code>//\u5b9a\u4e49\u56fe\u7684\u5b9a\u70b9\ntypedef struct Vertex {\n    int id,inDegree,outDegree;\n    vector&lt;int&gt; connectors;    //\u5b58\u50a8\u8282\u70b9\u7684\u540e\u7eed\u8fde\u63a5\u9876\u70b9\u7f16\u53f7\n    Vertex() : id(-1),inDegree(0),outDegree(0) {}\n    Vertex(int nid) : id(nid),inDegree(0),outDegree(0) {}\n} Vertex;\n\n//\u5b9a\u4e49Graph\u7684\u90bb\u63a5\u8868\u8868\u793a\ntypedef struct Graph {\n    vector&lt;Vertex&gt; vertexs;   //\u5b58\u50a8\u5b9a\u70b9\u4fe1\u606f\n    int nVertexs;             //\u8ba1\u6570\uff1a\u90bb\u63a5\u6570\n    bool isDAG;               //\u6807\u5fd7\uff1a\u662f\u6709\u5411\u56fe\u5417\n\n    Graph(int n, bool isDAG) : nVertexs(n), isDAG(isDAG) { vertexs.resize(n); }\n    Graph() : nVertexs(1), isDAG(1) { vertexs.resize(1); }\n    //\u5411\u56fe\u4e2d\u6dfb\u52a0\u8fb9\n    bool addEdge(int id1, int id2) {\n            ...\n            ...\n            ...\n        return true;\n    }\n} Graph;\n\nGraph g(8, false);\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%80%E5%90%8E%E7%9A%84%E6%8C%A3%E6%89%8E/#ccf-cstl","title":"CCF \u7f16\u8bd1\u51fa\u9519\u539f\u56e0\uff1a \u4e0d\u5141\u8bb8C++STL\u5bb9\u5668\u5d4c\u5957\uff08\u9700\u8981\u6ee1\u8db3\u76f8\u5e94\u7684\u683c\u5f0f\uff09","text":"<p>\u5c31\u662f\u8981\u5728\u540e\u9762\u7684\u201c&gt;\u201d\u4e4b\u95f4\uff0c\u5fc5\u987b\u5f97\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u5982\u679c\u6709\u591a\u5c42\uff0c\u90a3\u6bcf\u5c42\u90fd\u5f97\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 <pre><code>map&lt;string,list&lt;string&gt; &gt; user;\n</code></pre></p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/","title":"\u673a\u8bd5\u6280\u5de7\u4e0eSTL","text":"<ul> <li>\u673a\u8bd5\u6280\u5de7\u4e0eSTL<ul> <li>vs2018 \u5feb\u6377\u952e</li> <li>\u5934\u6587\u4ef6<ul> <li>\u6807\u51c6c\u5e93</li> <li>c++ STL</li> <li>\u5e38\u7528\u5934</li> </ul> </li> <li>\u5e38\u7528\u5b8f\u5b9a\u4e49</li> <li>\u7ed3\u6784\u4f53<ul> <li>\u5b9a\u4e49</li> <li>\u521d\u59cb\u5316<ul> <li>\u65b9\u6cd5\u4e00\uff1a\u5b9a\u4e49\u65f6\u8d4b\u503c</li> <li>\u65b9\u6cd5\u4e8c\uff1a\u5b9a\u4e49\u540e\u9010\u4e2a\u8d4b\u503c</li> <li>\u65b9\u6cd5\u4e09\uff1a\u5b9a\u4e49\u65f6\u4e71\u5e8f\u8d4b\u503c\uff08C++\u98ce\u683c\uff09</li> <li>\u65b9\u6cd5\u56db\uff1a\u6784\u9020\u51fd\u6570</li> </ul> </li> <li>\u8fd0\u7b97\u7b26\u91cd\u8f7d</li> </ul> </li> <li>c++new\u7684\u4f7f\u7528<ul> <li>\u5e38\u89c4</li> <li>\u52a8\u6001\u7533\u8bf7\u5217\u5927\u5c0f\u56fa\u5b9a\u7684\u4e8c\u7ef4\u6570\u7ec4</li> <li>\u52a8\u6001\u7533\u8bf7\u5927\u5c0f\u4e0d\u56fa\u5b9a\u7684\u4e8c\u7ef4\u6570\u7ec4</li> </ul> </li> <li>\u5e38\u7528STL<ul> <li>\u7b80\u8ff0<ul> <li>STL\u5e95\u5c42\u8bf4\u660e</li> <li>CCF \u7f16\u8bd1\u51fa\u9519\u539f\u56e0\uff1a \u4e0d\u5141\u8bb8C++STL\u5bb9\u5668\u5d4c\u5957\uff08\u9700\u8981\u6ee1\u8db3\u76f8\u5e94\u7684\u683c\u5f0f\uff09</li> </ul> </li> <li>algorithm<ul> <li>\u4e0d\u4fee\u6539\u5185\u5bb9\u7684\u5e8f\u5217\u64cd\u4f5c</li> <li>\u4fee\u6539\u5185\u5bb9\u7684\u5e8f\u5217\u64cd\u4f5c</li> <li>\u5212\u5206\u64cd\u4f5c</li> <li>\u6392\u5e8f\u64cd\u4f5c</li> <li>\u4e8c\u5206\u6cd5\u67e5\u627e\u64cd\u4f5c</li> <li>\u96c6\u5408\u64cd\u4f5c</li> <li>\u5806\u64cd\u4f5c</li> <li>\u6700\u5927/\u6700\u5c0f\u64cd\u4f5c</li> </ul> </li> <li>vector</li> <li>list</li> <li>string</li> <li>pair</li> <li>map</li> <li>stack</li> <li>queue</li> <li>set</li> <li>multiset</li> <li>bitset</li> </ul> </li> <li>\u56fe\u6a21\u677f<ul> <li>\u4e0d\u5e26\u51fa\u5165\u5ea6\u7684\u6700\u7b80\u6a21\u677f</li> <li>\u5e26\u51fa\u5165\u5ea6\u7684 (2019\u63a8\u514d\u8bd5\u9898)</li> <li>\u56fe\u7b97\u6cd5\uff1a\u627e\u51fau\u5230v\u7684\u6240\u6709\u8def\u5f84-\u90bb\u63a5\u8868</li> </ul> </li> <li>\u6811\u6a21\u677f<ul> <li>\u6ce8\u91ca\u7248</li> <li>\u7b80\u5316\u7248\uff08Val As Index\uff0c\u82e5\u6570\u636e\u4e0d\u57281~N\u5185\uff0c\u5219\u53ef\u80fd\u8d8a\u754c\uff09</li> <li>\u7b80\u5316\u7248\uff08Val Not As Index\uff0c\u53ef\u4ee5\u5b58\u4efb\u610f\u7684 Val\uff09</li> </ul> </li> </ul> </li> </ul>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#vs2018","title":"vs2018 \u5feb\u6377\u952e","text":"<pre><code>CTRL + J                  \u5217\u51fa\u6210\u5458 \nCtrl+E,D                  \u683c\u5f0f\u5316\u5168\u90e8\u4ee3\u7801 \nCtrl+K,F                  \u683c\u5f0f\u5316\u9009\u4e2d\u7684\u4ee3\u7801 \nCTRL + SHIFT + E          \u663e\u793a\u8d44\u6e90\u89c6\u56fe \nF12                       \u8f6c\u5230\u5b9a\u4e49 \nCTRL + F12                \u8f6c\u5230\u58f0\u660e \nCTRL + ALT + J            \u5bf9\u8c61\u6d4f\u89c8 \nCTRL + ALT + F1           \u5e2e\u52a9\u76ee\u5f55 \nCTRL + F1                 \u52a8\u6001\u5e2e\u52a9 \nCTRL + K, CTRL + C        \u6ce8\u91ca\u9009\u62e9\u7684\u4ee3\u7801 \nCTRL + K, CTRL + U        \u53d6\u6d88\u5bf9\u9009\u62e9\u4ee3\u7801\u7684\u6ce8\u91ca \nCTRL + U                  \u8f6c\u5c0f\u5199 \nCTRL + SHIFT + U          \u8f6c\u5927\u5199 \nF5                        \u8fd0\u884c\u8c03\u8bd5 \nCTRL + F5                 \u8fd0\u884c\u4e0d\u8c03\u8bd5 \nF10                       \u8de8\u8fc7\u7a0b\u5e8f\u6267\u884c \nF11                       \u5355\u6b65\u9010\u53e5\u6267\u884c \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_1","title":"\u5934\u6587\u4ef6","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#c","title":"\u6807\u51c6c\u5e93","text":"\u5934\u6587\u4ef6 \u8bf4\u660e \u5934\u6587\u4ef6 \u8bf4\u660e \u5934\u6587\u4ef6 \u8bf4\u660e assert.h \u65ad\u8a00\u76f8\u5173 ctype.h \u5b57\u7b26\u7c7b\u578b\u5224\u65ad errno.h \u6807\u51c6\u9519\u8bef\u673a\u5236 float.h \u6d6e\u70b9\u9650\u5236 limits.h \u6574\u5f62\u9650\u5236 locale.h \u672c\u5730\u5316\u63a5\u53e3 math.h \u6570\u5b66\u51fd\u6570 setjmp.h \u975e\u672c\u5730\u8df3\u8f6c signal.h \u4fe1\u53f7\u76f8\u5173 stdarg.h \u53ef\u53d8\u53c2\u6570\u5904\u7406 stddef.h \u5b8f\u548c\u7c7b\u578b\u5b9a\u4e49 stdio.h \u6807\u51c6I/O stdlib.h \u6807\u51c6\u5de5\u5177\u5e93 string.h \u5b57\u7b26\u4e32\u548c\u5185\u5b58\u5904\u7406 time.h \u65f6\u95f4\u76f8\u5173"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#c-stl","title":"c++ STL","text":"<p>using namespace std;</p> \u5934\u6587\u4ef6 \u8bf4\u660e \u5934\u6587\u4ef6 \u8bf4\u660e \u5934\u6587\u4ef6 \u8bf4\u660e algorithm \u901a\u7528\u7b97\u6cd5 deque \u53cc\u7aef\u961f\u5217 vector \u5411\u91cf iterator \u8fed\u4ee3\u5668 stack \u6808 map \u56fe\uff08\u952e\u503c\u5bf9\uff09 list \u5217\u8868 string \u5b57\u7b26\u4e32 set \u96c6\u5408 queue \u961f\u5217 bitset bit\u7c7b numeric \u6570\u503c\u7b97\u6cd5"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_2","title":"\u5e38\u7528\u5934","text":"<pre><code>#include&lt;cstdio&gt;  \n#include&lt;cstring&gt;  \n#include&lt;algorithm&gt;  \n#include&lt;iostream&gt;  \n#include&lt;string&gt;  \n#include&lt;vector&gt;  \n#include&lt;stack&gt;  \n#include&lt;bitset&gt;  \n#include&lt;cstdlib&gt;  \n#include&lt;cmath&gt;  \n#include&lt;set&gt;  \n#include&lt;list&gt;  \n#include&lt;deque&gt;  \n#include&lt;map&gt;  \n#include&lt;queue&gt;\nusing namespace std;\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_3","title":"\u5e38\u7528\u5b8f\u5b9a\u4e49","text":"<pre><code>//\u6c42\u6700\u5927\u503c\u548c\u6700\u5c0f\u503c\n#define  MAX(x,y) (((x)&gt;(y)) ? (x) : (y))\n#define  MIN(x,y) (((x) &lt; (y)) ? (x) : (y))\n\n//\u53d6\u4f59\n#define  mod(x) ((x)%MOD)\n\n//for\u5faa\u73af\n#define  FOR(i,f_start,f_end) for(int i=f_start;i&lt;=f_end;++i) \n\n//\u8fd4\u56de\u6570\u7ec4\u5143\u7d20\u7684\u4e2a\u6570\n#define  ARR_SIZE(a)  (sizeof((a))/sizeof((a[0])))\n\n//\u521d\u59cb\u5316\u6570\u7ec4\n#define MT(x,i) memset(x,i,sizeof(x))\n#define MEM(a,b) memset((a),(b),sizeof(a))\n\n//\u7b26\u53f7\u91cd\u5b9a\u4e49\n#define LL long long\n#define ull unsigned long long\n#define pii pair&lt;int,int&gt;\n\n//\u5e38\u89c1\u5e38\u6570\n#define PI acos(-1.0)\n#define eps 1e-12\n#define INF 0x3f3f3f3f //int\u6700\u5927\u503c\nconst int INF_INT = 2147483647;\nconst ll INF_LL = 9223372036854775807LL;\nconst ull INF_ULL = 18446744073709551615Ull;\nconst ll P = 92540646808111039LL;\nconst ll maxn = 1e5 + 10, MOD = 1e9 + 7;\nconst int Move[4][2] = {-1,0,1,0,0,1,0,-1};\nconst int Move_[8][2] = {-1,-1,-1,0,-1,1,0,-1,0,1,1,-1,1,0,1,1};\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_4","title":"\u7ed3\u6784\u4f53","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_5","title":"\u5b9a\u4e49","text":"<pre><code>struct InitMember\n{\n    int first\uff1b\n    double second\uff1b\n    char* third\uff1b\n    float four;\n};\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_6","title":"\u521d\u59cb\u5316","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_7","title":"\u65b9\u6cd5\u4e00\uff1a\u5b9a\u4e49\u65f6\u8d4b\u503c","text":"<pre><code>struct InitMember test = {-10,3.141590\uff0c\"method one\"\uff0c0.25}\uff1b\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_8","title":"\u65b9\u6cd5\u4e8c\uff1a\u5b9a\u4e49\u540e\u9010\u4e2a\u8d4b\u503c","text":"<pre><code>struct InitMember test\uff1b\n\ntest.first = -10;\ntest.second = 3.141590;\ntest.third = \"method two\";\ntest.four = 0.25;\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#c_1","title":"\u65b9\u6cd5\u4e09\uff1a\u5b9a\u4e49\u65f6\u4e71\u5e8f\u8d4b\u503c\uff08C++\u98ce\u683c\uff09","text":"<pre><code>struct InitMember test = {\n    second\uff1a3.141590,\n    third\uff1a\"method three\",\n    first\uff1a-10,\n    four\uff1a0.25\n};\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_9","title":"\u65b9\u6cd5\u56db\uff1a\u6784\u9020\u51fd\u6570","text":"<pre><code>//\u5b9a\u4e49\u56fe\u7684\u5b9a\u70b9\ntypedef struct Vertex {\n    int id,inDegree,outDegree;\n    vector&lt;int&gt; connectors;    //\u5b58\u50a8\u8282\u70b9\u7684\u540e\u7eed\u8fde\u63a5\u9876\u70b9\u7f16\u53f7\n    Vertex() : id(-1),inDegree(0),outDegree(0) {}\n    Vertex(int nid) : id(nid),inDegree(0),outDegree(0) {}\n} Vertex;\n\n//\u5b9a\u4e49Graph\u7684\u90bb\u63a5\u8868\u8868\u793a\ntypedef struct Graph {\n    vector&lt;Vertex&gt; vertexs;   //\u5b58\u50a8\u5b9a\u70b9\u4fe1\u606f\n    int nVertexs;             //\u8ba1\u6570\uff1a\u90bb\u63a5\u6570\n    bool isDAG;               //\u6807\u5fd7\uff1a\u662f\u6709\u5411\u56fe\u5417\n\n    Graph(int n, bool isDAG) : nVertexs(n), isDAG(isDAG) { vertexs.resize(n); }\n    Graph() : nVertexs(1), isDAG(1) { vertexs.resize(1); }\n    //\u5411\u56fe\u4e2d\u6dfb\u52a0\u8fb9\n    bool addEdge(int id1, int id2) {\n            ...\n            ...\n            ...\n        return true;\n    }\n} Graph;\n\nGraph g(8, false);\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_10","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<pre><code>typedef struct{int id;int h;} node;\nbool operator &lt;(const node&amp; a,const node &amp; b){return (a.h)&lt;(b.h);}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#cnew","title":"c++new\u7684\u4f7f\u7528","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_11","title":"\u5e38\u89c4","text":"<pre><code>int *x = new int;       //\u5f00\u8f9f\u4e00\u4e2a\u5b58\u653e\u6574\u6570\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u5b58\u50a8\u7a7a\u95f4\u7684\u5730\u5740(\u5373\u6307\u9488)\nint *a = new int(100);  //\u5f00\u8f9f\u4e00\u4e2a\u5b58\u653e\u6574\u6570\u7684\u7a7a\u95f4\uff0c\u5e76\u6307\u5b9a\u8be5\u6574\u6570\u7684\u521d\u503c\u4e3a100\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u8be5\u5b58\u50a8\u7a7a\u95f4\u7684\u5730\u5740\nchar *b = new char[10]; //\u5f00\u8f9f\u4e00\u4e2a\u5b58\u653e\u5b57\u7b26\u6570\u7ec4(\u5305\u62ec10\u4e2a\u5143\u7d20)\u7684\u7a7a\u95f4\uff0c\u8fd4\u56de\u9996\u5143\u7d20\u7684\u5730\u5740\nfloat *p=new float (3.14159);//\u5f00\u8f9f\u4e00\u4e2a\u5b58\u653e\u5355\u7cbe\u5ea6\u6570\u7684\u7a7a\u95f4\uff0c\u5e76\u6307\u5b9a\u8be5\u5b9e\u6570\u7684\u521d\u503c\u4e3a//3.14159\uff0c\u5c06\u8fd4\u56de\u7684\u8be5\u7a7a\u95f4\u7684\u5730\u5740\u8d4b\u7ed9\u6307\u9488\u53d8\u91cfp\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_12","title":"\u52a8\u6001\u7533\u8bf7\u5217\u5927\u5c0f\u56fa\u5b9a\u7684\u4e8c\u7ef4\u6570\u7ec4","text":"<pre><code>//\u5217\u503c\u56fa\u5b9a\nconst int MAXCOL = 3;\ncin&gt;&gt;row;\n//\u7533\u8bf7\u4e00\u7ef4\u6570\u636e\u5e76\u5c06\u5176\u8f6c\u6210\u4e8c\u7ef4\u6570\u7ec4\u6307\u9488\nint *pp_arr = new int[nRow * MAXCOL];\nint (*p)[MAXCOL] = (int(*)[MAXCOL])pp_arr;\n//\u6b64\u65f6p[i][j]\u5c31\u53ef\u6b63\u5e38\u4f7f\u7528\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_13","title":"\u52a8\u6001\u7533\u8bf7\u5927\u5c0f\u4e0d\u56fa\u5b9a\u7684\u4e8c\u7ef4\u6570\u7ec4","text":"<pre><code>cin&gt;&gt;row&gt;&gt;col;\nint **p = new int*[row];\nfor (int i = 0; i &lt; row; i ++)\n{\n    p[i] = new int[col];\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#stl_1","title":"\u5e38\u7528STL","text":"<p>\u53c2\u8003\uff1a</p> <p>https://blog.csdn.net/f_zyj/article/details/51594851 https://download.csdn.net/download/f_zyj/9988653</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_14","title":"\u7b80\u8ff0","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#stl_2","title":"STL\u5e95\u5c42\u8bf4\u660e","text":"<p>C++ STL \u7684\u5b9e\u73b0\uff1a</p> <pre><code>1.vector      \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u6570\u7ec4 \uff0c\u652f\u6301\u5feb\u901f\u968f\u673a\u8bbf\u95ee\n\n2.list            \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u53cc\u5411\u94fe\u8868\uff0c\u652f\u6301\u5feb\u901f\u589e\u5220\n\n3.deque       \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u4e00\u4e2a\u4e2d\u592e\u63a7\u5236\u5668\u548c\u591a\u4e2a\u7f13\u51b2\u533a\uff0c\u8be6\u7ec6\u89c1STL\u6e90\u7801\u5256\u6790P146\uff0c\u652f\u6301\u9996\u5c3e\uff08\u4e2d\u95f4\u4e0d\u80fd\uff09\u5feb\u901f\u589e\u5220\uff0c\u4e5f\u652f\u6301\u968f\u673a\u8bbf\u95ee\ndeque\u662f\u4e00\u4e2a\u53cc\u7aef\u961f\u5217(double-ended queue)\uff0c\u4e5f\u662f\u5728\u5806\u4e2d\u4fdd\u5b58\u5185\u5bb9\u7684.\u5b83\u7684\u4fdd\u5b58\u5f62\u5f0f\u5982\u4e0b:\n[\u58061] --&gt; [\u58062] --&gt;[\u58063] --&gt; ...\n\u6bcf\u4e2a\u5806\u4fdd\u5b58\u597d\u51e0\u4e2a\u5143\u7d20,\u7136\u540e\u5806\u548c\u5806\u4e4b\u95f4\u6709\u6307\u9488\u6307\u5411,\u770b\u8d77\u6765\u50cf\u662flist\u548cvector\u7684\u7ed3\u5408\u54c1.\n\n4.stack        \u5e95\u5c42\u4e00\u822c\u7528list\u6216deque\u5b9e\u73b0\uff0c\u5c01\u95ed\u5934\u90e8\u5373\u53ef\uff0c\u4e0d\u7528vector\u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6\n\n5.queue     \u5e95\u5c42\u4e00\u822c\u7528list\u6216deque\u5b9e\u73b0\uff0c\u5c01\u95ed\u5934\u90e8\u5373\u53ef\uff0c\u4e0d\u7528vector\u7684\u539f\u56e0\u5e94\u8be5\u662f\u5bb9\u91cf\u5927\u5c0f\u6709\u9650\u5236\uff0c\u6269\u5bb9\u8017\u65f6\n\n\uff08stack\u548cqueue\u5176\u5b9e\u662f\u9002\u914d\u5668,\u800c\u4e0d\u53eb\u5bb9\u5668\uff0c\u56e0\u4e3a\u662f\u5bf9\u5bb9\u5668\u7684\u518d\u5c01\u88c5\uff09\n\n6.priority_queue     \u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e00\u822c\u4e3avector\u4e3a\u5e95\u5c42\u5bb9\u5668\uff0c\u5806heap\u4e3a\u5904\u7406\u89c4\u5219\u6765\u7ba1\u7406\u5e95\u5c42\u5bb9\u5668\u5b9e\u73b0\n\n7.set                   \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u7ea2\u9ed1\u6811\uff0c\u6709\u5e8f\uff0c\u4e0d\u91cd\u590d\n\n8.multiset         \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u7ea2\u9ed1\u6811\uff0c\u6709\u5e8f\uff0c\u53ef\u91cd\u590d \n\n9.map                \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u7ea2\u9ed1\u6811\uff0c\u6709\u5e8f\uff0c\u4e0d\u91cd\u590d\n\n10.multimap    \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3a\u7ea2\u9ed1\u6811\uff0c\u6709\u5e8f\uff0c\u53ef\u91cd\u590d\n\n11.hash_set     \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3ahash\u8868\uff0c\u65e0\u5e8f\uff0c\u4e0d\u91cd\u590d\n\n12.hash_multiset \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3ahash\u8868\uff0c\u65e0\u5e8f\uff0c\u53ef\u91cd\u590d \n\n13.hash_map    \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3ahash\u8868\uff0c\u65e0\u5e8f\uff0c\u4e0d\u91cd\u590d\n\n14.hash_multimap \u5e95\u5c42\u6570\u636e\u7ed3\u6784\u4e3ahash\u8868\uff0c\u65e0\u5e8f\uff0c\u53ef\u91cd\u590d \n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#ccf-cstl","title":"CCF \u7f16\u8bd1\u51fa\u9519\u539f\u56e0\uff1a \u4e0d\u5141\u8bb8C++STL\u5bb9\u5668\u5d4c\u5957\uff08\u9700\u8981\u6ee1\u8db3\u76f8\u5e94\u7684\u683c\u5f0f\uff09","text":"<p>\u5c31\u662f\u8981\u5728\u540e\u9762\u7684\u201c&gt;\u201d\u4e4b\u95f4\uff0c\u5fc5\u987b\u5f97\u6709\u4e00\u4e2a\u7a7a\u683c\uff0c\u5982\u679c\u6709\u591a\u5c42\uff0c\u90a3\u6bcf\u5c42\u90fd\u5f97\u6709\u4e00\u4e2a\u7a7a\u683c\u3002 <pre><code>map&lt;string,list&lt;string&gt; &gt; user;\n</code></pre></p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#algorithm","title":"algorithm","text":"<p>\u5934\u6587\u4ef6\uff1algorithm</p> <p>\u51fd\u6570\u53c2\u6570\uff0c\u8fd4\u56de\u503c\u4ee5\u53ca\u5177\u4f53\u7684\u4f7f\u7528\u65b9\u6cd5\u8bf7\u81ea\u884c\u53bb\u5934\u6587\u4ef6\u627e\u5b9a\u4e49\uff01\uff01\uff01</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_15","title":"\u4e0d\u4fee\u6539\u5185\u5bb9\u7684\u5e8f\u5217\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e adjacent_find \u67e5\u627e\u4e24\u4e2a\u76f8\u90bb\uff08Adjacent\uff09\u7684\u7b49\u4ef7\uff08Identical\uff09\u5143\u7d20 all_ofC++11 \u68c0\u6d4b\u5728\u7ed9\u5b9a\u8303\u56f4\u4e2d\u662f\u5426\u6240\u6709\u5143\u7d20\u90fd\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6 any_ofC++11 \u68c0\u6d4b\u5728\u7ed9\u5b9a\u8303\u56f4\u4e2d\u662f\u5426\u5b58\u5728\u5143\u7d20\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6 count \u8fd4\u56de\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u7684\u4e2a\u6570 count_if \u8fd4\u56de\u503c\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u7684\u4e2a\u6570 equal \u8fd4\u56de\u4e24\u4e2a\u8303\u56f4\u662f\u5426\u76f8\u7b49 find \u8fd4\u56de\u7b2c\u4e00\u4e2a\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20 find_end \u67e5\u627e\u8303\u56f4A\u4e2d\u4e0e\u8303\u56f4B\u7b49\u4ef7\u7684\u5b50\u8303\u56f4\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e find_first_of \u67e5\u627e\u8303\u56f4A\u4e2d\u7b2c\u4e00\u4e2a\u4e0e\u8303\u56f4B\u4e2d\u4efb\u4e00\u5143\u7d20\u7b49\u4ef7\u7684\u5143\u7d20\u7684\u4f4d\u7f6e find_if \u8fd4\u56de\u7b2c\u4e00\u4e2a\u503c\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20 find_if_notC++11 \u8fd4\u56de\u7b2c\u4e00\u4e2a\u503c\u4e0d\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20 for_each \u5bf9\u8303\u56f4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u6307\u5b9a\u51fd\u6570 mismatch \u8fd4\u56de\u4e24\u4e2a\u8303\u56f4\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e0d\u7b49\u4ef7\u7684\u4f4d\u7f6e none_ofC++11 \u68c0\u6d4b\u5728\u7ed9\u5b9a\u8303\u56f4\u4e2d\u662f\u5426\u4e0d\u5b58\u5728\u5143\u7d20\u6ee1\u8db3\u7ed9\u5b9a\u7684\u6761\u4ef6 search \u5728\u8303\u56f4A\u4e2d\u67e5\u627e\u7b2c\u4e00\u4e2a\u4e0e\u8303\u56f4B\u7b49\u4ef7\u7684\u5b50\u8303\u56f4\u7684\u4f4d\u7f6e search_n \u5728\u7ed9\u5b9a\u8303\u56f4\u4e2d\u67e5\u627e\u7b2c\u4e00\u4e2a\u8fde\u7eedn\u4e2a\u5143\u7d20\u90fd\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5b50\u8303\u56f4\u7684\u4f4d\u7f6e"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_16","title":"\u4fee\u6539\u5185\u5bb9\u7684\u5e8f\u5217\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e copy \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u62f7\u8d1d\u5230\u65b0\u7684\u4f4d\u7f6e\u5904 copy_backward \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u6309\u9006\u5e8f\u62f7\u8d1d\u5230\u65b0\u7684\u4f4d\u7f6e\u5904 copy_ifC++11 \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u62f7\u8d1d\u5230\u65b0\u7684\u4f4d\u7f6e\u5904 copy_nC++11 \u62f7\u8d1d n \u4e2a\u5143\u7d20\u5230\u65b0\u7684\u4f4d\u7f6e\u5904 fill \u5c06\u4e00\u4e2a\u8303\u56f4\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u7ed9\u5b9a\u503c fill_n \u5c06\u67d0\u4e2a\u4f4d\u7f6e\u5f00\u59cb\u7684 n \u4e2a\u5143\u7d20\u8d4b\u503c\u4e3a\u7ed9\u5b9a\u503c generate \u5c06\u4e00\u4e2a\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u4fdd\u5b58\u5230\u6307\u5b9a\u8303\u56f4\u7684\u5143\u7d20\u4e2d\uff0c\u7528\u4e8e\u6279\u91cf\u8d4b\u503c\u8303\u56f4\u4e2d\u7684\u5143\u7d20 generate_n \u5c06\u4e00\u4e2a\u51fd\u6570\u7684\u6267\u884c\u7ed3\u679c\u4fdd\u5b58\u5230\u6307\u5b9a\u4f4d\u7f6e\u5f00\u59cb\u7684 n \u4e2a\u5143\u7d20\u4e2d iter_swap \u4ea4\u6362\u4e24\u4e2a\u8fed\u4ee3\u5668\uff08Iterator\uff09\u6307\u5411\u7684\u5143\u7d20 moveC++11 \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u79fb\u52a8\u5230\u65b0\u7684\u4f4d\u7f6e\u5904 move_backwardC++11 \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u6309\u9006\u5e8f\u79fb\u52a8\u5230\u65b0\u7684\u4f4d\u7f6e\u5904 random_shuffle \u968f\u673a\u6253\u4e71\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u7684\u4f4d\u7f6e remove \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u5220\u9664 remove_if \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u503c\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u5220\u9664 remove_copy \u62f7\u8d1d\u4e00\u4e2a\u8303\u56f4\u7684\u5143\u7d20\uff0c\u5c06\u5176\u4e2d\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u5220\u9664 remove_copy_if \u62f7\u8d1d\u4e00\u4e2a\u8303\u56f4\u7684\u5143\u7d20\uff0c\u5c06\u5176\u4e2d\u503c\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u5220\u9664 replace \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u65b0\u7684\u503c replace_copy \u62f7\u8d1d\u4e00\u4e2a\u8303\u56f4\u7684\u5143\u7d20\uff0c\u5c06\u5176\u4e2d\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u65b0\u7684\u503c replace_copy_if \u62f7\u8d1d\u4e00\u4e2a\u8303\u56f4\u7684\u5143\u7d20\uff0c\u5c06\u5176\u4e2d\u503c\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u65b0\u7684\u503c replace_if \u5c06\u4e00\u4e2a\u8303\u56f4\u4e2d\u503c\u6ee1\u8db3\u7ed9\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u8d4b\u503c\u4e3a\u65b0\u7684\u503c reverse \u53cd\u8f6c\u6392\u5e8f\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20 reverse_copy \u62f7\u8d1d\u6307\u5b9a\u8303\u56f4\u7684\u53cd\u8f6c\u6392\u5e8f\u7ed3\u679c rotate \u5faa\u73af\u79fb\u52a8\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20 rotate_copy \u62f7\u8d1d\u6307\u5b9a\u8303\u56f4\u7684\u5faa\u73af\u79fb\u52a8\u7ed3\u679c shuffleC++11 \u7528\u6307\u5b9a\u7684\u968f\u673a\u6570\u5f15\u64ce\u968f\u673a\u6253\u4e71\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u7684\u4f4d\u7f6e swap \u4ea4\u6362\u4e24\u4e2a\u5bf9\u8c61\u7684\u503c swap_ranges \u4ea4\u6362\u4e24\u4e2a\u8303\u56f4\u7684\u5143\u7d20 transform \u5bf9\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8c03\u7528\u67d0\u4e2a\u51fd\u6570\u4ee5\u6539\u53d8\u5143\u7d20\u7684\u503c unique \u5220\u9664\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u6240\u6709\u8fde\u7eed\u91cd\u590d\u5143\u7d20\uff0c\u4ec5\u4ec5\u7559\u4e0b\u6bcf\u7ec4\u7b49\u503c\u5143\u7d20\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002 unique_copy \u62f7\u8d1d\u6307\u5b9a\u8303\u56f4\u7684\u552f\u4e00\u5316\uff08\u53c2\u8003\u4e0a\u8ff0\u7684 unique\uff09\u7ed3\u679c"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_17","title":"\u5212\u5206\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e is_partitionedC++11 \u68c0\u6d4b\u67d0\u4e2a\u8303\u56f4\u662f\u5426\u6309\u6307\u5b9a\u8c13\u8bcd\uff08Predicate\uff09\u5212\u5206\u8fc7 partition \u5c06\u67d0\u4e2a\u8303\u56f4\u5212\u5206\u4e3a\u4e24\u7ec4 partition_copyC++11 \u62f7\u8d1d\u6307\u5b9a\u8303\u56f4\u7684\u5212\u5206\u7ed3\u679c partition_pointC++11 \u8fd4\u56de\u88ab\u5212\u5206\u8303\u56f4\u7684\u5212\u5206\u70b9 stable_partition \u7a33\u5b9a\u5212\u5206\uff0c\u4e24\u7ec4\u5143\u7d20\u5404\u7ef4\u6301\u76f8\u5bf9\u987a\u5e8f"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_18","title":"\u6392\u5e8f\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e is_sortedC++11 \u68c0\u6d4b\u6307\u5b9a\u8303\u56f4\u662f\u5426\u5df2\u6392\u5e8f is_sorted_untilC++11 \u8fd4\u56de\u6700\u5927\u5df2\u6392\u5e8f\u5b50\u8303\u56f4 nth_element \u90e8\u4efd\u6392\u5e8f\u6307\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\uff0c\u4f7f\u5f97\u8303\u56f4\u6309\u7ed9\u5b9a\u4f4d\u7f6e\u5904\u7684\u5143\u7d20\u5212\u5206 partial_sort \u90e8\u4efd\u6392\u5e8f partial_sort_copy \u62f7\u8d1d\u90e8\u5206\u6392\u5e8f\u7684\u7ed3\u679c sort \u6392\u5e8f stable_sort \u7a33\u5b9a\u6392\u5e8f"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_19","title":"\u4e8c\u5206\u6cd5\u67e5\u627e\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e binary_search \u5224\u65ad\u8303\u56f4\u4e2d\u662f\u5426\u5b58\u5728\u503c\u7b49\u4ef7\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20 equal_range \u8fd4\u56de\u8303\u56f4\u4e2d\u503c\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u7ec4\u6210\u7684\u5b50\u8303\u56f4 lower_bound \u8fd4\u56de\u6307\u5411\u8303\u56f4\u4e2d\u7b2c\u4e00\u4e2a\u503c\u5927\u4e8e\u6216\u7b49\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668 upper_bound \u8fd4\u56de\u6307\u5411\u8303\u56f4\u4e2d\u7b2c\u4e00\u4e2a\u503c\u5927\u4e8e\u7ed9\u5b9a\u503c\u7684\u5143\u7d20\u7684\u8fed\u4ee3\u5668"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_20","title":"\u96c6\u5408\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e includes \u5224\u65ad\u4e00\u4e2a\u96c6\u5408\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u96c6\u5408\u7684\u5b50\u96c6 inplace_merge \u5c31\u7eea\u5408\u5e76 merge   \u5408\u5e76 set_difference \u83b7\u5f97\u4e24\u4e2a\u96c6\u5408\u7684\u5dee\u96c6 set_intersection \u83b7\u5f97\u4e24\u4e2a\u96c6\u5408\u7684\u4ea4\u96c6 set_symmetric_difference \u83b7\u5f97\u4e24\u4e2a\u96c6\u5408\u7684\u5bf9\u79f0\u5dee set_union \u83b7\u5f97\u4e24\u4e2a\u96c6\u5408\u7684\u5e76\u96c6"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_21","title":"\u5806\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e is_heap \u68c0\u6d4b\u7ed9\u5b9a\u8303\u56f4\u662f\u5426\u6ee1\u8db3\u5806\u7ed3\u6784 is_heap_untilC++11 \u68c0\u6d4b\u7ed9\u5b9a\u8303\u56f4\u4e2d\u6ee1\u8db3\u5806\u7ed3\u6784\u7684\u6700\u5927\u5b50\u8303\u56f4 make_heap \u7528\u7ed9\u5b9a\u8303\u56f4\u6784\u9020\u51fa\u4e00\u4e2a\u5806 pop_heap \u4ece\u4e00\u4e2a\u5806\u4e2d\u5220\u9664\u6700\u5927\u7684\u5143\u7d20 push_heap \u5411\u5806\u4e2d\u589e\u52a0\u4e00\u4e2a\u5143\u7d20 sort_heap \u5c06\u6ee1\u8db3\u5806\u7ed3\u6784\u7684\u8303\u56f4\u6392\u5e8f"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_22","title":"\u6700\u5927/\u6700\u5c0f\u64cd\u4f5c","text":"\u51fd\u6570 \u8bf4\u660e is_permutationC++11 \u5224\u65ad\u4e00\u4e2a\u5e8f\u5217\u662f\u5426\u662f\u53e6\u4e00\u4e2a\u5e8f\u5217\u7684\u4e00\u79cd\u6392\u5e8f lexicographical_compare \u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u7684\u5b57\u5178\u5e8f max \u8fd4\u56de\u4e24\u4e2a\u5143\u7d20\u4e2d\u503c\u6700\u5927\u7684\u5143\u7d20 max_element \u8fd4\u56de\u7ed9\u5b9a\u8303\u56f4\u4e2d\u503c\u6700\u5927\u7684\u5143\u7d20 min \u8fd4\u56de\u4e24\u4e2a\u5143\u7d20\u4e2d\u503c\u6700\u5c0f\u7684\u5143\u7d20 min_element \u8fd4\u56de\u7ed9\u5b9a\u8303\u56f4\u4e2d\u503c\u6700\u5c0f\u7684\u5143\u7d20 minmaxC++11 \u8fd4\u56de\u4e24\u4e2a\u5143\u7d20\u4e2d\u503c\u6700\u5927\u53ca\u6700\u5c0f\u7684\u5143\u7d20 minmax_elementC++11 \u8fd4\u56de\u7ed9\u5b9a\u8303\u56f4\u4e2d\u503c\u6700\u5927\u53ca\u6700\u5c0f\u7684\u5143\u7d20 next_permutation \u8fd4\u56de\u7ed9\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u7ec4\u6210\u7684\u4e0b\u4e00\u4e2a\u6309\u5b57\u5178\u5e8f\u7684\u6392\u5217 prev_permutation \u8fd4\u56de\u7ed9\u5b9a\u8303\u56f4\u4e2d\u7684\u5143\u7d20\u7ec4\u6210\u7684\u4e0a\u4e00\u4e2a\u6309\u5b57\u5178\u5e8f\u7684\u6392\u5217"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#vector","title":"vector","text":"<p>\u5934\u6587\u4ef6\uff1avector</p> <p>\u5728STL\u7684vector\u5934\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e86vector\uff08\u5411\u91cf\u5bb9\u5668\u6a21\u7248\u7c7b\uff09\uff0cvector\u5bb9\u5668\u4ee5\u8fde\u7eed\u6570\u7ec4\u7684\u65b9\u5f0f\u5b58\u50a8\u5143\u7d20\u5e8f\u5217\uff0c\u53ef\u4ee5\u5c06vector\u770b\u4f5c\u662f\u4ee5\u987a\u5e8f\u7ed3\u6784\u5b9e\u73b0\u7684\u7ebf\u6027\u8868\u3002\u5f53\u6211\u4eec\u5728\u7a0b\u5e8f\u4e2d\u9700\u8981\u4f7f\u7528\u52a8\u6001\u6570\u7ec4\u65f6\uff0cvector\u5c06\u4f1a\u662f\u7406\u60f3\u7684\u9009\u62e9\uff0cvector\u53ef\u4ee5\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u52a8\u6001\u5730\u589e\u957f\u5b58\u50a8\u7a7a\u95f4\u3002  vector\u6a21\u7248\u7c7b\u9700\u8981\u4e24\u4e2a\u6a21\u7248\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u5b58\u50a8\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u5b58\u50a8\u5206\u914d\u5668\u7684\u7c7b\u578b\uff0c\u5176\u4e2d\u7b2c\u4e8c\u4e2a\u53c2\u6570\u662f\u53ef\u9009\u7684\uff0c\u5982\u679c\u4e0d\u7ed9\u51fa\u7b2c\u4e8c\u4e2a\u53c2\u6570\uff0c\u5c06\u4f7f\u7528\u9ed8\u8ba4\u7684\u5206\u914d\u5668</p> <p>\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u5e38\u7528\u7684\u5b9a\u4e49vector\u5411\u91cf\u5bf9\u8c61\u7684\u65b9\u6cd5\u793a\u4f8b\uff1a <pre><code>vector&lt;int&gt; s;      \n//  \u5b9a\u4e49\u4e00\u4e2a\u7a7a\u7684vector\u5bf9\u8c61\uff0c\u5b58\u50a8\u7684\u662fint\u7c7b\u578b\u7684\u5143\u7d20\nvector&lt;int&gt; s(n);   \n//  \u5b9a\u4e49\u4e00\u4e2a\u542b\u6709n\u4e2aint\u5143\u7d20\u7684vector\u5bf9\u8c61\nvector&lt;int&gt; s(first, last); \n//  \u5b9a\u4e49\u4e00\u4e2avector\u5bf9\u8c61\uff0c\u5e76\u4ece\u7531\u8fed\u4ee3\u5668first\u548clast\u5b9a\u4e49\u7684\u5e8f\u5217[first, last)\u4e2d\u590d\u5236\u521d\u503c\n</code></pre></p> <p>vector\u7684\u57fa\u672c\u64cd\u4f5c\uff1a <pre><code>s[i]                //  \u76f4\u63a5\u4ee5\u4e0b\u6807\u65b9\u5f0f\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\ns.front()           //  \u8fd4\u56de\u9996\u5143\u7d20\ns.back()            //  \u8fd4\u56de\u5c3e\u5143\u7d20\ns.push_back(x)      //  \u5411\u8868\u5c3e\u63d2\u5165\u5143\u7d20x\ns.size()            //  \u8fd4\u56de\u8868\u957f\ns.empty()           //  \u8868\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de\u771f\uff0c\u5426\u5219\u8fd4\u56de\u5047\ns.pop_back()        //  \u5220\u9664\u8868\u5c3e\u5143\u7d20\ns.begin()           //  \u8fd4\u56de\u6307\u5411\u9996\u5143\u7d20\u7684\u968f\u673a\u5b58\u53d6\u8fed\u4ee3\u5668\ns.end()             //  \u8fd4\u56de\u6307\u5411\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u968f\u673a\u5b58\u53d6\u8fed\u4ee3\u5668\ns.insert(it, val)   //  \u5411\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\u524d\u63d2\u5165\u65b0\u5143\u7d20val\ns.insert(it, n, val)//  \u5411\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\u524d\u63d2\u5165n\u4e2a\u65b0\u5143\u7d20val\ns.insert(it, first, last)   \n//  \u5c06\u7531\u8fed\u4ee3\u5668first\u548clast\u6240\u6307\u5b9a\u7684\u5e8f\u5217[first, last)\u63d2\u5165\u5230\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\u524d\u9762\ns.erase(it)         //  \u5220\u9664\u7531\u8fed\u4ee3\u5668it\u6240\u6307\u5411\u7684\u5143\u7d20\ns.erase(first, last)//  \u5220\u9664\u7531\u8fed\u4ee3\u5668first\u548clast\u6240\u6307\u5b9a\u7684\u5e8f\u5217[first, last)\ns.reserve(n)        //  \u9884\u5206\u914d\u7f13\u51b2\u7a7a\u95f4\uff0c\u4f7f\u5b58\u50a8\u7a7a\u95f4\u81f3\u5c11\u53ef\u5bb9\u7eb3n\u4e2a\u5143\u7d20\ns.resize(n)         //  \u6539\u53d8\u5e8f\u5217\u957f\u5ea6\uff0c\u8d85\u51fa\u7684\u5143\u7d20\u5c06\u4f1a\u5168\u90e8\u88ab\u5220\u9664\uff0c\u5982\u679c\u5e8f\u5217\u9700\u8981\u6269\u5c55\uff08\u539f\u7a7a\u95f4\u5c0f\u4e8en\uff09\uff0c\u5143\u7d20\u9ed8\u8ba4\u503c\u5c06\u586b\u6ee1\u6269\u5c55\u51fa\u7684\u7a7a\u95f4\ns.resize(n, val)    //  \u6539\u53d8\u5e8f\u5217\u957f\u5ea6\uff0c\u8d85\u51fa\u7684\u5143\u7d20\u5c06\u4f1a\u5168\u90e8\u88ab\u5220\u9664\uff0c\u5982\u679c\u5e8f\u5217\u9700\u8981\u6269\u5c55\uff08\u539f\u7a7a\u95f4\u5c0f\u4e8en\uff09\uff0cval\u5c06\u586b\u6ee1\u6269\u5c55\u51fa\u7684\u7a7a\u95f4\ns.clear()           //  \u5220\u9664\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5143\u7d20\ns.swap(v)           //  \u5c06s\u4e0e\u53e6\u4e00\u4e2avector\u5bf9\u8c61\u8fdb\u884c\u4ea4\u6362\ns.assign(first, last)\n//  \u5c06\u5e8f\u5217\u66ff\u6362\u6210\u7531\u8fed\u4ee3\u5668first\u548clast\u6240\u6307\u5b9a\u7684\u5e8f\u5217[first, last)\uff0c[first, last)\u4e0d\u80fd\u662f\u539f\u5e8f\u5217\u4e2d\u7684\u4e00\u90e8\u5206\n\n//  \u8981\u6ce8\u610f\u7684\u662f\uff0cresize\u64cd\u4f5c\u548cclear\u64cd\u4f5c\u90fd\u662f\u5bf9\u8868\u7684\u6709\u6548\u5143\u7d20\u8fdb\u884c\u7684\u64cd\u4f5c\uff0c\u4f46\u5e76\u4e0d\u4e00\u5b9a\u4f1a\u6539\u53d8\u7f13\u51b2\u7a7a\u95f4\u7684\u5927\u5c0f\n//  \u53e6\u5916\uff0cvector\u8fd8\u6709\u5176\u4ed6\u7684\u4e00\u4e9b\u64cd\u4f5c\uff0c\u5982\u53cd\u8f6c\u3001\u53d6\u53cd\u7b49\uff0c\u4e0d\u518d\u4e00\u4e00\u5217\u4e3e\n//  vector\u4e0a\u8fd8\u5b9a\u4e49\u4e86\u5e8f\u5217\u4e4b\u95f4\u7684\u6bd4\u8f83\u64cd\u4f5c\u8fd0\u7b97\u7b26\uff08&gt;\u3001&lt;\u3001&gt;=\u3001&lt;=\u3001==\u3001!=\uff09\uff0c\u53ef\u4ee5\u6309\u7167\u5b57\u5178\u5e8f\u6bd4\u8f83\u4e24\u4e2a\u5e8f\u5217\u3002\n//  \u8fd8\u662f\u6765\u770b\u4e00\u4e9b\u793a\u4f8b\u4ee3\u7801\u5427\u2026\u2026\n\n/*\n * \u8f93\u5165\u4e2a\u6570\u4e0d\u5b9a\u7684\u4e00\u7ec4\u6574\u6570\uff0c\u518d\u5c06\u8fd9\u7ec4\u6574\u6570\u6309\u5012\u5e8f\u8f93\u51fa\n */\n\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n\nusing namespace std;\n\nint main()\n{\n    vector&lt;int&gt; L;\n    int x;\n    while(cin &gt;&gt; x)\n    {\n        L.push_back(x);\n    }\n    for (int i = L.size() - 1; i &gt;= 0; i--)\n    {\n        cout &lt;&lt; L[i] &lt;&lt; \" \";\n    }\n    cout &lt;&lt; endl;\n    return 0;\n}\n</code></pre></p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#list","title":"list","text":"<p>\u5934\u6587\u4ef6\uff1alist</p> <p>\u4e0b\u9762\u7ed9\u51fa\u51e0\u4e2a\u5e38\u7528\u7684\u5b9a\u4e49list\u5bf9\u8c61\u7684\u65b9\u6cd5\u793a\u4f8b\uff1a <pre><code>list&lt;int&gt;a{1,2,3}\nlist&lt;int&gt;a(n)    //\u58f0\u660e\u4e00\u4e2an\u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662f0\nlist&lt;int&gt;a(n, m)  //\u58f0\u660e\u4e00\u4e2an\u4e2a\u5143\u7d20\u7684\u5217\u8868\uff0c\u6bcf\u4e2a\u5143\u7d20\u90fd\u662fm\nlist&lt;int&gt;a(first, last)  //\u58f0\u660e\u4e00\u4e2a\u5217\u8868\uff0c\u5176\u5143\u7d20\u7684\u521d\u59cb\u503c\u6765\u6e90\u4e8e\u7531\u533a\u95f4\u6240\u6307\u5b9a\u7684\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\uff0cfirst\u548clast\u662f\u8fed\u4ee3\u5668\n</code></pre></p> <p>list\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <pre><code>a.begin()           //  \u8fd4\u56de\u6307\u5411\u9996\u5143\u7d20\u7684\u968f\u673a\u5b58\u53d6\u8fed\u4ee3\u5668\na.end()             //  \u8fd4\u56de\u6307\u5411\u5c3e\u5143\u7d20\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u7684\u968f\u673a\u5b58\u53d6\u8fed\u4ee3\u5668\na.push_front(x)     //  \u5411\u8868\u5934\u63d2\u5165\u5143\u7d20x\na.push_back(x)      //  \u5411\u8868\u5c3e\u63d2\u5165\u5143\u7d20x\na.pop_back()        //  \u5220\u9664\u8868\u5c3e\u5143\u7d20\na.pop_front()       //  \u5220\u9664\u8868\u5934\u5143\u7d20\na.size()            //  \u8fd4\u56de\u8868\u957f\na.empty()           //  \u8868\u4e3a\u7a7a\u65f6\uff0c\u8fd4\u56de\u771f\uff0c\u5426\u5219\u8fd4\u56de\u5047\na.resize(n)         //  \u6539\u53d8\u5e8f\u5217\u957f\u5ea6\uff0c\u8d85\u51fa\u7684\u5143\u7d20\u5c06\u4f1a\u5168\u90e8\u88ab\u5220\u9664\uff0c\u5982\u679c\u5e8f\u5217\u9700\u8981\u6269\u5c55\uff08\u539f\u7a7a\u95f4\u5c0f\u4e8en\uff09\uff0c\u5143\u7d20\u9ed8\u8ba4\u503c\u5c06\u586b\u6ee1\u6269\u5c55\u51fa\u7684\u7a7a\u95f4\na.resize(n, val)    //  \u6539\u53d8\u5e8f\u5217\u957f\u5ea6\uff0c\u8d85\u51fa\u7684\u5143\u7d20\u5c06\u4f1a\u5168\u90e8\u88ab\u5220\u9664\uff0c\u5982\u679c\u5e8f\u5217\u9700\u8981\u6269\u5c55\uff08\u539f\u7a7a\u95f4\u5c0f\u4e8en\uff09\uff0cval\u5c06\u586b\u6ee1\u6269\u5c55\u51fa\u7684\u7a7a\u95f4\na.clear()           //  \u5220\u9664\u5bb9\u5668\u4e2d\u7684\u6240\u6709\u5143\u7d20\na.front()           //  \u8fd4\u56de\u9996\u5143\u7d20\na.back()            //  \u8fd4\u56de\u5c3e\u5143\u7d20\na.swap(v)           //  \u5c06a\u4e0e\u53e6\u4e00\u4e2alist\u5bf9\u8c61\u8fdb\u884c\u4ea4\u6362\na.merge(b)          //  \u8c03\u7528\u7ed3\u675f\u540eb\u53d8\u4e3a\u7a7a\uff0ca\u4e2d\u5143\u7d20\u5305\u542b\u539f\u6765a\u548cb\u7684\u5143\u7d20\na.insert(it, val)   //  \u5411\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\u524d\u63d2\u5165\u65b0\u5143\u7d20val\na.insert(it, n, val)//  \u5411\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\u524d\u63d2\u5165n\u4e2a\u65b0\u5143\u7d20val\na.insert(it, first, last)   \n//  \u5c06\u7531\u8fed\u4ee3\u5668first\u548clast\u6240\u6307\u5b9a\u7684\u5e8f\u5217[first, last)\u63d2\u5165\u5230\u8fed\u4ee3\u5668it\u6307\u5411\u7684\u5143\u7d20\u524d\u9762\na.erase(it)         //  \u5220\u9664\u7531\u8fed\u4ee3\u5668it\u6240\u6307\u5411\u7684\u5143\u7d20\na.erase(first, last)//  \u5220\u9664\u7531\u8fed\u4ee3\u5668first\u548clast\u6240\u6307\u5b9a\u7684\u5e8f\u5217[first, last)\na.remove(x)         //  \u5220\u9664\u4e86a\u4e2d\u6240\u6709\u503c\u4e3ax\u7684\u5143\u7d20\na.assign(n, val)    // \u5c06a\u4e2d\u7684\u6240\u6709\u5143\u7d20\u66ff\u6362\u6210n\u4e2aval\u5143\u7d20\na.assign(b.begin(), b.end())\n//\u5c06a\u53d8\u6210b\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#string","title":"string","text":"<p>\u5934\u6587\u4ef6\uff1astring</p> <p>string\u662fSTL\u7684\u5b57\u7b26\u4e32\u7c7b\u578b\uff0c\u901a\u5e38\u7528\u6765\u8868\u793a\u5b57\u7b26\u4e32\u3002\u800c\u5728\u4f7f\u7528string\u4e4b\u524d\uff0c\u5b57\u7b26\u4e32\u901a\u5e38\u662f\u7528<code>char*</code>\u8868\u793a\u7684\u3002  string\u548c<code>char*</code>\u7684\u533a\u522b string\u662f\u4e00\u4e2a\u7c7b, <code>char*</code>\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u7684\u6307\u9488\u3002  string\u5c01\u88c5\u4e86<code>char*</code>\uff0c\u7ba1\u7406\u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u662f\u4e00\u4e2a<code>char*</code>\u578b\u7684\u5bb9\u5668\u3002\u4e5f\u5c31\u662f\u8bf4string\u662f\u4e00\u4e2a\u5bb9\u5668\uff0c\u91cc\u9762\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u662f<code>char*</code>\u3002 string\u4e0d\u7528\u8003\u8651\u5185\u5b58\u91ca\u653e\u548c\u8d8a\u754c\u3002  string\u7ba1\u7406<code>char*</code>\u6240\u5206\u914d\u7684\u5185\u5b58\u3002\u6bcf\u4e00\u6b21string\u7684\u590d\u5236\uff0c\u53d6\u503c\u90fd\u7531string\u7c7b\u8d1f\u8d23\u7ef4\u62a4\uff0c\u4e0d\u7528\u62c5\u5fc3\u590d\u5236\u8d8a\u754c\u548c\u53d6\u503c\u8d8a\u754c\u7b49\u3002  string\u63d0\u4f9b\u4e86\u4e00\u7cfb\u5217\u7684\u5b57\u7b26\u4e32\u64cd\u4f5c\u51fd\u6570  \u67e5\u627efind\uff0c\u62f7\u8d1dcopy\uff0c\u5220\u9664erase\uff0c\u66ff\u6362replace\uff0c\u63d2\u5165insert. </p> <p>\u6784\u9020\u548c\u6790\u6784\u51fd\u6570:</p> \u8868\u8fbe\u5f0f \u6548\u679c string s \u751f\u6210\u4e00\u4e2a\u7a7a\u5b57\u7b26\u4e32 string s(str) copy\u6784\u9020\u51fd\u6570\uff0c\u751f\u6210\u4e00\u4e2astr\u7684\u590d\u5236\u54c1 string s(str,idx) \u5c06string\u5185\u59cb\u4e8e\u4f4d\u7f6eidx\u7684\u90e8\u5206\u5f53\u4f5c\u5b57\u7b26\u4e32s\u7684\u521d\u503c string s(str,idx,len) \u5c06string\u5185\u59cb\u4e8e\u4f4d\u7f6eidx\u4e14\u957f\u5ea6\u6700\u591a\u4e3alen\u7684\u90e8\u5206\u5f53\u4f5c\u5b57\u7b26\u4e32s\u7684\u521d\u503c string s(cstr) \u4ee5C-string\u5b57\u7b26\u4e32cstr\u4f5c\u4e3a\u5b57\u7b26\u4e32s\u7684\u521d\u503c string s(cstr\uff0clen) \u4ee5C-string\u5b57\u7b26\u4e32cstr\u7684\u524dlen\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u5b57\u7b26\u4e32s\u7684\u521d\u503c string s(num\uff0cc) \u751f\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u5305\u542bnum\u4e2a\u5b57\u7b26c string s(beg\uff0cend) \u4ee5\u533a\u95f4[beg,end]\u5185\u6240\u6709\u5b57\u7b26\u4f5c\u4e3a\u5b57\u7b26\u4e32s\u7684\u521d\u503c <p>\u64cd\u4f5c\u51fd\u6570:</p> \u64cd\u4f5c\u51fd\u6570 \u6548\u679c =\uff0cassign() \u8d4b\u4ee5\u65b0\u503c swap() \u4ea4\u6362\u4e24\u4e2a\u5b57\u7b26\u4e32\u7684\u5185\u5bb9 +=, append(),push_back() \u6dfb\u52a0\u5b57\u7b26 insert() \u63d2\u5165\u5b57\u7b26 erase() \u5220\u9664\u5b57\u7b26 clear() \u79fb\u9664\u5168\u90e8\u5b57\u7b26 resize() \u6539\u53d8\u5b57\u7b26\u6570\u91cf replace() \u66ff\u6362\u5b57\u7b26 + \u4e32\u8054\u5b57\u7b26\u4e32 ==\uff0c!=\uff0c&lt;\uff0c&lt;=\uff0c&gt;\uff0c&gt;=\uff0ccompare() \u6bd4\u8f83\u5b57\u7b26\u4e32\u5185\u5bb9 size(),length() \u8fd4\u56de\u5b57\u7b26\u6570\u91cf,\u7b49\u6548\u51fd\u6570 max_size() \u8fd4\u56de\u5b57\u7b26\u7684\u6700\u5927\u53ef\u80fd\u4e2a\u6570 empty() \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u7a7a capacity() \u8fd4\u56de\u91cd\u65b0\u5206\u914d\u4e4b\u524d\u7684\u5b57\u7b26\u5bb9\u91cf reserve() \u4fdd\u7559\u4e00\u5b9a\u91cf\u5185\u5b58\u4ee5\u5bb9\u7eb3\u4e00\u5b9a\u6570\u91cf\u7684\u5b57\u7b26 [ ]\uff0cat() \u5b58\u53d6\u5355\u4e00\u5b57\u7b26 &gt;&gt;\uff0cgetline() \u4ecestream\u4e2d\u8bfb\u53d6\u67d0\u503c &lt;&lt; \u5c06\u67d0\u503c\u5199\u5165stream copy() \u5c06\u5185\u5bb9\u590d\u5236\u4e3a\u4e00\u4e2aC-string c_str() \u5c06\u5185\u5bb9\u4ee5C-string\u5f62\u5f0f\u8fd4\u56de data() \u5c06\u5185\u5bb9\u4ee5\u5b57\u7b26\u6570\u7ec4\u5f62\u5f0f\u8fd4\u56de substr() \u8fd4\u56de\u67d0\u4e2a\u5b50\u5b57\u7b26\u4e32 begin()\uff0cend() \u63d0\u4f9b\u6b63\u5e38\u7684\u8fed\u4ee3\u5668\u652f\u6301 rbegin()\uff0crend() \u63d0\u4f9b\u9006\u5411\u8fed\u4ee3\u5668\u652f\u6301"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#pair","title":"pair","text":"<p>\u5934\u6587\u4ef6\uff1autility</p> <p>STL\u7684utility\u5934\u6587\u4ef6\u4e2d\u63cf\u8ff0\u4e86\u4e00\u4e2a\u770b\u4e0a\u53bb\u975e\u5e38\u7b80\u5355\u7684\u6a21\u7248\u7c7bpair\uff0c\u7528\u6765\u8868\u793a\u4e00\u4e2a\u4e8c\u5143\u7ec4\u6216\u5143\u7d20\u5bf9\uff0c\u5e76\u63d0\u4f9b\u4e86\u6309\u7167\u5b57\u5178\u5e8f\u5bf9\u5143\u7d20\u5bf9\u8fdb\u884c\u5927\u5c0f\u6bd4\u8f83\u8fd0\u7b97\u7b26\u6a21\u7248\u51fd\u6570\u3002  Example\uff0c\u60f3\u8981\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u8868\u793a\u4e00\u4e2a\u5e73\u9762\u5750\u6807\u70b9\uff0c\u5219\u53ef\u4ee5\uff1a <pre><code>pair&lt;double, double&gt; p;\ncin &gt;&gt; p.first &gt;&gt; p.second;\n</code></pre> pair\u6a21\u7248\u7c7b\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff1a\u9996\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u548c\u5c3e\u5143\u7d20\u7684\u6570\u636e\u7c7b\u578b\u3002pair\u6a21\u7248\u7c7b\u5bf9\u8c61\u6709\u4e24\u4e2a\u6210\u5458\uff1afirst\u548csecond\uff0c\u5206\u522b\u8868\u793a\u9996\u5143\u7d20\u548c\u5c3e\u5143\u7d20\u3002  \u5728\u5176\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u4e86pair\u4e0a\u7684\u516d\u4e2a\u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a&lt;\u3001&gt;\u3001&lt;=\u3001&gt;=\u3001==\u3001!=\uff0c\u5176\u89c4\u5219\u662f\u5148\u6bd4\u8f83first\uff0cfirst\u76f8\u7b49\u65f6\u518d\u6bd4\u8f83second\uff0c\u8fd9\u7b26\u5408\u5927\u591a\u6570\u5e94\u7528\u7684\u903b\u8f91\u3002\u5f53\u7136\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u91cd\u8f7d\u8fd9\u51e0\u4e2a\u8fd0\u7b97\u7b26\u6765\u91cd\u65b0\u6307\u5b9a\u81ea\u5df1\u7684\u6bd4\u8f83\u903b\u8f91\u3002  \u9664\u4e86\u76f4\u63a5\u5b9a\u4e49\u4e00\u4e2apair\u5bf9\u8c61\u5916\uff0c\u5982\u679c\u9700\u8981\u5373\u65f6\u751f\u6210\u4e00\u4e2apair\u5bf9\u8c61\uff0c\u4e5f\u53ef\u4ee5\u8c03\u7528\u5728\u5176\u4e2d\u5b9a\u4e49\u7684\u4e00\u4e2a\u6a21\u7248\u51fd\u6570\uff1amake_pair\u3002make_pair\u9700\u8981\u4e24\u4e2a\u53c2\u6570\uff0c\u5206\u522b\u4e3a\u5143\u7d20\u5bf9\u7684\u9996\u5143\u7d20\u548c\u5c3e\u5143\u7d20\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#map","title":"map","text":"<p>\u5934\u6587\u4ef6\uff1amap</p> <p>\u5728STL\u7684\u5934\u6587\u4ef6\u4e2dmap\u4e2d\u5b9a\u4e49\u4e86\u6a21\u7248\u7c7bmap\u548cmultimap\uff0c\u7528\u6709\u5e8f\u4e8c\u53c9\u6811\u8868\u5b58\u50a8\u7c7b\u578b\u4e3a<code>pair&lt;const Key, T&gt;</code>\u7684\u5143\u7d20\u5bf9\u5e8f\u5217\u3002\u5e8f\u5217\u4e2d\u7684\u5143\u7d20\u4ee5const Key\u90e8\u5206\u4f5c\u4e3a\u6807\u8bc6\uff0cmap\u4e2d\u6240\u6709\u5143\u7d20\u7684Key\u503c\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0cmultimap\u5219\u5141\u8bb8\u6709\u91cd\u590d\u7684Key\u503c\u3002</p> <p>\u53ef\u4ee5\u5c06map\u770b\u4f5c\u662f\u7531Key\u6807\u8bc6\u5143\u7d20\u7684\u5143\u7d20\u96c6\u5408\uff0c\u8fd9\u7c7b\u5bb9\u5668\u4e5f\u88ab\u79f0\u4e3a\u201c\u5173\u8054\u5bb9\u5668\u201d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2aKey\u503c\u6765\u5feb\u901f\u51b3\u5b9a\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u975e\u5e38\u9002\u5408\u4e8e\u9700\u8981\u6309\u7167Key\u503c\u67e5\u627e\u5143\u7d20\u7684\u5bb9\u5668\u3002  map\u6a21\u7248\u7c7b\u9700\u8981\u56db\u4e2a\u6a21\u7248\u53c2\u6570\uff0c\u7b2c\u4e00\u4e2a\u662f\u952e\u503c\u7c7b\u578b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5143\u7d20\u7c7b\u578b\uff0c\u7b2c\u4e09\u4e2a\u662f\u6bd4\u8f83\u7b97\u5b50\uff0c\u7b2c\u56db\u4e2a\u662f\u5206\u914d\u5668\u7c7b\u578b\u3002\u5176\u4e2d\u952e\u503c\u7c7b\u578b\u548c\u5143\u7d20\u7c7b\u578b\u662f\u5fc5\u8981\u7684\u3002</p> <p>\u5b9a\u4e49map\u5bf9\u8c61\u7684\u4ee3\u7801\u793a\u4f8b\uff1a</p> <pre><code>map&lt;string, int&gt; m;\n</code></pre> <p>map\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <pre><code>/*  \u5411map\u4e2d\u63d2\u5165\u5143\u7d20  */\nm[key] = value; //  [key]\u64cd\u4f5c\u662fmap\u5f88\u6709\u7279\u8272\u7684\u64cd\u4f5c,\u5982\u679c\u5728map\u4e2d\u5b58\u5728\u952e\u503c\u4e3akey\u7684\u5143\u7d20\u5bf9, \u5219\u8fd4\u56de\u8be5\u5143\u7d20\u5bf9\u7684\u503c\u57df\u90e8\u5206,\u5426\u5219\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u952e\u503c\u4e3akey\u7684\u5143\u7d20\u5bf9,\u503c\u57df\u4e3a\u9ed8\u8ba4\u503c\u3002\u6240\u4ee5\u53ef\u4ee5\u7528\u8be5\u64cd\u4f5c\u5411map\u4e2d\u63d2\u5165\u5143\u7d20\u5bf9\u6216\u4fee\u6539\u5df2\u7ecf\u5b58\u5728\u7684\u5143\u7d20\u5bf9\u7684\u503c\u57df\u90e8\u5206\u3002\nm.insert(make_pair(key, value));    //  \u4e5f\u53ef\u4ee5\u76f4\u63a5\u8c03\u7528insert\u65b9\u6cd5\u63d2\u5165\u5143\u7d20\u5bf9,insert\u64cd\u4f5c\u4f1a\u8fd4\u56de\u4e00\u4e2apair,\u5f53map\u4e2d\u6ca1\u6709\u4e0ekey\u76f8\u5339\u914d\u7684\u952e\u503c\u65f6,\u5176first\u662f\u6307\u5411\u63d2\u5165\u5143\u7d20\u5bf9\u7684\u8fed\u4ee3\u5668,\u5176second\u4e3atrue;\u82e5map\u4e2d\u5df2\u7ecf\u5b58\u5728\u4e0ekey\u76f8\u7b49\u7684\u952e\u503c\u65f6,\u5176first\u662f\u6307\u5411\u8be5\u5143\u7d20\u5bf9\u7684\u8fed\u4ee3\u5668,second\u4e3afalse\u3002\n\n/*  \u67e5\u627e\u5143\u7d20  */\nint i = m[key]; //  \u8981\u6ce8\u610f\u7684\u662f,\u5f53\u4e0e\u8be5\u952e\u503c\u76f8\u5339\u914d\u7684\u5143\u7d20\u5bf9\u4e0d\u5b58\u5728\u65f6,\u4f1a\u521b\u5efa\u952e\u503c\u4e3akey\uff08\u5f53\u53e6\u4e00\u4e2a\u5143\u7d20\u662f\u6574\u5f62\u65f6\uff0cm[key]=0\uff09\u7684\u5143\u7d20\u5bf9\u3002\nmap&lt;string, int&gt;::iterator it = m.find(key);    //  \u5982\u679cmap\u4e2d\u5b58\u5728\u4e0ekey\u76f8\u5339\u914d\u7684\u952e\u503c\u65f6,find\u64cd\u4f5c\u5c06\u8fd4\u56de\u6307\u5411\u8be5\u5143\u7d20\u5bf9\u7684\u8fed\u4ee3\u5668,\u5426\u5219,\u8fd4\u56de\u7684\u8fed\u4ee3\u5668\u7b49\u4e8emap\u7684end()(\u53c2\u89c1vector\u4e2d\u63d0\u5230\u7684begin()\u548cend()\u64cd\u4f5c)\u3002\n\n/*  \u5220\u9664\u5143\u7d20  */\nm.erase(key);   //  \u5220\u9664\u4e0e\u6307\u5b9akey\u952e\u503c\u76f8\u5339\u914d\u7684\u5143\u7d20\u5bf9,\u5e76\u8fd4\u56de\u88ab\u5220\u9664\u7684\u5143\u7d20\u7684\u4e2a\u6570\u3002\nm.erase(it);    //  \u5220\u9664\u7531\u8fed\u4ee3\u5668it\u6240\u6307\u5b9a\u7684\u5143\u7d20\u5bf9,\u5e76\u8fd4\u56de\u6307\u5411\u4e0b\u4e00\u4e2a\u5143\u7d20\u5bf9\u7684\u8fed\u4ee3\u5668\u3002\n\n/*  \u5176\u4ed6\u64cd\u4f5c  */\nm.size();       //  \u8fd4\u56de\u5143\u7d20\u4e2a\u6570\nm.empty();      //  \u5224\u65ad\u662f\u5426\u4e3a\u7a7a\nm.clear();      //  \u6e05\u7a7a\u6240\u6709\u5143\u7d20\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#stack","title":"stack","text":"<p>\u5934\u6587\u4ef6\uff1astack</p> <p>stack\u6a21\u7248\u7c7b\u7684\u5b9a\u4e49\u5728stack\u5934\u6587\u4ef6\u4e2d\u3002  stack\u6a21\u7248\u7c7b\u9700\u8981\u4e24\u4e2a\u6a21\u7248\u53c2\u6570\uff0c\u4e00\u4e2a\u662f\u5143\u7d20\u7c7b\u578b\uff0c\u53e6\u4e00\u4e2a\u662f\u5bb9\u5668\u7c7b\u578b\uff0c\u4f46\u662f\u53ea\u6709\u5143\u7d20\u7c7b\u578b\u662f\u5fc5\u8981\u7684\uff0c\u5728\u4e0d\u6307\u5b9a\u5bb9\u5668\u7c7b\u578b\u65f6\uff0c\u9ed8\u8ba4\u5bb9\u5668\u7684\u7c7b\u578b\u4e3adeque\u3002</p> <p>\u5b9a\u4e49stack\u5bf9\u8c61\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b:</p> <p><pre><code>stack&lt;int&gt; s;\nstack&lt;string&gt; ss;\n</code></pre> stack\u7684\u57fa\u672c\u64cd\u4f5c\u6709\uff1a</p> <pre><code>s.push(x);  //  \u5165\u6808\ns.pop();    //  \u51fa\u6808\ns.top();    //  \u8bbf\u95ee\u6808\u9876\ns.empty();  //  \u5f53\u6808\u7a7a\u65f6\uff0c\u8fd4\u56detrue\ns.size();   //  \u8bbf\u95ee\u6808\u4e2d\u5143\u7d20\u4e2a\u6570\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#queue","title":"queue","text":"<p>\u5934\u6587\u4ef6\uff1aqueue</p> <p>queue\u6a21\u7248\u7c7b\u7684\u5b9a\u4e49\u5728queue\u5934\u6587\u4ef6\u4e2d\u3002  queue\u4e0estack\u76f8\u4f3c\uff0cqueue\u6a21\u7248\u7c7b\u4e5f\u9700\u8981\u4e24\u4e2a\u6a21\u7248\u53c2\u6570\uff0c\u4e00\u4e2a\u5143\u7d20\u7c7b\u578b\uff0c\u4e00\u4e2a\u5bb9\u5668\u7c7b\u578b\uff0c\u5143\u7d20\u7c7b\u578b\u65f6\u5fc5\u987b\u7684\uff0c\u5bb9\u5668\u7c7b\u578b\u65f6\u53ef\u9009\u7684\uff0c\u9ed8\u8ba4\u4e3adeque\u7c7b\u578b\u3002</p> <p>\u5b9a\u4e49queue\u5bf9\u8c61\u7684\u793a\u4f8b\u4ee3\u7801\u5fc5\u987b\u5982\u4e0b\uff1a</p> <pre><code>queue&lt;int&gt; q;\nqueue&lt;double&gt; qq;\n</code></pre> <p>queue\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <pre><code>q.push(x);  //  \u5165\u961f\u5217\nq.pop();    //  \u51fa\u961f\u5217\nq.front();  //  \u8bbf\u95ee\u961f\u9996\u5143\u7d20\nq.back();   //  \u8bbf\u95ee\u961f\u5c3e\u5143\u7d20\nq.empty();  //  \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\nq.size();   //  \u8bbf\u95ee\u961f\u5217\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#set","title":"set","text":"<p>\u5934\u6587\u4ef6\uff1aset</p> <p>set\u662f\u4e0e\u96c6\u5408\u76f8\u5173\u7684\u5bb9\u5668\uff0cSTL\u4e3a\u6211\u4eec\u63d0\u4f9b\u4e86set\u7684\u5b9e\u73b0\uff0c\u5728\u7f16\u7a0b\u9898\u4e2d\u9047\u89c1\u96c6\u5408\u95ee\u9898\u76f4\u63a5\u8c03\u7528\u662f\u5341\u5206\u65b9\u4fbf\u7684\u3002</p> <p>\u5b9a\u4e49set\u5bf9\u8c61\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p><pre><code>set&lt;int&gt; s;\nset&lt;double&gt; ss;\n</code></pre> set\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <pre><code>s.begin()       //  \u8fd4\u56de\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\ns.clear()       //  \u6e05\u9664\u6240\u6709\u5143\u7d20\ns.count()       //  \u8fd4\u56de\u67d0\u4e2a\u503c\u5143\u7d20\u7684\u4e2a\u6570\ns.empty()       //  \u5982\u679c\u96c6\u5408\u4e3a\u7a7a\uff0c\u8fd4\u56detrue(\u771f\uff09\ns.end()         //  \u8fd4\u56de\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u4e4b\u540e\u7684\u8fed\u4ee3\u5668\uff0c\u4e0d\u662f\u6700\u540e\u4e00\u4e2a\u5143\u7d20\ns.equal_range() //  \u8fd4\u56de\u96c6\u5408\u4e2d\u4e0e\u7ed9\u5b9a\u503c\u76f8\u7b49\u7684\u4e0a\u4e0b\u9650\u7684\u4e24\u4e2a\u8fed\u4ee3\u5668\ns.erase()       //  \u5220\u9664\u96c6\u5408\u4e2d\u7684\u5143\u7d20\ns.find()        //  \u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u88ab\u67e5\u627e\u5230\u5143\u7d20\u7684\u8fed\u4ee3\u5668\ns.get_allocator()   //  \u8fd4\u56de\u96c6\u5408\u7684\u5206\u914d\u5668\ns.insert()      //  \u5728\u96c6\u5408\u4e2d\u63d2\u5165\u5143\u7d20\ns.lower_bound() //  \u8fd4\u56de\u6307\u5411\u5927\u4e8e\uff08\u6216\u7b49\u4e8e\uff09\u67d0\u503c\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u8fed\u4ee3\u5668\ns.key_comp()    //  \u8fd4\u56de\u4e00\u4e2a\u7528\u4e8e\u5143\u7d20\u95f4\u503c\u6bd4\u8f83\u7684\u51fd\u6570\ns.max_size()    //  \u8fd4\u56de\u96c6\u5408\u80fd\u5bb9\u7eb3\u7684\u5143\u7d20\u7684\u6700\u5927\u9650\u503c\ns.rbegin()      //  \u8fd4\u56de\u6307\u5411\u96c6\u5408\u4e2d\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7684\u53cd\u5411\u8fed\u4ee3\u5668\ns.rend()        //  \u8fd4\u56de\u6307\u5411\u96c6\u5408\u4e2d\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u53cd\u5411\u8fed\u4ee3\u5668\ns.size()        //  \u96c6\u5408\u4e2d\u5143\u7d20\u7684\u6570\u76ee\ns.swap()        //  \u4ea4\u6362\u4e24\u4e2a\u96c6\u5408\u53d8\u91cf\ns.upper_bound() //  \u8fd4\u56de\u5927\u4e8e\u67d0\u4e2a\u503c\u5143\u7d20\u7684\u8fed\u4ee3\u5668\ns.value_comp()  //  \u8fd4\u56de\u4e00\u4e2a\u7528\u4e8e\u6bd4\u8f83\u5143\u7d20\u95f4\u7684\u503c\u7684\u51fd\u6570\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#multiset","title":"multiset","text":"<p>\u5934\u6587\u4ef6\uff1aset</p> <p>\u5728set\u5934\u6587\u4ef6\u4e2d\uff0c\u8fd8\u5b9a\u4e49\u4e86\u53e6\u4e00\u4e2a\u975e\u5e38\u5b9e\u7528\u7684\u6a21\u7248\u7c7bmultiset\uff08\u591a\u91cd\u96c6\u5408\uff09\u3002\u591a\u91cd\u96c6\u5408\u4e0e\u96c6\u5408\u7684\u533a\u522b\u5728\u4e8e\u96c6\u5408\u4e2d\u4e0d\u80fd\u5b58\u5728\u76f8\u540c\u5143\u7d20\uff0c\u800c\u591a\u91cd\u96c6\u5408\u4e2d\u53ef\u4ee5\u5b58\u5728\u3002</p> <p>\u5b9a\u4e49multiset\u5bf9\u8c61\u7684\u793a\u4f8b\u4ee3\u7801\u5982\u4e0b\uff1a</p> <p><pre><code>multiset&lt;int&gt; s;\nmultiset&lt;double&gt; ss;\n</code></pre> multiset\u548cset\u7684\u57fa\u672c\u64cd\u4f5c\u76f8\u4f3c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u96c6\u5408\u7684count()\u80fd\u8fd4\u56de0\uff08\u65e0\uff09\u6216\u80051\uff08\u6709\uff09\uff0c\u800c\u591a\u91cd\u96c6\u5408\u662f\u6709\u591a\u5c11\u4e2a\u8fd4\u56de\u591a\u5c11\u4e2a\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#bitset","title":"bitset","text":"<p>\u5934\u6587\u4ef6\uff1abitset</p> <p>\u5728 STLSTL \u7684\u5934\u6587\u4ef6\u4e2d bitset\u4e2d\u5b9a\u4e49\u4e86\u6a21\u7248\u7c7b bitsetbitset\uff0c\u7528\u6765\u65b9\u4fbf\u5730\u7ba1\u7406\u4e00\u7cfb\u5217\u7684 bitbit \u4f4d\u7684\u7c7b\u3002bitsetbitset \u9664\u4e86\u53ef\u4ee5\u8bbf\u95ee\u6307\u5b9a\u4e0b\u6807\u7684 bitbit \u4f4d\u4ee5\u5916\uff0c\u8fd8\u53ef\u4ee5\u628a\u5b83\u4eec\u4f5c\u4e3a\u4e00\u4e2a\u6574\u6570\u6765\u8fdb\u884c\u67d0\u4e9b\u7edf\u8ba1\u3002</p> <p>bitsetbitset \u6a21\u677f\u7c7b\u9700\u8981\u4e00\u4e2a\u6a21\u7248\u53c2\u6570\uff0c\u7528\u6765\u660e\u786e\u6307\u5b9a\u542b\u6709\u591a\u5c11\u4f4d\u3002</p> <p>\u5b9a\u4e49 bitsetbitset \u5bf9\u8c61\u7684\u793a\u4f8b\u4ee3\u7801\uff1a</p> <pre><code>const int MAXN = 32;\nbitset&lt;MAXN&gt; bt;            //  bt \u5305\u62ec MAXN \u4f4d\uff0c\u4e0b\u6807 0 ~ MAXN - 1\uff0c\u9ed8\u8ba4\u521d\u59cb\u5316\u4e3a 0\nbitset&lt;MAXN&gt; bt1(0xf);      //  0xf \u8868\u793a\u5341\u516d\u8fdb\u5236\u6570 f\uff0c\u5bf9\u5e94\u4e8c\u8fdb\u5236 1111\uff0c\u5c06 bt1 \u4f4e 4 \u4f4d\u521d\u59cb\u5316\u4e3a 1\nbitset&lt;MAXN&gt; bt2(012);      //  012 \u8868\u793a\u516b\u8fdb\u5236\u6570 12\uff0c\u5bf9\u5e94\u4e8c\u8fdb\u5236 1010\uff0c\u5373\u5c06 bt2 \u4f4e 4 \u4f4d\u521d\u59cb\u5316\u4e3a 1010\nbitset&lt;MAXN&gt; bt3(\"1010\");   //  \u5c06 bt3 \u4f4e 4 \u4f4d\u521d\u59cb\u5316\u4e3a 1010\nbitset&lt;MAXN&gt; bt4(s, pos, n);//  \u5c06 01 \u5b57\u7b26\u4e32 s \u7684 pos \u4f4d\u5f00\u59cb\u7684 n \u4f4d\u521d\u59cb\u5316 bt4\n</code></pre> <p>bitsetbitset \u57fa\u672c\u64cd\u4f5c\uff1a</p> <pre><code>bt.any()        //  bt \u4e2d\u662f\u5426\u5b58\u5728\u7f6e\u4e3a 1 \u7684\u4e8c\u8fdb\u5236\u4f4d\uff1f\nbt.none()       //  bt \u4e2d\u4e0d\u5b58\u5728\u7f6e\u4e3a 1 \u7684\u4e8c\u8fdb\u5236\u4f4d\u5417\uff1f\nbt.count()      //  bt \u4e2d\u7f6e\u4e3a 1 \u7684\u4e8c\u8fdb\u5236\u4f4d\u7684\u4e2a\u6570\nbt.size()       //  bt \u4e2d\u4e8c\u8fdb\u5236\u4f4d\u7684\u4e2a\u6570\nbt[pos]         //  \u8bbf\u95ee bt \u4e2d\u5728 pos \u5904\u7684\u4e8c\u8fdb\u5236\u4f4d\nbt.test(pos)    //  bt \u4e2d\u5728 pos \u5904\u7684\u4e8c\u8fdb\u5236\u4f4d\u662f\u5426\u4e3a 1\nbt.set()        //  \u628a bt \u4e2d\u6240\u6709\u4e8c\u8fdb\u5236\u4f4d\u90fd\u7f6e\u4e3a 1\nbt.set(pos)     //  \u628a bt \u4e2d\u5728 pos \u5904\u7684\u4e8c\u8fdb\u5236\u4f4d\u7f6e\u4e3a 1\nbt.reset()      //  \u628a bt \u4e2d\u6240\u6709\u4e8c\u8fdb\u5236\u4f4d\u90fd\u7f6e\u4e3a 0\nbt.reset(pos)   //  \u628a bt \u4e2d\u5728pos\u5904\u7684\u4e8c\u8fdb\u5236\u4f4d\u7f6e\u4e3a0\nbt.flip()       //  \u628a bt \u4e2d\u6240\u6709\u4e8c\u8fdb\u5236\u4f4d\u9010\u4f4d\u53d6\u53cd\nbt.flip(pos)    //  \u628a bt \u4e2d\u5728 pos \u5904\u7684\u4e8c\u8fdb\u5236\u4f4d\u53d6\u53cd\nbt[pos].flip()  //  \u540c\u4e0a\nbt.to_ulong()   //  \u7528 bt \u4e2d\u540c\u6837\u7684\u4e8c\u8fdb\u5236\u4f4d\u8fd4\u56de\u4e00\u4e2a unsigned long \u503c\nos &lt;&lt; bt        //  \u628a bt \u4e2d\u7684\u4f4d\u96c6\u8f93\u51fa\u5230 os \u6d41\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_23","title":"\u56fe\u6a21\u677f","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_24","title":"\u4e0d\u5e26\u51fa\u5165\u5ea6\u7684\u6700\u7b80\u6a21\u677f","text":"<pre><code>#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;set&gt;\n\nusing namespace std;\n\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b) )\n\n//\u5b9a\u4e49\u56fe\u7684\u5b9a\u70b9\ntypedef struct Vertex {\n    int id;\n    vector&lt;int&gt; connectors;    //\u5b58\u50a8\u8282\u70b9\u7684\u540e\u7eed\u8fde\u63a5\u9876\u70b9\u7f16\u53f7\n    Vertex() : id(-1) {}\n    Vertex(int nid) : id(nid) {}\n} Vertex;\n\n//\u5b9a\u4e49Graph\u7684\u90bb\u63a5\u8868\u8868\u793a\ntypedef struct Graph {\n    vector&lt;Vertex&gt; vertexs;   //\u5b58\u50a8\u5b9a\u70b9\u4fe1\u606f\n    int nVertexs;             //\u8ba1\u6570\uff1a\u90bb\u63a5\u6570\n    bool isDAG;               //\u6807\u5fd7\uff1a\u662f\u6709\u5411\u56fe\u5417\n\n    Graph(int n, bool isDAG) : nVertexs(n), isDAG(isDAG) { vertexs.resize(n); }\n\n    //\u5411\u56fe\u4e2d\u6dfb\u52a0\u8fb9\n    bool addEdge(int id1, int id2) {\n        if (!(MAX(id1, id2) &lt; vertexs.size())) return false;\n\n        if (isDAG) {\n            vertexs[id1].connectors.push_back(id2);\n        }\n        else {\n            vertexs[id1].connectors.push_back(id2);\n            vertexs[id2].connectors.push_back(id1);\n        }\n        return true;\n    }\n\n    //\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\n    vector&lt;int&gt; BFS(int start) {\n        set&lt;int&gt; visited;\n        vector&lt;int&gt; g, rst;\n        g.push_back(start);\n        visited.insert(start);\n        while(g.size() &gt; 0) {\n            int id = g[0];          \n            g.erase(g.begin());\n            rst.push_back(id);\n            for(int i = 0; i &lt; vertexs[id].connectors.size(); i++) {\n                int id1 = vertexs[id].connectors[i];\n                if (visited.count(id1) == 0) {\n                    g.push_back(id1);\n                    visited.insert(id1);\n                }\n            }\n        }\n        return rst;\n    }\n\n    //\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\n    vector&lt;int&gt; DFS(int start) {\n        set&lt;int&gt; visited;\n        vector&lt;int&gt; g, rst;\n        g.push_back(start);\n        //cout &lt;&lt; \"push \" &lt;&lt; start &lt;&lt; \" \";\n        visited.insert(start);\n        rst.push_back(start);\n        bool found;\n        while(g.size() &gt; 0) {\n            int id = g[g.size()-1];         \n            found = false;\n            for(int i = 0; i &lt; vertexs[id].connectors.size(); i++) {\n                int id1 = vertexs[id].connectors[i];\n                if (visited.count(id1) == 0) {\n                    g.push_back(id1);\n                    rst.push_back(id1);\n                    visited.insert(id1);\n                    //cout &lt;&lt; \"push \" &lt;&lt; id1 &lt;&lt; \" \";\n                    found = true;\n                    break;\n                }\n            }\n            if (!found) {\n                int id2 = g[g.size()-1];\n                rst.push_back(-1 * id2);\n                //cout &lt;&lt; \"pop \" &lt;&lt; id2 &lt;&lt; \" \";\n                g.pop_back();\n            }\n        }\n        //cout &lt;&lt; endl;\n        return rst;\n    }\n} Graph;\n\nint main() {\n    Graph g(8, false);\n    g.addEdge(0, 1);\n    g.addEdge(0, 3);\n    g.addEdge(1, 2);\n    g.addEdge(3, 4);\n    g.addEdge(3, 5);\n    g.addEdge(4, 5);\n    g.addEdge(4, 6);    \n    g.addEdge(5, 6);\n    g.addEdge(5, 7);    \n    g.addEdge(6, 7);\n    vector&lt;int&gt; bv = g.BFS(0);\n    cout &lt;&lt; \"\u5bbd\u5ea6\u4f18\u5148\u641c\u7d22\u8282\u70b9\u987a\u5e8f\uff1a\";\n    for(int j = 0; j &lt; bv.size(); j++)\n        cout &lt;&lt; bv[j] &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n\n    cout &lt;&lt; \"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u8282\u70b9\u987a\u5e8f\uff1a\";\n    Graph g1(6, false);\n    g1.addEdge(0, 1);\n    g1.addEdge(0, 4);\n    g1.addEdge(0, 5);\n    g1.addEdge(1, 5);\n    g1.addEdge(4, 5);\n    g1.addEdge(5, 2);\n    g1.addEdge(5, 3);\n    g1.addEdge(2, 3);\n    vector&lt;int&gt; route = g1.DFS(0);\n    for(int i = 0; i &lt; route.size(); i++)\n        cout &lt;&lt; route[i] &lt;&lt; \" \";\n    cout &lt;&lt; endl;\n\n    char ch;\n    cin &gt;&gt; ch;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#2019","title":"\u5e26\u51fa\u5165\u5ea6\u7684 (2019\u63a8\u514d\u8bd5\u9898)","text":"<pre><code>#include &lt;algorithm&gt;\n#include &lt;iostream&gt;\n#include &lt;vector&gt;\n#include &lt;queue&gt;\n#define MAX(a, b) ((a) &gt; (b) ? (a) : (b) )\nusing namespace std;\nint n,m;\nvector&lt;int&gt; inDegreelist,outDegreelist;\n\n//\u5b9a\u4e49\u56fe\u7684\u5b9a\u70b9\ntypedef struct Vertex {\n    int id,inDegree,outDegree;\n    vector&lt;int&gt; connectors;    //\u5b58\u50a8\u8282\u70b9\u7684\u540e\u7eed\u8fde\u63a5\u9876\u70b9\u7f16\u53f7\n    Vertex() : id(-1),inDegree(0),outDegree(0) {}\n    Vertex(int nid) : id(nid),inDegree(0),outDegree(0) {}\n} Vertex;\n\n//\u5b9a\u4e49Graph\u7684\u90bb\u63a5\u8868\u8868\u793a\ntypedef struct Graph {\n    vector&lt;Vertex&gt; vertexs;   //\u5b58\u50a8\u5b9a\u70b9\u4fe1\u606f\n    int nVertexs;             //\u8ba1\u6570\uff1a\u90bb\u63a5\u6570\n    bool isDAG;               //\u6807\u5fd7\uff1a\u662f\u6709\u5411\u56fe\u5417\n\n    Graph(int n, bool isDAG) : nVertexs(n), isDAG(isDAG) { vertexs.resize(n); }\n    Graph() : nVertexs(1), isDAG(1) { vertexs.resize(1); }\n    //\u5411\u56fe\u4e2d\u6dfb\u52a0\u8fb9\n    bool addEdge(int id1, int id2) {\n        if (!(MAX(id1, id2) &lt; vertexs.size())) return false;\n\n        if (isDAG) {\n            vertexs[id1].connectors.push_back(id2);\n            vertexs[id1].outDegree++;\n            vertexs[id2].inDegree++;\n        }\n        else {\n            vertexs[id1].connectors.push_back(id2);\n            vertexs[id2].connectors.push_back(id1);\n\n            vertexs[id1].outDegree++;\n            vertexs[id1].inDegree++;\n\n            vertexs[id2].outDegree++;\n            vertexs[id2].inDegree++;\n\n        }\n        return true;\n    }\n} Graph;\n\nGraph g;\n\nvoid init(){\n    cin&gt;&gt;n&gt;&gt;m;\n    g=Graph(n, true);\n    int src,dst;\n    while(m--){\n        cin&gt;&gt;src&gt;&gt;dst;\n        g.addEdge(src,dst);\n    }\n    vector&lt;Vertex&gt;::iterator it = g.vertexs.begin();\n    while(it!=g.vertexs.end()){\n        inDegreelist.push_back(it-&gt;inDegree);\n        outDegreelist.push_back(it-&gt;outDegree);\n        it++;\n    }\n}\nint countin(int n){\n    return count(inDegreelist.begin(),inDegreelist.end(),n);\n}\nint countout(int n){\n    return count(outDegreelist.begin(),outDegreelist.end(),n);\n}\n\nbool Is_List(){\n    //\u6709\u4e00\u4e2ainDegree\u4e3a0\u7684\u5934\u548c\u4e00\u4e2aoutDegree\u4e3a0\u7684\u5c3e\uff0c\u4e14\u5176\u4f59\u8282\u70b9\u5165\u5ea6\u4e0e\u51fa\u5ea6\u90fd\u4e3a1;\n    return (countin(0)==1)&amp;&amp;(countout(0)==1)&amp;&amp;(countin(1)==n-1)&amp;&amp;(countout(1)==n-1);\n}\n\nbool Is_Tree(){\n    //\u6709\u4e00\u4e2ainDegree\u4e3a0\u7684\u5934\u4e14\u5176\u4f59\u8282\u70b9inDegree\u5747\u4e3a1\uff0c\u4e14\u4e0d\u662f\u94fe\u8868;\n    return (countin(0)==1)&amp;&amp;(countin(1)==n-1);\n}\n\nbool topologicalSort(){//\u62d3\u6251\u6392\u5e8f\u5224\u65ad\u6709\u73af\u65e0\u73af\n    int num=0;//\u8bb0\u5f55\u52a0\u5165\u62d3\u6251\u6392\u5e8f\u7684\u9876\u70b9\u6570\n    queue&lt;int&gt; q;\n    for(int i=0;i&lt;n;i++){\n        if(inDegreelist[i]==0){\n            q.push(i);//\u5c06\u6240\u6709\u5165\u5ea6\u4e3a0\u7684\u9876\u70b9\u5165\u961f\n        }\n    }\n\n    while(!q.empty()){\n        int u=q.front();//\u53d6\u961f\u9996\u9876\u70b9u\n        q.pop();\n        for(int i=0;i&lt;g.vertexs[u].connectors.size();i++){\n            int v=g.vertexs[u].connectors[i];//u\u7684\u540e\u7ee7\u8282\u70b9v\n            inDegreelist[v]--;//v\u7684\u5165\u5ea6\u51cf1\n            if(inDegreelist[v]==0){//\u9876\u70b9v\u7684\u5165\u5ea6\u51cf\u4e3a0\u5219\u5165\u961f\n                q.push(v);\n            }\n        }\n        g.vertexs[u].connectors.clear();//\u6e05\u7a7au\u7684\u6240\u6709\u51fa\u8fb9\n        num++;//\u52a0\u5165\u62d3\u6251\u6392\u5e8f\u7684\u9876\u70b9\u6570\u52a01\n    }\n    if(num==n) return true;//\u52a0\u5165\u62d3\u6251\u6392\u5e8f\u7684\u9876\u70b9\u4e3an\uff0c\u5219\u62d3\u6251\u6392\u5e8f\u6210\u529f\uff0c\u56fe\u65e0\u73af\n    else return false;//\u5426\u5219\u62d3\u6251\u6392\u5e8f\u5931\u8d25\uff0c\u56fe\u6709\u73af\n}\n\n\nint main(){\n    init();\n    if(n==0||m==0){\n        cout&lt;&lt;\"error\"&lt;&lt;endl;\n    }\n    if(Is_List()){\n        cout&lt;&lt;\"list\"&lt;&lt;endl;\n    }\n\n    else if(Is_Tree()){\n        cout&lt;&lt;\"tree\"&lt;&lt;endl;\n    }\n    else if(topologicalSort()){\n        cout&lt;&lt;\"no ring\"&lt;&lt;endl;\n    }\n    else{\n    cout&lt;&lt;\"have ring\"&lt;&lt;endl;\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#uv-","title":"\u56fe\u7b97\u6cd5\uff1a\u627e\u51fau\u5230v\u7684\u6240\u6709\u8def\u5f84-\u90bb\u63a5\u8868","text":"<pre><code>#include&lt;stdio.h&gt;\n#include&lt;stdlib.h&gt;\n\n#ifndef BASE\n#define BASE\n#define TRUE 1\n#define FALSE 0\n#define OK 1\n#define ERROR 0\n#define INFEASIBLE -1\n#define OVERFLOW -2\ntypedef int Status;\ntypedef int bool;\n#endif\n\n#define VertexType char //\u70b9\u7c7b\u578b\n#define VRType int //\u8fb9\u7c7b\u578b\n#define maxSize 100\nvoid Visit(VertexType e) {\n    printf(\"%c\", e);\n}\n\n#define MAX_VERTEX_NUM 20\ntypedef enum{DG, UDG} GraphKind;\ntypedef struct ArcNode{\n    int adjV; //\u8fb9\u6307\u5411\u7684\u9876\u70b9\n    VRType weight; //\u6743\u91cd\n    struct ArcNode *next;\n}ArcNode; //\u8fb9\ntypedef struct VNode{\n    VertexType data;\n    ArcNode *firstarc;\n}VNode, AdjList[MAX_VERTEX_NUM]; //\u9876\u70b9\ntypedef struct{\n    GraphKind kind;\n    int vernum,arcnum;\n    AdjList vers; \n}ALGraph;\n\n\n/*------------------------\n |7.14 \u521b\u5efa\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868|\n ------------------------*/\nStatus InitGraph_AL(ALGraph *pG) { //\u521d\u59cb\u5316\n    int i;\n    pG-&gt;arcnum = 0;\n    pG-&gt;vernum = 0;\n    for (i=0; i&lt;MAX_VERTEX_NUM; ++i)\n        pG-&gt;vers[i].firstarc = NULL; //VC++6.0\u4e2d\u6307\u9488\u521d\u59cb\u5316\u4e3a0xcccccccc\n    return OK;\n}\nint LocateVex_AL(ALGraph G, VertexType e) { //\u5b9a\u4f4d\u503c\u4e3ae\u7684\u5143\u7d20\u4e0b\u6807\n    int i;\n    for (i=0; i&lt;G.vernum; ++i) {\n        if (G.vers[i].data == e) {\n            return i;\n        }\n    }\n    return -1;\n}\nStatus CreateDG_AL(ALGraph *pG) { //\u521b\u5efa\u6709\u5411\u56fe\u7684\u90bb\u63a5\u8868\n    //\u8f93\u5165\u89c4\u5219\uff1a\u9876\u70b9\u6570\u76ee-&gt;\u5f27\u7684\u6570\u76ee-&gt;\u5404\u9876\u70b9\u7684\u4fe1\u606f-&gt;\u5404\u6761\u5f27\u7684\u4fe1\u606f\n    int i,a,b;\n    char tmp[MAX_VERTEX_NUM];\n    char h,t;\n    ArcNode *p, *q;\n\n    InitGraph_AL(pG); //VC++6.0\u4e2d\u6307\u9488\u521d\u59cb\u5316\u4e3a0xcccccccc\uff0c\u5982\u679c\u4e0d\u5c06\u6307\u9488\u521d\u59cb\u5316\u4e3aNULL\uff0c\u4f1a\u51fa\u9519\n    //\u56fe\u7684\u7c7b\u578b\n    pG-&gt;kind = DG;\n    //\u9876\u70b9\u6570\u76ee\n    scanf(\"%d\", &amp;i); if (i&lt;0) return ERROR;\n    pG-&gt;vernum = i;\n    //\u5f27\u7684\u6570\u76ee\n    scanf(\"%d\", &amp;i); if (i&lt;0) return ERROR;\n    pG-&gt;arcnum = i;\n    //\u5404\u9876\u70b9\u4fe1\u606f\n    scanf(\"%s\", tmp);\n    for (i=0; i&lt;pG-&gt;vernum; ++i) pG-&gt;vers[i].data=tmp[i];\n    //\u5f27\u7684\u4fe1\u606f\n    for (i=0; i&lt;pG-&gt;arcnum; ++i) {\n        scanf(\"%s\", tmp);\n        h = tmp[0]; t = tmp[2];\n        a = LocateVex_AL(*pG, h);\n        b = LocateVex_AL(*pG, t);\n        if (a&lt;0 || b&lt;0) return ERROR;\n        p = (ArcNode *)malloc(sizeof(ArcNode)); if (!p) exit(OVERFLOW);\n        p-&gt;adjV=b;p-&gt;next=NULL;\n        if (pG-&gt;vers[a].firstarc) { //\u5df2\u7ecf\u6709\u8fb9\u4e86\n            for (q = pG-&gt;vers[a].firstarc; q-&gt;next; q=q-&gt;next) ; //\u627e\u5230\u6700\u540e\u4e00\u6761\n            q-&gt;next = p;\n        } else { //\u7b2c\u4e00\u6761\u8fb9\n            pG-&gt;vers[a].firstarc = p;\n        }\n    }\n    return OK;\n}\n\n/*----------------------------------------------------------------\n |7.28 \u6709\u5411\u56fe-\u4eceu-v\u7684\u6240\u6709\u7b80\u5355\u8def\u5f84                                |\n ----------------------------------------------------------------*/\nint visit[MAX_VERTEX_NUM]; //\u524d\u9762\u5b9a\u4e49\u4e86\nVertexType paths[maxSize][MAX_VERTEX_NUM]; //\u5b58\u653e\u8def\u5f84\nint path[MAX_VERTEX_NUM]; //\u8def\u5f84\nint pathnum=0; //\u5f53\u524d\u662f\u7b2c\u51e0\u6761\u8def\u5f84\nvoid FindAllPath(ALGraph G, int u,int v,int k) { //u-&gt;v\u5f53\u524d\u662f\u7b2ck\u4e2a\u4f4d\u7f6e\n    int i;\n    ArcNode *p;\n    visit[u]=1; //\u8d70\u5230\u4e86u\n    path[k]=u; //\u6dfb\u52a0\u5230\u8def\u5f84-&gt;\u4e0b\u6807\u4f4d\u7f6e\u4e3ak\u7684\u7ed3\u70b9\u662fu\uff08\u7b2ck+1\u4e2a\u662fu\uff09\n    if (u==v) { //\u627e\u5230\u4e86\n        for (i=0; i&lt;=k; i++) {//\u590d\u5236\u5230paths\n            paths[pathnum][i] = G.vers[path[i]].data;\n        }\n        paths[pathnum][i]='\\0'; //\u7ed3\u675f\u7b26\n        pathnum++; //\u627e\u4e0b\u4e00\u6761\u8def\u5f84\n    } else {\n        //u\u7684\u90bb\u8fb9\u5f00\u59cb\u627e\n        for (p=G.vers[u].firstarc; p; p=p-&gt;next) {\n            if (visit[p-&gt;adjV]==0)\n                FindAllPath(G, p-&gt;adjV, v, k+1); //\u53bb\u8fd9\u4e2a\u90bb\u63a5\u70b9\u627e\n        }\n    }\n    // \u56de\u6eaf\u5230\u4e0a\u4e00\u4e2a\u7ed3\u70b9\n    // \u6ce8\u610f\uff1a\u56de\u6eaf\u5e94\u8be5\u5199\u5728\u5916\u9762--&gt;\u4e5f\u5c31\u662f\u4e0d\u7ba1\u6709\u6ca1\u6709\u627e\u5230\u90fd\u8981\u56de\u6eaf\n    visit[u]=0;\n    path[k]=0;\n}\n\n\nint main() {\n/*7.28\n6\n11\nABCDEF\nB,A\nB,D\nC,B\nC,F\nD,C\nD,E\nD,F\nE,A\nF,A\nF,B\nF,E\nB-&gt;A\nA-&gt;B\nD-&gt;A\n*/\n    int i,j;\n    int cnt;\n    ALGraph G;\n    char tmp[20];\n\n    CreateDG_AL(&amp;G);\n\n    while (1) {\n        scanf(\"%s\", tmp); //A-&gt;B\n        i = LocateVex_AL(G, tmp[0]);\n        j = LocateVex_AL(G, tmp[3]);\n        for (cnt=0; cnt&lt;MAX_VERTEX_NUM; cnt++) visit[cnt]=0;\n        pathnum=0;\n        printf(\"7.28 \u8f93\u51fa\u6240\u6709 %c \u5230 %c \u7684\u8def\u5f84\\n\", tmp[0], tmp[3]);\n        FindAllPath(G, i, j, 0);\n        if (pathnum==0) {\n            printf(\"\\t- \u8d70\u4e0d\u901a\\n\");\n        }\n        for (i=0; i&lt;pathnum; i++) {\n            printf(\"\\t%d %s\\n\", i+1, paths[i]);\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_25","title":"\u6811\u6a21\u677f","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#_26","title":"\u6ce8\u91ca\u7248","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#include&lt;cmath&gt;\n\n#define mem(a,b) memset(a,b,sizeof a);\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn=50;\nint mid[maxn],po[maxn],pr[maxn];\nint first;\n\nstruct node\n{\n    int l,r;\n}T[maxn];\n\n// \u4e2d\u5e8f+\u5148\u5e8f=&gt;\u4e8c\u53c9\u6811\nint mid_pr_build(int la,int ra,int lb,int rb) // la,ra\uff1a\u8868\u793a\u4e2d\u5e8f\u904d\u5386  lb,rb\uff1a\u8868\u793a\u5148\u5e8f\u904d\u5386\n{\n\u00a0\u00a0\u00a0\u00a0// \u8fd9\u91cc\u4e0d\u80fd\u7b49\u4e8e\uff0c\u56e0\u4e3a\u5047\u8bbe\uff1alen==1\uff0c\u5219la==ra\uff0c\u76f4\u63a5\u8fd4\u56de\uff0c\u4f46\u662f\u5b9e\u9645\u4e0a\u662f\u6709\u4e00\u4e2a rt \u7684\uff0c\u5374\u6ca1\u88ab\u5efa\u7acb\n    if(la&gt;ra) return 0; \n    int rt=pr[lb]; // \u56e0\u4e3a\u5148\u5e8f\u904d\u5386\u7b2c\u4e00\u4e2a\u662f\u6839\u8282\u70b9\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++; // \u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u6839\u8282\u70b9\n    p2=p1-la;\n    T[rt].l=mid_pr_build(la,p1-1,lb+1,lb+p2); // \u5de6\u5b50\u6811\uff08\u9501\u5b9a\u5de6\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n    T[rt].r=mid_pr_build(p1+1,ra,lb+p2+1,rb); // \u53f3\u5b50\u6811\uff08\u9501\u5b9a\u53f3\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n\n    return rt;\n}\n\n// \u4e2d\u5e8f+\u540e\u5e8f=&gt;\u4e8c\u53c9\u6811\nint mid_po_build(int la,int ra,int lb,int rb) // la,ra\uff1a\u8868\u793a\u4e2d\u5e8f\u904d\u5386  lb,rb\uff1a\u8868\u793a\u540e\u5e8f\u904d\u5386\n{\n    if(la&gt;ra) return 0;\n    int rt=po[rb]; // \u56e0\u4e3a\u540e\u5e8f\u904d\u5386\u6700\u540e\u4e00\u4e2a\u662f\u6839\u8282\u70b9\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++; // \u5728\u4e2d\u5e8f\u904d\u5386\u4e2d\u627e\u5230\u6839\u8282\u70b9\n    p2=p1-la;\n    T[rt].l=mid_po_build(la,p1-1,lb,lb+p2-1); // \u5de6\u5b50\u6811\uff08\u9501\u5b9a\u5de6\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n    T[rt].r=mid_po_build(p1+1,ra,lb+p2,rb-1); // \u53f3\u5b50\u6811\uff08\u9501\u5b9a\u53f3\u5b50\u6811\u8303\u56f4\u7684\u4e0b\u6807\uff09\n\n    return rt;\n}\n\n// \u6c42\u6811\u9ad8\nint getHeight(int rt)\n{\n\u00a0 \u00a0 if(rt==0) return 0;\n\u00a0 \u00a0 return 1+max(getHeight(T[rt].l),getHeight(T[rt].r));\n}\n\n// \u5c42\u5e8f\u904d\u5386\nvoid bfs(int rt)\n{\n    queue&lt;int&gt; q;\n    vector&lt;int&gt; v;\n    q.push(rt);\n\n    while(!q.empty())\n    {\n        int w=q.front();\n        q.pop();\n        v.push_back(w);\n        if(T[w].l!=0) q.push(T[w].l);\n        if(T[w].r!=0) q.push(T[w].r);\n    }\n\n    int len=v.size();\n    for(int i=0;i&lt;len;i++)\n        printf(\"%d%c\",v[i],i==len-1?'\\n':' '); // \u63a8\u8350\u8fd9\u79cd\u5199\u6cd5\uff0c\u7b80\u6d01\n}\n\n// \u5148\u5e8f\u904d\u5386\nvoid preT(int rt)\n{\n    if(rt==0) return;\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    preT(T[rt].l);\n    preT(T[rt].r);\n}\n\n// \u4e2d\u5e8f\u904d\u5386\nvoid midT(int rt)\n{\n    if(rt==0) return;\n    midT(T[rt].l);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    midT(T[rt].r);\n}\n\n// \u540e\u5e8f\u904d\u5386\nvoid postT(int rt)\n{\n    if(rt==0) return;\n    postT(T[rt].l);\n    postT(T[rt].r);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n}\n\nint main()\n{\n    int n;\n    while(~scanf(\"%d\",&amp;n))\n    {\n        first=1;\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;po[i]); // \u540e\u5e8f\u7ed3\u70b9\n//        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;pr[i]); // \u5148\u5e8f\u7ed3\u70b9\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;mid[i]); // \u4e2d\u5e8f\u7ed3\u70b9\n\n        int rt=mid_po_build(0,n-1,0,n-1); // \u4e2d+\u540e\uff0c\u8fd4\u56de\u6839\u8282\u70b9\n//        int rt=mid_pr_build(0,n-1,0,n-1); // \u4e2d+\u5148\uff0c\u8fd4\u56de\u6839\u8282\u70b9\n\n        bfs(rt); // \u5c42\u5e8f\u904d\u5386\n//        preT(rt); // \u5148\u5e8f\u904d\u5386\n//        puts(\"\");\n//        postT(rt); // \u540e\u5e8f\u904d\u5386\n//        puts(\"\");\n//        midT(rt); // \u4e2d\u5e8f\u904d\u5386\n//        puts(\"\");\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#val-as-index1n","title":"\u7b80\u5316\u7248\uff08Val As Index\uff0c\u82e5\u6570\u636e\u4e0d\u57281~N\u5185\uff0c\u5219\u53ef\u80fd\u8d8a\u754c\uff09","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#include&lt;cmath&gt;\n\n#define mem(a,b) memset(a,b,sizeof a);\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn=50;\nint mid[maxn],po[maxn],pr[maxn];\nint first;\n\nstruct node\n{\n    int l,r;\n}T[maxn];\n\nint mid_pr_build(int la,int ra,int lb,int rb)\n{\n    if(la&gt;ra) return 0;\n    int rt=pr[lb];\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++;\n    p2=p1-la;\n    T[rt].l=mid_pr_build(la,p1-1,lb+1,lb+p2);\n    T[rt].r=mid_pr_build(p1+1,ra,lb+p2+1,rb);\n\n    return rt;\n}\n\nint mid_po_build(int la,int ra,int lb,int rb)\n{\n    if(la&gt;ra) return 0;\n    int rt=po[rb];\n    int p1=la,p2;\n\n    while(mid[p1]!=rt) p1++;\n    p2=p1-la;\n    T[rt].l=mid_po_build(la,p1-1,lb,lb+p2-1);\n    T[rt].r=mid_po_build(p1+1,ra,lb+p2,rb-1);\n\n    return rt;\n}\n\nint getHeight(int rt)\n{\n\u00a0 \u00a0 if(rt==0) return 0;\n\u00a0 \u00a0 return 1+max(getHeight(T[rt].l),getHeight(T[rt].r));\n}\n\nvoid bfs(int rt)\n{\n    queue&lt;int&gt; q;\n    vector&lt;int&gt; v;\n    q.push(rt);\n\n    while(!q.empty())\n    {\n        int w=q.front();\n        q.pop();\n        v.push_back(w);\n        if(T[w].l!=0) q.push(T[w].l);\n        if(T[w].r!=0) q.push(T[w].r);\n    }\n\n    int len=v.size();\n    for(int i=0;i&lt;len;i++)\n        printf(\"%d%c\",v[i],i==len-1?'\\n':' ');\n}\n\nvoid preT(int rt)\n{\n    if(rt==0) return;\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    preT(T[rt].l);\n    preT(T[rt].r);\n}\n\nvoid midT(int rt)\n{\n    if(rt==0) return;\n    midT(T[rt].l);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n    midT(T[rt].r);\n}\n\nvoid postT(int rt)\n{\n    if(rt==0) return;\n    postT(T[rt].l);\n    postT(T[rt].r);\n    printf(first?first=0,\"%d\":\" %d\",rt);\n}\n\nint main()\n{\n    int n;\n    while(~scanf(\"%d\",&amp;n))\n    {\n        first=1;\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;po[i]);\n//        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;pr[i]);\n        for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;mid[i]);\n\n        int rt=mid_po_build(0,n-1,0,n-1);\n//        int rt=mid_pr_build(0,n-1,0,n-1);\n\n        bfs(rt);\n//        preT(rt);\n//        postT(rt);\n//        midT(rt);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%9C%BA%E8%AF%95%E6%8A%80%E5%B7%A7%E4%B8%8ESTL/#val-not-as-index-val","title":"\u7b80\u5316\u7248\uff08Val Not As Index\uff0c\u53ef\u4ee5\u5b58\u4efb\u610f\u7684 Val\uff09","text":"<pre><code>#include&lt;bits/stdc++.h&gt;\n#include&lt;cmath&gt;\n\n#define mem(a,b) memset(a,b,sizeof a)\n#define ssclr(ss) ss.clear(), ss.str(\"\")\n#define INF 0x3f3f3f3f\n#define MOD 1000000007\n\nusing namespace std;\n\ntypedef long long ll;\n\nconst int maxn=5e4+1000;\n\nint f;\nint pre[maxn], in[maxn];\n\nstruct node\n{\n    int l,r,d;\n}T[maxn];\n\nint create(int l1,int r1,int l2,int r2) // in pre\n{\n    if(l2&gt;r2) return -1;\n    int rt=l2;\n    int p1=l1,p2;\n\n    while(in[p1]!=pre[rt]) p1++;\n    p2=p1-l1;\n\n    T[rt].d=pre[rt];\n    T[rt].l=create(l1,p1-1,l2+1,l2+p2);\n    T[rt].r=create(p1+1,r1,l2+p2+1,r2);\n\n    return rt;\n}\n\nvoid postT(int rt)\n{\n    if(rt==-1 || !f) return;\n    postT(T[rt].l);\n    postT(T[rt].r);\n    if(f) f=0, printf(\"%d\\n\",T[rt].d);\n}\n\nint main()\n{\n    int n;\n    scanf(\"%d\",&amp;n);\n    for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;pre[i]);\n    for(int i=0;i&lt;n;i++) scanf(\"%d\",&amp;in[i]);\n    int rt=create(0,n-1,0,n-1);\n    f=1, postT(rt);\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/","title":"\u6e05\u534e\u673a\u8bd5\u771f\u9898","text":"<ul> <li>\u6e05\u534e\u673a\u8bd5\u771f\u9898<ul> <li>2017 interview<ul> <li>\u8f69\u8f69</li> <li>\u65ed\u54e5</li> </ul> </li> <li>2017\u591a\u9879\u5f0f\u6c42\u548c<ul> <li>\u65ed\u54e5</li> <li>\u8f69\u8f69</li> </ul> </li> <li>2018\u8471\u7684\u6218\u4e89<ul> <li>\u8f69\u8f69</li> </ul> </li> <li>2018\u8def\u5f84<ul> <li>\u8f69\u8f69</li> <li>\u65ed\u54e5</li> </ul> </li> <li>2018\u56db\u79cd\u64cd\u4f5c<ul> <li>\u6ce2\u54e5</li> <li>\u65ed\u54e5</li> <li>\u8f69\u8f69</li> </ul> </li> <li>2021\u4e5d\u63a8\u673a\u8bd5<ul> <li>1\u3001\u552e\u8d27\u673a<ul> <li>\u9898\u76ee\u63cf\u8ff0</li> <li>\u8f93\u5165\u683c\u5f0f</li> <li>\u8f93\u51fa\u683c\u5f0f</li> <li>\u6837\u4f8b\u8f93\u5165</li> <li>\u6837\u4f8b\u8f93\u51fa</li> <li>\u6837\u4f8b\u89e3\u91ca</li> <li>\u5b50\u4efb\u52a1</li> </ul> </li> <li>2\u3001\u6c34\u6ef4<ul> <li>\u9898\u76ee\u63cf\u8ff0</li> <li>\u8f93\u5165\u683c\u5f0f</li> <li>\u8f93\u51fa\u683c\u5f0f</li> <li>\u6837\u4f8b\u8f93\u5165</li> <li>\u6837\u4f8b\u8f93\u51fa</li> <li>\u6837\u4f8b\u89e3\u91ca</li> <li>\u5b50\u4efb\u52a1</li> </ul> </li> <li>3\u3001Phi\u7684\u6e38\u620f<ul> <li>\u9898\u76ee\u63cf\u8ff0</li> <li>\u8f93\u5165\u683c\u5f0f</li> <li>\u8f93\u51fa\u683c\u5f0f</li> <li>\u6837\u4f8b1\u8f93\u5165</li> <li>\u6837\u4f8b1\u8f93\u51fa</li> <li>\u6837\u4f8b1\u89e3\u91ca</li> <li>\u6837\u4f8b2\u8f93\u5165</li> <li>\u6837\u4f8b2\u8f93\u51fa</li> <li>\u6837\u4f8b3\u8f93\u5165</li> <li>\u6837\u4f8b3\u8f93\u51fa</li> <li>\u5b50\u4efb\u52a1</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2017-interview","title":"2017 interview","text":"<p>\u751f\u6d3b\u5728\u5728\u5916\u661f\u7403X\u4e0a\u7684\u5c0fZ\u60f3\u8981\u627e\u4e00\u4e9b\u5c0f\u670b\u53cb\u7ec4\u6210\u4e00\u4e2a\u821e\u8e48\u56e2\uff0c\u4e8e\u662f\u4ed6\u5728\u7f51\u4e0a\u53d1\u5e03\u4e86\u4fe1\u606f\uff0c\u4e00\u5171\u6709 \\(n\\) \u4e2a\u4eba\u62a5\u540d\u9762\u8bd5\u3002\u9762\u8bd5\u5fc5\u987b\u6309\u7167\u62a5\u540d\u7684\u987a\u5e8f\u4f9d\u6b21\u8fdb\u884c\u3002\u5c0fZ\u53ef\u4ee5\u9009\u62e9\u5728\u9762\u8bd5\u5b8c\u82e5\u5e72\u5c0f\u670b\u53cb\u4ee5\u540e\uff0c\u5728\u6240\u6709\u5df2\u7ecf\u9762\u8bd5\u8fc7\u7684\u5c0f\u670b\u53cb\u4e2d\u8fdb\u884c\u4efb\u610f\u987a\u5e8f\u7684\u6311\u9009\uff0c\u4ee5\u7ec4\u5408\u6210\u4e00\u4e2a\u821e\u8e48\u56e2\u3002\u867d\u7136\u8bf4\u662f\u5c0f\u670b\u53cb\uff0c\u4f46\u662f\u5916\u661f\u7403X\u4e0a\u7684\u751f\u6001\u73af\u5883\u548c\u5730\u7403\u4e0a\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\u53ef\u80fd\u76f8\u5dee\u5f88\u5927\u3002\u5c0fZ\u5e0c\u671b\u7ec4\u5efa\u7684\u8fd9\u4e2a\u821e\u8e48\u56e2\u8981\u6c42\u81f3\u5c11\u6709 \\(m\\) \u4e2a\u5c0f\u670b\u53cb\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u6700\u9ad8\u8eab\u9ad8\u548c\u6700\u4f4e\u8eab\u9ad8\u4e4b\u5dee\u4e0d\u80fd\u8d85\u8fc7 \\(k\\) \u4e2a\u957f\u5ea6\u5355\u4f4d\u3002\u73b0\u5728\u77e5\u9053\u4e86\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\u4fe1\u606f\uff0c\u95ee\u5c0fZ\u81f3\u5c11\u8981\u9762\u8bd5\u591a\u5c11\u5c0f\u670b\u53cb\u624d\u80fd\u5728\u5df2\u7ecf\u9762\u8bd5\u8fc7\u7684\u5c0f\u670b\u53cb\u4e2d\u9009\u51fa\u4e0d\u5c11\u4e8e \\(m\\) \u4e2a\u7ec4\u6210\u821e\u8e48\u56e2\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_2","title":"\u8f69\u8f69","text":"<p>\u8fc7\u4e8614\u4e2a\u6d4b\u8bd5\u70b9\uff01\uff01\uff01</p> <pre><code># include&lt;algorithm&gt;\n# include&lt;vector&gt;\n# include&lt;iostream&gt;\nusing namespace std;\ntypedef struct{int id;int h;} student;\nbool operator &lt;(const student&amp; a,const student &amp; b){return (a.h)&lt;(b.h);}\n\nint n,m,k,tall=0;\nvector&lt;student&gt; stu;\nvector&lt;int&gt; highid;\nvoid init(){\n    student temp;\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    for(int i=0;i&lt;n;i++){\n        temp.id = i;\n        cin &gt;&gt; temp.h;\n        stu.push_back(temp);\n    }\n}\nvoid pick(){\n    for(int i = 0;i&lt;=n-m;i++){ //\u6392\u5e8f\n        sort(stu.begin(),stu.begin()+m+i);\n        for(int j = 0;j&lt;=i;j++){//\u68c0\u67e5\u4e2a\u5934\n            if(stu[j+m-1].h-stu[j].h&lt;=k){\n                for(int y=j;y&lt;j+m;y++){//\u627e\u6700\u5927id\n                    if(stu[y].id&gt;tall) tall = stu[y].id;\n                }\n                cout&lt;&lt;tall+1&lt;&lt;endl;\n                return;\n            }\n        }\n    }\n    cout&lt;&lt;\"impossible\"&lt;&lt;endl;\n}\nint main(){\n    init();\n    pick();\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_3","title":"\u65ed\u54e5","text":"<p>\u6d4b\u8bd5\u70b9\u672a\u901a\u8fc7</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;map&gt;\n#include&lt;list&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nint n,m,k;\nint h;\nvector&lt;int&gt; max_nums;\nmap&lt;int,vector&lt;int&gt; &gt; mp;\nint main()\n{\n    //input\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    for(int i = 1;i&lt;=n;++i){\n        cin&gt;&gt;h;\n        mp[h].push_back(i);\n    }\n    /*operation:\n    (1)\u7edf\u4e00\u904d\u5386\u4e00\u904d\u9762\u8bd5\u540d\u5355\uff1a\u4ece\u5c0f\u5230\u5927\uff0c\u4ee5\u9047\u5230\u7684\u6bcf\u4e2a\u8eab\u9ad8h\u4e3a\u533a\u95f4\u8d77\u70b9\uff0c\u68c0\u6d4b\u5728[h,h+k)\u8fd9\u4e2acell\u4e2d\uff0c\u662f\u5426\u80fd\u627e\u591fm\uff1a\n        \u662f:\u5219\u8bb0\u5f55\u4e0b\u4ed6\u4eec\u6700\u5927\u7684\u9762\u8bd5\u8005\u7f16\u53f7\uff1b\u653e\u5165\u4e00\u4e2a\u8bb0\u5f55\u6bcf\u4e2a\u5c0f\u533a\u95f4max_num\u7684vector\u4e2d\n        \u5426:\u5219\u8df3\u8fc7\u5f53\u524d\uff0c\u8fdb\u884c\u4e0b\u4e00\u4e2a\u8282\u70b9\u5faa\u73af\u3002\n    (2)\u626b\u63cf\u4e00\u904d\u540e\uff0c\u8f93\u51famax_num\u7684\u5411\u91cf\u4e2d\uff0c\u503c\u6700\u5c0f\u7684\uff0c\u662f\u4ed6\u4eec\u6700\u5c11\u9700\u8981\u9762\u8bd5\u7684\u4eba\u6570\u3002\n    \uff083\uff09\u590d\u6742\u5ea6\uff1a\u5e94\u8be5\u662fO(m*n);\n    */\n    map&lt;int,vector&lt;int&gt; &gt;::iterator it1 = mp.begin();//\u7528\u4e86\u4e24\u4e2a\u6307\u9488\uff0c\u6784\u9020\u6570\u8f74\u4e0a\u7684\u4e00\u4e2a\u5c0f\u533a\u95f4\n    map&lt;int,vector&lt;int&gt; &gt;::iterator it2 = it1;\n    for(;it1!=mp.end();++it1){\n        int counts = 0;\n        int max_num = -1;\n        bool enough_flag = false;\n        int min_high = it1-&gt;first;//\u8bb0\u5f55\u68c0\u6d4b\u5c0fcell\u4e2d\u7684\u6700\u5c0f\u8eab\u9ad8\uff08\u5373\u57fa\u51c6\u8eab\u9ad8\uff09\uff0c\u4e0e\u5176\u4ed6\u8eab\u9ad8\u4e4b\u5dee\uff0c\u5e94\u4e0d\u5927\u4e8ek\n        for(it2 = it1;it2!=mp.end();++it2){\n            if(it2-&gt;first - min_high &lt;= k &amp;&amp; counts &lt;= m){\n                counts += it2-&gt;second.size();\n                if(it2-&gt;second[it2-&gt;second.size()-1] &gt; max_num ){\n                    max_num = it2-&gt;second[it2-&gt;second.size()-1];\n                }\n            }else if(counts == m) {\n                enough_flag = true;\n                break;\n            }else  break;\n        }\n        if(max_num !=-1 &amp;&amp; enough_flag ==true ) max_nums.push_back(max_num);\n     }\n     //\u641c\u7d22\u7ed3\u675f\uff0c\u627e\u5230\u6240\u6709\u5c0f\u533a\u95f4\u4e0a\u7684\u6700\u5c0f\u7684\u7f16\u53f7\n     int i= max_nums.size();\n     vector&lt;int&gt;::iterator it3 = max_nums.begin();\n     sort(it3,it3+i);\n     if(!max_nums.empty()){\n        cout&lt;&lt;max_nums.front()&lt;&lt;endl;\n     }else\n        cout&lt;&lt;\"impossible\"&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2017","title":"2017\u591a\u9879\u5f0f\u6c42\u548c","text":"<p>\u5c0fK\u6700\u8fd1\u521a\u521a\u4e60\u5f97\u4e86\u4e00\u79cd\u975e\u5e38\u9177\u70ab\u7684\u591a\u9879\u5f0f\u6c42\u548c\u6280\u5de7\uff0c\u53ef\u4ee5\u5bf9\u67d0\u51e0\u7c7b\u7279\u6b8a\u7684\u591a\u9879\u5f0f\u8fdb\u884c\u8fd0\u7b97\u3002\u975e\u5e38\u4e0d\u5e78\u7684\u662f\uff0c\u5c0fK\u53d1\u73b0\u8001\u5e08\u5728\u5e03\u7f6e\u4f5c\u4e1a\u65f6\u6284\u9519\u4e86\u6570\u636e\uff0c\u5bfc\u81f4\u4e00\u9053\u9898\u5e76\u4e0d\u80fd\u7528\u521a\u5b66\u7684\u65b9\u6cd5\u6765\u89e3\uff0c\u4e8e\u662f\u5e0c\u671b\u4f60\u80fd\u5e2e\u5fd9\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8dd1\u4e00\u8dd1\u3002\u7ed9\u51fa\u4e00\u4e2a \\(m\\) \u9636\u591a\u9879\u5f0f\\(\\(f(x)=\\sum_{i=0}^mb_ix^i\\)\\)\u5bf9\u7ed9\u5b9a\u7684\u6b63\u6574\u6570 \\(a\\) \uff0c\u6c42\\(\\(S(n)=\\sum_{k=0}^na^kf(k)\\)\\)\u7531\u4e8e\u8fd9\u4e2a\u6570\u53ef\u80fd\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u4f60\u53ea\u9700\u8ba1\u7b97 \\(S(n)\\) \u5bf9 \\(10^9+7\\) \u53d6\u6a21\u540e\u7684\u503c\uff08\u5373\u8ba1\u7b97\u9664\u4ee5 \\(10^9+7\\) \u540e\u7684\u4f59\u6570\uff09\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_4","title":"\u65ed\u54e5","text":"<p>\u53ea\u80fd\u8fc7\u4e24\u4e2a\u6d4b\u8bd5\u70b9\uff01\uff01\uff01</p> <pre><code>#include&lt;algorithm&gt;\n#include&lt;cmath&gt;\n#include&lt;stdio.h&gt;\ntypedef long long ll;\nusing namespace std;\n\nll n,m,a;\nint mod = 1e9+7;\n\n\n//\u8ba1\u7b97(a*b)%c\nll mul(ll a,ll b,ll mod) {\n    ll res = 0;\n    while(b &gt; 0){\n        if( (b&amp;1) != 0)  // \u4e8c\u8fdb\u5236\u6700\u4f4e\u4f4d\u662f1 --&gt; \u52a0\u4e0a a\u7684 2^i \u500d, \u5feb\u901f\u5e42\u662f\u4e58\u4e0aa\u76842^i \uff09\n            res  = ( res + a) % mod;\n        a = (a &lt;&lt; 1) % mod;    // a = a * 2    a\u968f\u7740b\u4e2d\u4e8c\u8fdb\u5236\u4f4d\u6570\u800c\u6269\u5927 \u6bcf\u6b21 \u6269\u5927\u4e24\u500d\u3002\n        b &gt;&gt;= 1;               // b -&gt; b/2     \u53f3\u79fb  \u53bb\u6389\u6700\u540e\u4e00\u4f4d \u56e0\u4e3a\u5f53\u524d\u6700\u540e\u4e00\u4f4d\u6211\u4eec\u7528\u5b8c\u4e86\uff0c\n    }\n    return res;\n}\n\n//\u5e42\u53d6\u6a21\u51fd\u6570\nll pow1(ll a,ll n,ll mod){\n    ll res = 1;\n    while(n &gt; 0){\n        if(n&amp;1)\n            res = (res * a)%mod;\n        a = (a * a)%mod;\n        n &gt;&gt;= 1;\n    }\n    return res;\n}\n\n\n// \u8ba1\u7b97 ret = (a^n)%mod\nll pow2(ll a,ll n,ll mod) {\n    ll res = 1;\n    while(n &gt; 0) {\n        if(n &amp; 1)\n            res = mul(res,a,mod);\n        a = mul(a,a,mod);\n        n &gt;&gt;= 1;\n    }\n    return res;\n}\n\n//\u9012\u5f52\u5206\u6cbb\u6cd5\u6c42\u89e3\nll pow3(ll a,ll n,ll Mod){\n    if(n == 0)\n        return 1;\n    ll halfRes = pow1(a,n/2,Mod);\n    ll res = (ll)halfRes * halfRes % Mod;\n    if(n&amp;1)\n        res = res * a % Mod;\n    return res;\n}\n\nll fun(ll b[],ll x)\n{\n    ll fx = 0;\n    for(ll i = 0;i &lt;= m;++i){\n        fx +=  mul(b[i],pow3(x,i,mod),mod);\n    }\n    return fx;\n}\n\nll Sum(ll a,ll n,ll b[])\n{\n    ll sum=0;\n    for(ll i = 0;i &lt;= n;++i){\n        sum += mul(pow3(a,i,mod),fun(b,i),mod);\n    }\n    return sum%mod;\n}\n\nint main()\n{\n    //input:\n    ll temp;\n    //cin&gt;&gt;n&gt;&gt;m&gt;&gt;a;\n    scanf(\"%lld %lld %lld\",&amp;n,&amp;m,&amp;a);\n    ll b[m+1];\n    for(ll i = 0;i &lt;= m;++i){\n        scanf(\"%lld\",&amp;b[i]);\n    }\n    printf(\"%lld\",Sum(a,n,b));\n    //cout&lt;&lt;Sum(a,n,b)&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_5","title":"\u8f69\u8f69","text":"<p>\u53ea\u80fd\u8fc7\u4e24\u4e2a\u6d4b\u8bd5\u70b9\uff01\uff01\uff01</p> <pre><code># include &lt;stdio.h&gt;\n# include &lt;iostream&gt;\n# define  MAX 1000000007\n# define ll long long\n\nusing namespace std;\n\nll n,m,a,*b;\n\n\nlong long mul(long long a,long long b,long long mod) {\n    long long res = 0;\n    while(b &gt; 0){\n        if( (b&amp;1) != 0)  // \u4e8c\u8fdb\u5236\u6700\u4f4e\u4f4d\u662f1 --&gt; \u52a0\u4e0a a\u7684 2^i \u500d, \u5feb\u901f\u5e42\u662f\u4e58\u4e0aa\u76842^i \uff09\n            res  = ( res + a) % mod;\n        a = (a &lt;&lt; 1) % mod;    // a = a * 2    a\u968f\u7740b\u4e2d\u4e8c\u8fdb\u5236\u4f4d\u6570\u800c\u6269\u5927 \u6bcf\u6b21 \u6269\u5927\u4e24\u500d\u3002\n        b &gt;&gt;= 1;               // b -&gt; b/2     \u53f3\u79fb  \u53bb\u6389\u6700\u540e\u4e00\u4f4d \u56e0\u4e3a\u5f53\u524d\u6700\u540e\u4e00\u4f4d\u6211\u4eec\u7528\u5b8c\u4e86\uff0c\n    }\n    return res;\n}\n\n\n\nlong long pow(long long a,long long n,long long mod) {\n    long long res = 1;\n    while(n &gt; 0) {\n        if(n &amp; 1)\n            res = mul(res,a,mod);\n        a = mul(a,a,mod);\n        n &gt;&gt;= 1;\n    }\n    return res;\n}\n\n\nvoid init(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;a;\n    b = new ll[m+1];\n    for(ll i=0;i&lt;=m;i++){\n    cin&gt;&gt;b[i];\n    }\n}\n\n\nll f(ll x){\n    ll result=0;\n    for(ll i=0;i&lt;=m;i++){\n        result+=mul(b[i],pow(x,i,MAX),MAX);\n        result%=MAX;\n    }\n    return result;\n}\n\nll s(){\n    ll result=0;\n    for(ll i = 0;i&lt;=n;i++){\n        result+=mul(pow(a,i,MAX),f(i),MAX);\n        result%=MAX;\n    }\n    return result;\n}\n\nint main(){\n    init();\n    cout&lt;&lt;s()&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2018","title":"2018\u8471\u7684\u6218\u4e89","text":"<p>\u4e00\u4e2an\u4e58m\u7684\u68cb\u76d8\uff0c\u4e0a\u9762\u6709k\u6839\u8471\uff0c\u6bcf\u6839\u8471\u9762\u671d\u65b9\u5411\u4e3ad\uff080123\u5206\u522b\u8868\u793a\u4e0a\u4e0b\u5de6\u53f3\uff09\uff0c\u6ca1\u8ddf\u8471\u4e00\u4e2a\u6218\u6597\u529bf\u3002\u6bcf\u9694\u65f6\u95f4\u8471\u4f1a\u5411\u9762\u671d\u65b9\u5411\u8d70\u4e00\u683c\uff0c\u5982\u679c\u9047\u5230\u68cb\u76d8\u8fb9\u754c\uff0c\u90a3\u4e48\u4ed6\u5c06\u628a\u9762\u671d\u65b9\u5411\u8f6c180\u5ea6\uff08\u6b64\u56de\u5408\u8471\u4e0d\u4f1a\u8d70\u52a8\uff09\uff0c\u5982\u679c\u67d0\u4e2a\u65f6\u523b\u6709\u4e24\u4e2a\u6216\u4ee5\u4e0a\u7684\u8471\u5728\u540c\u4e00\u4f4d\u7f6e\uff0c\u90a3\u4e48\u4ed6\u4eec\u5c06\u53d1\u751f\u6218\u4e89\uff0c\u53ea\u6709\u6218\u6597\u529b\u6700\u9ad8\u7684\u8471\u5b58\u6d3b\uff0c\u5176\u4ed6\u7684\u8471\u5168\u90e8\u539f\u5730\u67af\u840e\uff0c\u4e0d\u5728\u8d70\u52a8\uff0c\u6c42\u7ecf\u8fc7t\u65f6\u95f4\u540e\u6240\u6709\u8471\u7684\u4f4d\u7f6e</p> <p>\u8f93\u5165\uff1a\u7b2c\u4e00\u884cn m k\uff0c\u7136\u540e\u63a5\u4e0b\u6765k\u884c\u6bcf\u6839\u8471\u7684\u4fe1\u606fx y d f\uff08\u5750\u6807\uff0c\u65b9\u5411\uff0c\u6218\u6597\u529b\uff09\uff0c\u6700\u540e\u4e00\u884c\u8f93\u5165\u65f6\u95f4t \u8f93\u51fa\uff1ak\u884c\uff0c\u5206\u522b\u8868\u793a\u6bcf\u4e2a\u8471\u7684\u4f4d\u7f6e\u3002 \u6570\u636e\u8303\u56f4\uff1an\u548cm\u5728100\u5185\uff0ck\u57281000\u5185\uff0ct\u57281000\u5185\uff0cf\u57281000\u5185\uff0c\u4fdd\u8bc1\u521d\u59cb\u6bcf\u9897\u8471\u4f4d\u7f6e\u4e0d\u540c\uff0c\u6218\u6597\u529b\u4e0d\u540c\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_6","title":"\u8f69\u8f69","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\u6d4b\u8bd5\u70b9\u901a\u8fc7</p> <pre><code># include&lt;iostream&gt;\n# include&lt;map&gt;\n# include&lt;vector&gt;\nusing namespace std;\ntypedef struct{int x,y;} position;\ntypedef struct{int id,f;} idfight;\ntypedef struct{int id;position p;int d;int f;bool live;} cong;\ntypedef vector&lt;cong&gt; conglist;\nconglist all_cong;\nmap&lt;int,vector&lt;idfight&gt; &gt;war_map;\nint n,m,k,times;\nvoid init(){\n    cin&gt;&gt;n&gt;&gt;m&gt;&gt;k;\n    for(int i=0;i&lt;n;i++){\n        int x,y,d,f;\n        cin &gt;&gt; x &gt;&gt;y&gt;&gt;d&gt;&gt;f;\n        cong c1 ={i,{x,y},d,f,1};\n        all_cong.push_back(c1);\n    }\n    cin &gt;&gt; times;\n}\nvoid action(cong &amp;c){\n    if(c.live){\n    switch(c.d){\n    case 0: if(c.p.y==m) c.d=1;else c.p.y++;break;\n    case 1: if(c.p.y==1) c.d=0;else c.p.y--;break;\n    case 2: if(c.p.x==1) c.d=3;else c.p.x--;break;\n    case 3: if(c.p.y==n) c.d=2;else c.p.x++;break;\n    default:;break;\n    }\n    int pi = c.p.x*1000+c.p.y;\n    idfight idf = {c.id,c.f};\n    war_map[pi].push_back(idf);\n    }\n}\nvoid printans(){\n        for(vector&lt;cong&gt;::iterator i = all_cong.begin();i!=all_cong.end();i++)  \n        cout&lt;&lt;(*i).p.y&lt;&lt;\" \"&lt;&lt;(*i).p.x&lt;&lt;endl;\n}\nvoid fight(){\n    map&lt;int,vector&lt;idfight&gt; &gt;::iterator it;\n    it = war_map.begin();\n    while(it!=war_map.end()){\n        if((*it).second.size()&gt;1){\n            int max = 0;\n            for(vector&lt;idfight&gt;::iterator i = (*it).second.begin();i!=(*it).second.end();i++){      \n                if((*i).f&gt;max)max = (*i).f;\n            }\n            for(vector&lt;idfight&gt;::iterator i = (*it).second.begin();i!=(*it).second.end();i++){      \n                if((*i).f&lt;max) all_cong[(*i).id].live=0;\n            }\n        }\n    it++;\n    }\n}\nint main() {\n    init();\n    while(times--){\n    for(vector&lt;cong&gt;::iterator i = all_cong.begin();i!=all_cong.end();i++){     \n        action(*i);\n    }\n    fight();\n    war_map.clear();\n    }\n    printans();\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2018_1","title":"2018\u8def\u5f84","text":"<p>\u6709n\u4e2a\u70b9\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u6bcf\u4e24\u70b9\u95f4\u7684\u4e0d\u540c\u8fb9\u7684\u4e2a\u6570\u4e3a\u4ed6\u4eec\u6743\u503c\u76f8\u4e0e\u5f97\u5230\u7684\u503c\u7684\u4e8c\u8fdb\u5236\u6570\u5b57\u4e2d\u76841\u7684\u4e2a\u6570\uff08\u8fb9\u4e3a\u6709\u5411\u8fb9\uff0c\u6709\u7b2ci\u6307\u5411\u7b2cj\uff0ci\u5c0f\u4e8ej\uff09\u6c42\u7b2c1\u4e2a\u70b9\u5230\u7b2cn\u4e2a\u70b9\u7684\u8def\u5f84\u4e2a\u6570\uff08\u5f53\u4e14\u4ec5\u5f53\u4e0d\u6b62\u4e00\u6761\u8fb9\u4e0d\u540c\u624d\u88ab\u79f0\u4e3a\u4e24\u6761\u4e0d\u540c\u7684\u8def\u5f84\uff09\uff0c\u7531\u4e8e\u6570\u636e\u5f88\u5927\uff0c\u5bf9991247\u53d6\u6a21\u3002</p> <p>\u8f93\u5165\uff1a\u7b2c1\u884cn\uff0c\u7b2c\u4e8c\u884c\u5206\u522b\u8bd5\u6bcf\u4e2a\u70b9\u6743\u503c \u8f93\u51fa\uff1a\u8def\u5f84\u4e2a\u6570 \u6570\u636e\u8303\u56f4:n\u57282e5\u5185\uff0c\u6743\u503c\u5927\u5c0f\u57281e9\u5185</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_7","title":"\u8f69\u8f69","text":"<pre><code># include&lt;iostream&gt;\n# include&lt;bitset&gt;\n# include&lt;vector&gt;\n# define MAX_BIT 32\nusing namespace std;\nvector&lt;int&gt; power; \nint n;\nvoid init(){\n    cin&gt;&gt;n;\n    for(int i=0;i&lt;n;i++){\n        int temp;\n        cin&gt;&gt;temp;\n        power.push_back(temp);\n    }\n}\nint countones(int a,int b){\n    int c = a&amp;b;\n    bitset&lt;MAX_BIT&gt; bt(c);\n    return bt.count();\n}\nint calc(int n){\n    return n==1?\n    countones(power[0],power[1]):\n    countones(power[0],power[n])+\n    calc(n-1)*countones(power[n],power[n-1])%991127;\n}\nint main(){\n    init();\n    cout&lt;&lt;calc(n-1)%991127&lt;&lt;endl;\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_8","title":"\u65ed\u54e5","text":"<p>\u4ee5\u4e0b\u4ee3\u7801\u6d4b\u8bd5\u70b9\u901a\u8fc7</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\nstruct Node\n{\n    int n;\n    int w;\n}node[200003];\nint countOnes(int a,int b)\n{\n    //count the number in the ans(&amp;)\n    int c = a&amp;b;\n    int ones = 0;\n    while(c != 0){\n        if(c%2 == 1)\n            ones++;\n        c = c&gt;&gt;1;\n    }\n    return ones;\n}\n\nint Routes(int n)\n{\n    if(n == 1 || n==0 )\n        return 0;\n    else if(n &gt; 1)\n        return countOnes(1,n) + Routes(n-1)*countOnes(n-1,n);\n}\nint main()\n{\n    int n,f,routes = 0;\n    cin&gt;&gt;n;\n    for(int i = 1;i &lt;= n;++i){\n        cin&gt;&gt;f;\n        node[i].n = i;\n        node[i].w= f;\n    }\n    routes = Routes(5);\n    cout&lt;&lt;routes&lt;&lt;endl;\n    return 0;\n\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2018_2","title":"2018\u56db\u79cd\u64cd\u4f5c","text":"<p>\u6709\u4e00\u4e2an\u4e2a\u5143\u7d20\u7684\u6570\u5217,\u5143\u7d20\u7684\u503c\u53ea\u80fd\u662f0 1 2\u4e09\u4e2a\u6570\u4e2d\u7684\u4e00\u4e2a\uff0c\u5b9a\u4e49\u56db\u79cd\u64cd\u4f5c\uff0c(1 i x)\u8868\u793a\u4e3a\u628a\u7b2ci\u4f4d\u66ff\u6362\u6210x\uff0cx\u4e5f\u53ea\u80fd\u662f0 1 2\u4e09\u4e2a\u6570\u4e2d\u7684\u4e00\u4e2a\uff0c(2 i j)\u8868\u793a\u628a\u7b2ci\u4e2a\u6570\u5230\u7b2cj\u4e2a\u6570\u6240\u6709\u7684\u5143\u7d20\u503c\u52a01\uff0c\u5e76\u5bf93\u53d6\u6a21\uff0c(3 i j)\u8868\u793a\u628a\u7b2ci\u4e2a\u6570\u5230\u7b2cj\u4e2a\u6570\u4e4b\u95f4\u7684\u5e8f\u5217\u7684\u98a0\u5012\u987a\u5e8f\uff0c(4 i j)\u8868\u793a\u67e5\u8be2\u7b2ci\u4e2a\u6570\u5230\u7b2cj\u4e2a\u6570\u4e4b\u95f4\u7684\u5e8f\u5217\u662f\u5426\u5b58\u5728\u4e09\u4e2a\u6216\u4ee5\u4e0a\u76f8\u540c\u6570\uff0c\u5982\u679c\u6709\uff0c\u8f93\u51fayes\uff0c\u5426\u5219\u8f93\u51fano</p> <p>\u8f93\u5165\uff1a\u7b2c\u4e00\u884c\u8f93\u5165n\uff0c\u63a5\u4e0b\u6765\u4e00\u884c\u8f93\u5165n\u4e2a\u6570\uff0c\u4fdd\u8bc1\u662f0 1 2\u4e2d\u7684\u4e00\u4e2a\uff0c\u7b2c\u4e09\u884c\u8f93\u5165\u4e00\u4e2a\u6570q\uff0c\u8868\u793a\u64cd\u4f5c\u4e2a\u6570\uff0c\u63a5\u4e0b\u6765q\u884c\u8f93\u5165q\u79cd\u64cd\u4f5c \u8f93\u51fa\uff1a\u6bcf\u6b21\u7b2c\u56db\u6b21\u64cd\u4f5c\u65f6\uff0c\u8f93\u51fayes\u6216\u8005no \u6570\u636e\u8303\u56f4\uff1a\u4e0d\u8bb0\u5f97\u4e86</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_9","title":"\u6ce2\u54e5","text":"<pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\nint a[100000];\nvoid replace(int a[],int i,int x ){\n     a[i-1]=x;\n}\n\nvoid addx_y(int a[],int x,int y){\n    for(int i=x-1;i&lt;y;i++){\n       a[i]=(a[i]+1)%3;\n    }\n}\nvoid ser_com3(int a[],int x,int y){\n    int zeros=0;\n    int ones=0;\n    int twos=0;\n    bool flag=0;\n    for(int k=x-1;k&lt;y;k++){\n       if(a[k]==0)zeros++;\n       if(a[k]==1)ones++;\n       if(a[k]==2)twos++;\n       if(zeros&gt;=3||ones&gt;=3||twos&gt;=3){\n           flag=1;\n           cout&lt;&lt;\"yes\"&lt;&lt;endl;\n           break;\n       }\n    }\n    if(!flag)cout&lt;&lt;\"no\"&lt;&lt;endl;\n}\n\nint main(){\n    int n;\n    int op,x,y;\n    while(scanf(\"%d\",&amp;n)!=EOF){\n        for(int i=0;i&lt;n;i++)scanf(\"%d\",&amp;a[i]);\n        int q;\n        cin&gt;&gt;q;\n        while(q--){\n            cin&gt;&gt;op&gt;&gt;x&gt;&gt;y;\n            switch(op){\n                case 1: replace(a,x,y);\n                case 2: addx_y(a,x,y);\n                case 3: reverse(a+x-1,a+y);\n                case 4: ser_com3(a,x,y);\n                default:break;\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_10","title":"\u65ed\u54e5","text":"<pre><code>#include&lt;iostream&gt;\nusing namespace std;\n\nint a[10000001];\nvoid rep(int a[],int i,int e)\n{\n    a[i] = e;\n}\n\nvoid addall(int a[],int i,int j)\n{\n    for(int k = i;k &lt;= j;++k){\n        a[k] = (a[k]+1)%3;\n    }\n}\n\nvoid rev(int a[],int i,int j)\n{\n    int temp;\n    if((j-i)%2 == 0){\n        for(int k = i,m = j;k != m ;++k,--m){\n            temp = a[k];\n            a[k] = a[m];\n            a[m] = temp;\n        }\n    }else{\n        for(int k = i,m = j;k != m-1 ;++k,--m){\n            temp = a[k];\n            a[k] = a[m];\n            a[m] = temp;\n        }\n    }\n}\n\nvoid quire(int a[],int i,int j)\n{\n    int zeros,ones,twos;\n    for(int k = i;k&lt;j;++k){\n        if(a[k] == 0)\n            zeros++;\n        else if(a[k] == 1)\n            ones++;\n        else if(a[k] == 2)\n            twos++;\n        if(zeros &gt;= 3||ones &gt;= 3 || twos &gt;= 3){\n            cout&lt;&lt;\"yes\"&lt;&lt;endl;\n            break;\n        }\n    }\n    cout&lt;&lt;\"no\"&lt;&lt;endl;\n}\n\nint main()\n{\n    int n,q,x,op,s,e;\n\n    //input\n    for(int i = 0;i&lt;n;++i){\n        cin&gt;&gt;x;\n        a[i] = x;\n    }\n    cin&gt;&gt;q;\n    for(int i = 0;i &lt; q ;++i){\n        cin&gt;&gt;op&gt;&gt;s&gt;&gt;e;\n        if(s == 1)\n            rep(a,s,e);\n        else if(s == 2)\n            addall(a,s,e);\n        else if(s == 3 )\n            rev(a,s,e);\n        else if(s == 4 )\n            quire(a,s,e);\n    }\n\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_11","title":"\u8f69\u8f69","text":"<pre><code># include&lt;iostream&gt;\n# include&lt;vector&gt;\n# include&lt;algorithm&gt;\nusing namespace std;\n\ntypedef struct {int x,y,z;} comm;\nvector&lt;int&gt; numlist;\nvector&lt;comm&gt; commlist;\nint n,q;\n\nvoid init(){\n    int temp;\n    cin&gt;&gt;n;\n    while(n--){\n        cin&gt;&gt;temp;\n        numlist.push_back(temp);\n    }\n    cin&gt;&gt;q;\n    int x,y,z;\n    while(q--){\n        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;\n        comm command = {x,y,z};\n        commlist.push_back(command);\n    }\n}\nvoid printdata(){\n    vector&lt;int&gt;::iterator it;\n    it = numlist.begin();\n    while(it!=numlist.end()){\n    cout&lt;&lt;(*it)&lt;&lt;\" \";\n    it++;\n    }\n    cout&lt;&lt;endl;\n}\nvoid action_1(int i,int x){\n    numlist[i-1]=x;\n}\n\nvoid action_2(int i ,int j){\n    i--;j--;\n    for(;i&lt;=j;i++){\n        numlist[i]=(numlist[i]+1)%3;\n    }\n\n}\nvoid action_3(int i ,int j){\n    i--;\n    reverse(numlist.begin()+i,numlist.begin()+j);\n\n}\nvoid action_4(int i , int j){\n    i--;\n    int a,b,c;\n    a =  count(numlist.begin()+i,numlist.begin()+j,0);\n    b =  count(numlist.begin()+i,numlist.begin()+j,1);\n    c =  count(numlist.begin()+i,numlist.begin()+j,2);\n    if((a&gt;2)||(b&gt;2)||(c&gt;2))cout&lt;&lt;\"yes\"&lt;&lt;endl;\n    else cout&lt;&lt;\"no\"&lt;&lt;endl;\n}\nint main(){\n    init();\n    vector&lt;comm&gt;::iterator i;\n    i = commlist.begin();\n    while(i!=commlist.end()){\n        switch((*i).x){\n        case 1:action_1((*i).y,(*i).z);break;\n        case 2:action_2((*i).y,(*i).z);break;\n        case 3:action_3((*i).y,(*i).z);break;\n        case 4:action_4((*i).y,(*i).z);break;\n        default:;\n        }\n    i++;\n    }\n    printdata();\n    return 0;\n}\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2021","title":"2021\u4e5d\u63a8\u673a\u8bd5","text":""},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#1","title":"1\u3001\u552e\u8d27\u673a","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1.0 \u79d2</p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MiB</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_12","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u6e05\u534e\u5927\u5b66\u7684\u81ea\u52a8\u552e\u8d27\u673a\u4e00\u5171\u6709 \ud835\udc5b \u79cd\u996e\u6599\u51fa\u552e\uff0c\u6bcf\u79cd\u996e\u6599\u6709\u81ea\u5df1\u7684\u552e\u4ef7\uff0c\u5e76\u5728\u552e\u8d27\u673a\u4e0a\u5404\u6709\u4e00\u4e2a\u51fa\u552e\u53e3\u3002\u8d2d\u4e70\u7b2c \ud835\udc56 \u79cd\u996e\u6599\u65f6\uff0c\u53ef\u4ee5\u5728\u7b2c \ud835\udc56 \u4e2a\u51fa\u552e\u53e3\u652f\u4ed8 \ud835\udc4e\ud835\udc56 \u7684\u4ef7\u683c\uff0c\u552e\u8d27\u673a\u4fbf\u4f1a\u5728\u4e0b\u65b9\u7684\u51fa\u8d27\u5904\u653e\u51fa\u5bf9\u5e94\u7684\u996e\u6599\u3002</p> <p>\u53c8\u5230\u4e86\u6e05\u51c9\u7684\u590f\u65e5\uff0c\u81ea\u52a8\u552e\u8d27\u673a\u4e3a\u6bcf\u79cd\u996e\u6599\u5404\u8fdb\u8d27\u4e861 \u74f6\u5b58\u50a8\u5728\u5176\u4e2d\uff0c\u4f9b\u540c\u5b66\u8d2d\u4e70\u3002\u4f46\u662f\uff0c\u81ea\u52a8\u552e\u8d27\u673a\u5374\u51fa\u73b0\u4e86\u4e00\u4e9b\u6545\u969c\uff0c\u5b83\u6709\u53ef\u80fd\u4f1a\u51fa\u8d27\u4e0d\u5c5e\u4e8e\u8fd9\u4e2a\u51fa\u552e\u53e3\u7684\u996e\u6599\u3002</p> <p>\u5bf9\u4e8e\u7b2c \ud835\udc56 \u4e2a\u51fa\u552e\u53e3\uff0c\u652f\u4ed8 \ud835\udc4e\ud835\udc56 \u7684\u4ef7\u683c\u8d2d\u4e70\u540e\uff0c\u5982\u679c\u996e\u6599 \ud835\udc56 \u4e0e\u996e\u6599 \ud835\udc4f\ud835\udc56 \u90fd\u6709\u5b58\u8d27\uff0c\u6709 \ud835\udc5d\ud835\udc56 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 \ud835\udc56 \uff0c\u6709 1\u2212\ud835\udc5d\ud835\udc56 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 \ud835\udc4f\ud835\udc56 \u3002\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u6709\u5b58\u8d27\uff0c\u53e6\u4e00\u4e2a\u5df2\u7ecf\u6ca1\u6709\u5b58\u8d27\uff0c\u5219\u5c06\u51fa\u8d27\u6709\u5b58\u8d27\u7684\u90a3\u4e00\u79cd\u996e\u6599\u3002\u5982\u679c\u4e24\u79cd\u996e\u6599\u90fd\u6ca1\u6709\u5b58\u8d27\uff0c\u552e\u8d27\u673a\u5c06\u4e0d\u4f1a\u51fa\u8d27\u4efb\u4f55\u996e\u6599\u5e76\u53d1\u51fa\u8b66\u62a5\u3002**\u5373\u4fbf\u6700\u540e\u4f60\u6ca1\u6709\u83b7\u5f97\u4efb\u4f55\u996e\u6599\uff0c\u4e5f\u9700\u8981\u652f\u4ed8 \ud835\udc4e\ud835\udc56 \u7684\u4ef7\u683c ** \u3002</p> <p>\u957f\u9888\u9e7f\u4e0b\u697c\u6765\u5230\u8fd9\u53f0\u552e\u8d27\u673a\u524d\uff0c\u5e0c\u671b\u80fd\u4e70\u5230\u6700\u8fd1\u706b\u7206\u5168\u7f51\u7684\u996e\u6599 \ud835\udc65 \uff0c\u6b64\u65f6\u552e\u8d27\u673a\u4e2d \ud835\udc5b \u79cd\u996e\u6599\u90fd\u5b58\u8d27\u6709 1 \u74f6\u3002\u7531\u4e8e\u4ed6\u77e5\u9053\u552e\u8d27\u673a\u6709\u95ee\u9898\uff0c\u56e0\u6b64\u51b3\u5b9a\u91c7\u53d6\u8fd9\u6837\u7684\u7b56\u7565\u6765\u8d2d\u4e70\uff1a</p> <ul> <li>\u5728 \ud835\udc5b \u4e2a\u51fa\u552e\u53e3\u4e2d\u7b49\u6982\u7387\u9009\u62e9\u4e00\u4e2a\u51fa\u552e\u53e3 \ud835\udc60 \u5f00\u59cb\u8d2d\u4e70\uff0c\u652f\u4ed8\u8fd9\u4e2a\u51fa\u552e\u53e3\u7684\u4ef7\u683c \ud835\udc4e\ud835\udc60 \u5e76\u5f97\u5230\u51fa\u8d27\u3002</li> <li>\u5f53\u5f97\u5230\u60f3\u8981\u7684\u996e\u6599 \ud835\udc65 \u65f6\uff0c\u505c\u6b62\u8d2d\u4e70\u6d41\u7a0b\uff0c\u6ee1\u610f\u6b22\u559c\u7684\u79bb\u53bb\u3002</li> <li>\u5f53\u5f97\u5230\u4e0d\u60f3\u8981\u7684\u996e\u6599 \ud835\udc66 \u65f6\uff0c\u7ee7\u7eed\u5728\u7b2c \ud835\udc66 \u4e2a\u652f\u4ed8\u53e3\u8d2d\u4e70\uff0c\u652f\u4ed8 \ud835\udc4e\ud835\udc66 \u7684\u4ef7\u683c\u5e76\u7b49\u5f85\u51fa\u8d27\u3002</li> <li>\u5f53\u552e\u8d27\u673a\u53d1\u51fa\u8b66\u62a5\u65f6\uff0c\u505c\u6b62\u8d2d\u4e70\u6d41\u7a0b\uff0c\u7070\u5fc3\u4e27\u6c14\u7684\u79bb\u53bb\u3002</li> </ul> <p>\u73b0\u5728\u4ed6\u5e0c\u671b\u4f60\u544a\u8bc9\u4ed6\uff0c\u4ed6\u8fd9\u4e00\u6b21\u8d2d\u4e70\u8fc7\u7a0b\u671f\u671b\u652f\u4ed8\u7684\u4ef7\u94b1\u6570\u91cf\u662f\u591a\u5c11\uff1f</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_13","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \ud835\udc5b,\ud835\udc65\u3002</p> <p>\u63a5\u4e0b\u6765 \ud835\udc5b \u884c\u6bcf\u884c\u4e09\u4e2a\u6570\uff0c\u5176\u4e2d\u7b2c \ud835\udc56 \u884c\u8868\u793a \ud835\udc4e\ud835\udc56,\ud835\udc4f\ud835\udc56,\ud835\udc5d\ud835\udc56\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_14","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u4e00\u884c\u4e00\u4e2a\u5b9e\u6570\u8868\u793a\u7b54\u6848\uff0c\u8868\u793a\u957f\u9888\u9e7f\u6309\u4ed6\u7684\u7b56\u7565\u4e70\u6c34\u671f\u671b\u652f\u4ed8\u7684\u4ef7\u94b1\u3002</p> <p>\u8bb0\u7b54\u6848\u4e3a \ud835\udc4e\uff0c\u800c\u4f60\u7684\u8f93\u51fa\u4e3a \ud835\udc4f\uff0c\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53 |\ud835\udc4e\u2212\ud835\udc4f|&lt;10\u22126 \u65f6\u6211\u4eec\u8ba4\u4e3a\u4f60\u7684\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_15","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>2 2\n8 2 0.90\n7 1 0.40\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_16","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>13.500000000\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_17","title":"\u6837\u4f8b\u89e3\u91ca","text":"<p>\u552e\u8d27\u673a\u91cc\u996e\u6599 1 \u4e0e\u996e\u6599 2 \u5404\u6709\u4e00\u74f6\uff0c\u4e14\u5f53\u4e24\u74f6\u90fd\u8fd8\u6709\u5b58\u8d27\u65f6\uff0c\u5728\u7b2c 1 \u4e2a\u51fa\u552e\u53e3\u6709 0.1 \u7684\u6982\u7387\u4e70\u5230\u996e\u6599 2 \uff0c\u5728\u7b2c 2 \u4e2a\u51fa\u552e\u53e3\u6709 0.6 \u7684\u6982\u7387\u4e70\u5230\u996e\u6599 1 \u3002</p> <ul> <li>\u957f\u9888\u9e7f\u67090.5\u7684\u6982\u7387\u521d\u59cb\u9009\u62e9\u7b2c1\u4e2a\u51fa\u552e\u53e3\u5f00\u59cb\u8d2d\u4e70\uff0c\u5e76\u652f\u4ed88\u5143\u3002</li> <li>\u6709 0.1 \u7684\u6982\u7387\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 8 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.05 \u3002</li> <li>\u6709 0.9 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 1 \uff0c\u5219\u957f\u9888\u9e7f\u4f1a\u518d\u652f\u4ed8 8 \u5143\u91cd\u65b0\u4ece\u7b2c 1 \u4e2a\u51fa\u552e\u53e3\u8d2d\u4e70\u996e\u6599\u3002\u7531\u4e8e\u996e\u6599 1 \u5df2\u552e\u7a7a\uff0c\u7b2c\u4e8c\u6b21\u8d2d\u4e70\u65f6\u5fc5\u5b9a\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 16 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.45 \u3002</li> <li>\u957f\u9888\u9e7f\u67090.5\u7684\u6982\u7387\u521d\u59cb\u9009\u62e9\u7b2c2\u4e2a\u51fa\u552e\u53e3\u5f00\u59cb\u8d2d\u4e70\uff0c\u5e76\u652f\u4ed87\u5143\u3002</li> <li>\u6709 0.4 \u7684\u6982\u7387\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 7 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.2 \u3002</li> <li>\u6709 0.6 \u7684\u6982\u7387\u51fa\u8d27\u996e\u6599 1 \uff0c\u5219\u957f\u9888\u9e7f\u4f1a\u518d\u652f\u4ed8 8 \u5143\u91cd\u65b0\u4ece\u7b2c 1 \u4e2a\u51fa\u552e\u53e3\u8d2d\u4e70\u996e\u6599\u3002\u7531\u4e8e\u996e\u6599 1 \u5df2\u552e\u7a7a\uff0c\u7b2c\u4e8c\u6b21\u8d2d\u4e70\u65f6\u5fc5\u5b9a\u76f4\u63a5\u51fa\u8d27\u996e\u6599 2 \uff0c\u4e00\u5171\u652f\u4ed8 15 \u5143\uff0c\u8fd9\u79cd\u60c5\u51b5\u7684\u6982\u7387\u662f 0.3 \u3002</li> </ul> <p>\u4e8e\u662f\u671f\u671b\u652f\u4ed8\u7684\u4ef7\u94b1\u4e3a 8\u00d70.05+16\u00d70.45+7\u00d70.2+15\u00d70.3=13.5</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_18","title":"\u5b50\u4efb\u52a1","text":"<p>\u4fdd\u8bc1 \ud835\udc5b\u22642000 \uff0c 1\u2264\ud835\udc4f\ud835\udc56\u2264\ud835\udc5b , \ud835\udc4f\ud835\udc56\u2260\ud835\udc56 , 0\u2264\ud835\udc4e\ud835\udc56\u2264100 \uff0c0\u2264\ud835\udc5d\ud835\udc56\u22641 \uff0c\u4e14 \ud835\udc5d\ud835\udc56 \u4e0d\u8d85\u8fc7\u4e24\u4f4d\u5c0f\u6570\u3002</p> <p>\u5b50\u4efb\u52a1 1\uff0850\u5206\uff09\uff1a\ud835\udc5b\u226410</p> <p>\u5b50\u4efb\u52a1 2\uff0830\u5206\uff09\uff1a\ud835\udc5d\ud835\udc56=0</p> <p>\u5b50\u4efb\u52a1 3\uff0820\u5206\uff09\uff1a\u65e0\u7279\u6b8a\u9650\u5236</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2","title":"2\u3001\u6c34\u6ef4","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 2.0 \u79d2</p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MiB</p> <p>\u76f8\u5173\u6587\u4ef6\uff1a \u9898\u76ee\u76ee\u5f55</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_19","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7ecf\u5178\u7684\u6e38\u620f\u3002</p> <p>\u5728\u4e00\u4e2a \ud835\udc5b\u00d7\ud835\udc5a \u7684\u68cb\u76d8\u4e0a\uff0c\u6bcf\u4e00\u4e2a\u683c\u5b50\u4e2d\u90fd\u6709\u4e00\u4e9b\u6c34\u6ef4\u3002</p> <p>\u73a9\u5bb6\u7684\u64cd\u4f5c\u662f\uff0c\u5728\u4e00\u4e2a\u683c\u5b50\u4e2d\u52a0\u4e00\u6ef4\u6c34\u3002</p> <p>\u5f53\u4e00\u4e2a\u683c\u5b50\u4e2d\u7684\u6c34\u6ef4\u6570\u8d85\u8fc7\u4e86 4\uff0c\u8fd9\u4e00\u5927\u6ef4\u6c34\u5c31\u4f1a\u56e0\u683c\u5b50\u627f\u8f7d\u4e0d\u4f4f\u800c\u5411\u5916\u6269\u6563\u3002\u6269\u6563\u7684\u89c4\u5219\u662f\u8fd9\u6837\u7684\uff1a</p> <p>\u8fd9\u4e2a\u683c\u5b50\u4e2d\u7684\u6c34\u6ef4\u4f1a\u6d88\u5931\uff0c\u7136\u540e\u5206\u522b\u5411\u4e0a\u3001\u5de6\u3001\u4e0b\u3001\u53f3 4 \u4e2a\u65b9\u5411\u53d1\u5c04\u4e00\u4e2a\u6c34\u6ef4\u3002\u5982\u679c\u6c34\u6ef4\u78b0\u5230\u4e00\u4e2a\u6709\u6c34\u7684\u683c\u5b50\uff0c\u5c31\u4f1a\u8fdb\u5165\u8fd9\u4e2a\u683c\u5b50\u3002\u5426\u5219\u6c34\u6ef4\u4f1a\u7ee7\u7eed\u79fb\u52a8\u76f4\u5230\u5230\u8fbe\u68cb\u76d8\u8fb9\u754c\u540e\u6d88\u5931\u3002\u6269\u6563\u540e\uff0c\u6c34\u6ef4\u8fdb\u5165\u65b0\u7684\u683c\u5b50\u53ef\u80fd\u5bfc\u81f4\u8be5\u683c\u5b50\u7684\u6c34\u6ef4\u6570\u4e5f\u8d85\u8fc7 4 \uff0c\u5219\u4f1a\u7acb\u5373\u5f15\u53d1\u8fd9\u4e2a\u683c\u5b50\u7684\u6269\u6563\u3002\u6211\u4eec\u89c4\u5b9a\uff0c\u6bcf\u4e2a\u683c\u5b50\u6309\u9006\u65f6\u9488\u987a\u5e8f\u4ece\u4e0a\u65b9\u5411\u5f00\u59cb\uff0c\u9012\u5f52\u5904\u7406\u5b8c\u6bcf\u4e00\u4e2a\u65b9\u5411\u7684\u6269\u6563\u4ee5\u53ca\u5176\u5f15\u53d1\u7684\u8fde\u9501\u53cd\u5e94\uff0c\u518d\u5904\u7406\u4e0b\u4e00\u4e2a\u65b9\u5411\u7684\u6269\u6563\u3002</p> <p>\u7ed9\u5b9a\u68cb\u76d8\u7684\u521d\u59cb\u72b6\u6001\u548c\u73a9\u5bb6\u7684\u64cd\u4f5c\uff0c\u6c42\u6700\u540e\u6c34\u6ef4\u7684\u5206\u5e03\u60c5\u51b5\u3002</p> <p>\u7531\u4e8e\u628a\u6c34\u6ef4\u5728\u4e00\u4e2a\u7a7a\u683c\u770b\u8d77\u6765\u7528\u5904\u4e0d\u5927\uff0c\u6240\u4ee5\u4fdd\u8bc1\u6240\u6709\u7684\u73a9\u5bb6\u64cd\u4f5c\u90fd\u4e0d\u4f1a\u9009\u62e9\u7a7a\u683c\u3002</p> <p>\u63d0\u793a\uff1a\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u4e2a\u6c34\u6ef4\u4e0a\u4e0b\u5de6\u53f3\u65b9\u5411\u7b2c\u4e00\u4e2a\u6c34\u6ef4\u7684\u4f4d\u7f6e\uff0c\u6269\u6563\u65f6\u6839\u636e\u89c4\u5219\u6a21\u62df\uff0c\u5e76\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u7ef4\u62a4\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_20","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u56db\u4e2a\u6574\u6570 \ud835\udc5b,\ud835\udc5a,\ud835\udc50,\ud835\udc47\u3002</p> <p>\u63a5\u4e0b\u6765 \ud835\udc50 \u884c\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570 \ud835\udc65\ud835\udc56,\ud835\udc66\ud835\udc56,\ud835\udc4e\ud835\udc56\uff0c\u8868\u793a\u521d\u59cb\u68cb\u76d8\u4e0a\u7b2c \ud835\udc65\ud835\udc56 \u884c \ud835\udc66\ud835\udc56 \u5217\u6709 \ud835\udc4e\ud835\udc56 \u4e2a\u6c34\u6ef4\u3002</p> <p>\u63a5\u4e0b\u6765 \ud835\udc47 \u884c\uff0c\u6bcf\u884c\u4e24\u4e2a\u6b63\u6574\u6570 \ud835\udc62\ud835\udc56,\ud835\udc63\ud835\udc56\uff0c\u8868\u793a\u5728\u7b2c \ud835\udc62\ud835\udc56 \u884c \ud835\udc63\ud835\udc56 \u5217\u653e\u5165\u4e00\u4e2a\u6c34\u6ef4\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_21","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u8f93\u51fa \ud835\udc47 \u52a0\u82e5\u5e72\u884c\u3002</p> <p>\u524d \ud835\udc47 \u884c\u6bcf\u884c\u4e00\u4e2a\u6574\u6570\uff0c\u7b2c \ud835\udc56 \u884c\u8868\u793a\u5728\u7b2c \ud835\udc56 \u6b21\u64cd\u4f5c\u540e\u6269\u6563\u7684\u6c34\u6ef4\u6570\u3002\u82e5\u6ca1\u6709\u6269\u6563\u8f93\u51fa 0\u3002</p> <p>\u6700\u540e\u82e5\u5e72\u884c\uff08\u53ef\u80fd\u662f 0 \u884c\uff09\u8868\u793a\u68cb\u76d8\u4e0a\u6c34\u6ef4\u7684\u5206\u5e03\u60c5\u51b5\u3002\u7531\u4e0a\u81f3\u4e0b\uff0c\u7531\u5de6\u81f3\u53f3\u8f93\u51fa\uff0c\u6bcf\u884c\u4e09\u4e2a\u6b63\u6574\u6570\u8868\u793a\u884c\u53f7\u3001\u5217\u53f7\u3001\u6c34\u6ef4\u6570\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_22","title":"\u6837\u4f8b\u8f93\u5165","text":"<pre><code>4 4 12 1\n1 2 1\n1 3 2\n2 1 1\n2 4 1\n3 1 1\n3 4 1\n4 2 1\n4 3 1\n2 2 4\n2 3 4\n3 2 4\n3 3 3\n2 2\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_23","title":"\u6837\u4f8b\u8f93\u51fa","text":"<pre><code>4\n1 2 3\n1 3 4\n2 1 3\n2 4 2\n3 1 3\n3 4 2\n4 2 2\n4 3 2\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_24","title":"\u6837\u4f8b\u89e3\u91ca","text":"<p>\u6574\u4e2a\u8fc7\u7a0b\u4ece\u4e0a\u5230\u4e0b\u4ece\u5de6\u5230\u53f3\u8868\u793a\u3002</p> <p>\u5b57\u6bcd\u8868\u793a\u8be5\u683c\u5b50\u5373\u5c06\u53d1\u5c04\u6c34\u6ef4\u7684\u65b9\u5411\u3002U\uff1a\u4e0a\uff1bD\uff1a\u4e0b\uff1bL\uff1a\u5de6\uff1bR\uff1a\u53f3\u3002</p> <p>\u9ec4\u8272\u683c\u5b50\u8868\u793a\u5373\u5c06\u53d1\u5c04\u6c34\u6ef4\u7684\u683c\u5b50\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_25","title":"\u5b50\u4efb\u52a1","text":"<p>\u4fdd\u8bc1 1\u2264\ud835\udc5b,\ud835\udc5a\u2264351493\uff0c0\u2264\ud835\udc50\u2264750000\uff0c0\u2264\ud835\udc47\u2264500000\u3002</p> <p>\u4fdd\u8bc1 1\u2264\ud835\udc65\ud835\udc56,\ud835\udc62\ud835\udc56\u2264\ud835\udc5b,1\u2264\ud835\udc66\ud835\udc56,\ud835\udc63\ud835\udc56\u2264\ud835\udc5a,1\u2264\ud835\udc4e\ud835\udc56\u22644\u3002</p> <p>\u4fdd\u8bc1\u6ca1\u6709\u91cd\u590d\u7684 (\ud835\udc65\ud835\udc56,\ud835\udc66\ud835\udc56)\u3002</p> <p>\u5b50\u4efb\u52a1 1\uff0817\u5206\uff09\uff1a\ud835\udc5b,\ud835\udc5a\u2264100</p> <p>\u5b50\u4efb\u52a1 2\uff0824\u5206\uff09\uff1a\ud835\udc5b,\ud835\udc5a\u22642000</p> <p>\u5b50\u4efb\u52a1 3\uff0824\u5206\uff09\uff1a\ud835\udc50\u2264105</p> <p>\u5b50\u4efb\u52a1 4\uff0835\u5206\uff09\uff1a\u65e0\u7279\u6b8a\u6027\u8d28</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#3phi","title":"3\u3001Phi\u7684\u6e38\u620f","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1.5 \u79d2</p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MiB</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_26","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>Picar \u548c Roman \u662f\u4e24\u4e2a\u975e\u5e38\u559c\u6b22\u73a9\u5404\u79cd\u6e38\u620f\u7684\u8d4c\u5f92\u3002\u8fd9\u4e00\u5929\uff0c\u4ed6\u4eec\u53c8\u53d1\u73b0\u4e86\u4e00\u79cd\u65b0\u7684\u6570\u5b57\u6e38\u620f\uff0c\u540d\u53eb \ud835\udf11 \u7684\u6e38\u620f\uff08Phigames\uff09\u3002</p> <p>\ud835\udf11 \u7684\u6e38\u620f\u662f\u53cc\u4eba\u6e38\u620f\uff0c\u6bcf\u5c40\u6e38\u620f\u7531\u4efb\u610f\u7684\u4e00\u4e2a\u6b63\u6574\u6570 \ud835\udc41 \u5f00\u59cb\uff0c\u7531\u4e24\u4eba\u8f6e\u6d41\u5bf9\u5f53\u524d\u7684\u6570\u5b57\u8fdb\u884c\u64cd\u4f5c\u3002\u8f6e\u5230\u5176\u4e2d\u4efb\u610f\u4e00\u65b9\u8fdb\u884c\u64cd\u4f5c\u65f6\uff0c\u73a9\u5bb6\u53ef\u4ee5\u6709\u4ee5\u4e0b\u4e09\u79cd\u9009\u62e9\uff1a</p> <ol> <li>\u5927\u558a\u201c\ud835\udf11:1\uff01\u201d\u5e76\u5c06\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b \u53d8\u4e3a \ud835\udf11(\ud835\udc5b)\uff1b</li> <li>\u5927\u558a\u201c\ud835\udf11:2\uff01\u201d\u5e76\u5c06\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b \u53d8\u4e3a \ud835\udf11(2\ud835\udc5b)\uff1b</li> <li>\u5927\u558a\u201c\ud835\udf11:\ud835\udc3e\uff01\u201d\u5e76\u5c06\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b \u53d8\u4e3a \ud835\udf11(\ud835\udc5b\u2212\ud835\udc3e)\uff0c\u5176\u4e2d \ud835\udc3e \u662f\u4e00\u4e2a\u53cc\u65b9\u5728\u5f00\u59cb\u6e38\u620f\u4e4b\u524d\u7ea6\u5b9a\u597d\u7684\u6b63\u6574\u6570\u3002</li> </ol> <p>\u5176\u4e2d\uff0c\ud835\udf11(\ud835\udc5b) \u8868\u793a\u7684\u662f\u5728 1 \u5230 \ud835\udc5b \u8fd9 \ud835\udc5b \u4e2a\u6b63\u6574\u6570\u4e2d\uff0c\u6709\u591a\u5c11\u4e2a\u6b63\u6574\u6570\u4e0e \ud835\udc5b \u4e92\u8d28\uff0c\u5982 \ud835\udf11(1)=1\uff0c\ud835\udf11(4)=2\uff0c\ud835\udf11(10)=4\u3002\u6839\u636e\u8fd9\u4e00\u5b9a\u4e49\u53ef\u77e5\uff0c\ud835\udf11(\ud835\udc5b) \u7684\u5b9a\u4e49\u57df\u662f \u2115\u2217\uff0c\u6240\u4ee5\u5982\u679c\u9009\u62e9\u7b2c 3 \u79cd\u64cd\u4f5c\u201c\ud835\udf11:\ud835\udc3e\uff01\u201d\uff0c\u9700\u8981\u4fdd\u8bc1\u5f53\u524d\u7684\u6570\u5b57 \ud835\udc5b&gt;\ud835\udc3e\u3002</p> <p>\u4e24\u540d\u73a9\u5bb6\u8f6e\u6d41\u64cd\u4f5c\uff0c\u5982\u679c\u8c01\u5728\u8fdb\u884c\u64cd\u4f5c\u4e4b\u540e\u5f97\u5230\u4e86\u5df2\u7ecf\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u8c01\u5c31\u8f93\u6389\u4e86\u672c\u5c40\u6e38\u620f\u3002\u4f8b\u5982\uff0c\u5982\u679c\u73a9\u5bb6 A \u5bf9\u5f53\u524d\u7684\u6570\u5b57 1 \u9009\u62e9\u4e86\u64cd\u4f5c 1 \u201c\ud835\udf11:1\uff01\u201d\uff0c\u7531\u4e8e \ud835\udf11(1)=1 \u662f\u51fa\u73b0\u8fc7\u7684\u6570\u5b57\uff0c\u73a9\u5bb6 A \u8f93\u6389\u4e86\u672c\u5c40\u6e38\u620f\uff0c\u5bf9\u624b\u83b7\u80dc\u3002</p> <p>\ud835\udf11 \u7684\u6e38\u620f\u8003\u9a8c\u4e86\u73a9\u5bb6\u7684\u5fc3\u7b97\u80fd\u529b\u548c\u903b\u8f91\u63a8\u7406\u80fd\u529b\u3002\u53ef\u60dc\uff0c\u7531\u4e8e Picar \u548c Roman \u8db3\u591f\u806a\u660e\uff0c\u53ea\u8981\u6307\u5b9a\u4e00\u4e2a \ud835\udc3e \u548c\u6700\u5f00\u59cb\u7684\u6570\u5b57 \ud835\udc41\uff0c\u4ed6\u4eec\u5c31\u53ef\u4ee5\u7b97\u51fa\u662f\u5148\u624b\u8fd8\u662f\u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\u3002\u5982\u679c\u5bf9\u4e8e\u67d0\u4e2a\u786e\u5b9a\u7684 \ud835\udc3e\uff0c\u4ee5 \ud835\udc41 \u5f00\u59cb\u6e38\u620f\u65f6\u5148\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u5219\u79f0\u8fd9\u4e2a \ud835\udc41 \u4e3a\u5148\u624b\u5fc5\u80dc\u6001\uff1b\u5426\u5219\u540e\u624b\u6709\u5fc5\u80dc\u7b56\u7565\uff0c\u79f0 \ud835\udc41 \u4e3a\u540e\u624b\u5fc5\u80dc\u6001\u3002\u4e3a\u4e86\u4f7f\u5f97\u8fd9\u4e2a\u6e38\u620f\uff08\u5bf9\u4ed6\u4eec\u6765\u8bf4\uff09\u66f4\u6709\u8da3\uff0c\u4ed6\u4eec\u51b3\u5b9a\u5bf9\u6e38\u620f\u8fdb\u884c\u6269\u5c55\uff1a</p> <ul> <li>\u73a9\u5bb6\u5148\u6307\u5b9a \ud835\udc3e\uff0c\u5e76\u9009\u62e9\u4e24\u4e2a\u6b63\u6574\u6570 \ud835\udc3f,\ud835\udc45\uff0c\u7531\u7cfb\u7edf\u5728 [\ud835\udc3f,\ud835\udc45] \u4e2d\u7684\u5148\u624b\u5fc5\u80dc\u6001\u4e2d\u968f\u673a\u6311\u9009\u4e00\u4e2a \ud835\udc5f \u4f5c\u4e3a\u53f3\u7aef\u70b9\uff1b</li> <li>\u7531\u540e\u624b\u9009\u62e9\u4e00\u4e2a\u6b63\u6574\u6570\u5de6\u7aef\u70b9 \ud835\udc59 \uff0c\u9700\u8981\u4fdd\u8bc1 \ud835\udc59\u2264\ud835\udc5f\uff1b</li> <li>\u5f00\u59cb\u4e00\u5c40\u6e38\u620f\u65f6\uff0c\u7cfb\u7edf\u4ece [\ud835\udc59,\ud835\udc5f] \u4e2d\u7b49\u6982\u7387\u6311\u9009\u4e00\u4e2a\u6b63\u6574\u6570 \ud835\udc41 \uff0c\u4f5c\u4e3a\u6e38\u620f\u5f00\u59cb\u65f6\u7531\u5148\u624b\u64cd\u4f5c\u7684\u6570\u5b57\u3002</li> </ul> <p>\u5c3d\u7ba1 Picar \u548c Roman \u8db3\u591f\u806a\u660e\uff0c\u8ba1\u7b97\u4fee\u6539\u540e\u7684\u6e38\u620f\u5bf9\u4ed6\u4eec\u6765\u8bf4\u4e5f\u9700\u8981\u82b1\u8d39\u4e0d\u5c11\u7684\u65f6\u95f4\u3002\u4e8e\u662f\uff0c\u4ed6\u4eec\u627e\u5230\u4e86\u4f60\uff0c\u60f3\u8ba9\u4f60\u5e2e\u5fd9\u8ba1\u7b97\u4e00\u4e0b\u4fee\u6539\u540e\u7684\u6e38\u620f\u7684\u5e73\u8861\u6027\u3002\u5373\uff1a\u7ed9\u5b9a\u53c2\u6570 \ud835\udc3f,\ud835\udc45,\ud835\udc3e\uff0c\u6c42\u540e\u624b\u5bf9\u4e8e\u4efb\u610f\u7684 \ud835\udc5f \u80fd\u9009\u51fa\u6700\u4f18\u7684 \ud835\udc59 \u4f7f\u5f97\u540e\u624b\u80dc\u7387\u6700\u5927\u65f6\uff0c\u5148\u624b\u7684\u5e73\u5747\u80dc\u7387\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_27","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u8f93\u5165\u4ec5\u4e00\u884c\uff0c\u5305\u542b\u4e09\u4e2a\u6b63\u6574\u6570 \ud835\udc3f,\ud835\udc45,\ud835\udc3e\uff0c\u542b\u4e49\u5982\u9898\u76ee\u63cf\u8ff0\u6240\u793a\u3002\u4fdd\u8bc1 \ud835\udc3f\u2264\ud835\udc45\uff0c\u4e14\u5728 [\ud835\udc3f,\ud835\udc45] \u4e2d\u81f3\u5c11\u5b58\u5728\u4e00\u4e2a\u5148\u624b\u5fc5\u80dc\u6001\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_28","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u8f93\u51fa\u4e00\u4e2a\u5b9e\u6570\uff0c\u8868\u793a\u5728\u7ed9\u5b9a\u7684\u53c2\u6570 \ud835\udc3f,\ud835\udc45,\ud835\udc3e \u4e0b\uff0c\u4fee\u6539\u540e\u7684\u6e38\u620f\u7684\u5148\u624b\u5e73\u5747\u80dc\u7387\u3002</p> <p>\u8bb0\u7b54\u6848\u4e3a \ud835\udc4e\uff0c\u800c\u4f60\u7684\u8f93\u51fa\u4e3a \ud835\udc4f\uff0c\u90a3\u4e48\u5f53\u4e14\u4ec5\u5f53 |\ud835\udc4e\u2212\ud835\udc4f|&lt;10\u22126 \u65f6\u6211\u4eec\u8ba4\u4e3a\u4f60\u7684\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#1_1","title":"\u6837\u4f8b1\u8f93\u5165","text":"<pre><code>1 10 3\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#1_2","title":"\u6837\u4f8b1\u8f93\u51fa","text":"<pre><code>0.533333333333333333\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#1_3","title":"\u6837\u4f8b1\u89e3\u91ca","text":"<p>\u6b64\u65f6 2,4,5,7,9,10 \u4e3a\u5148\u624b\u5fc5\u80dc\u6001\uff0c1,3,6,8 \u4e3a\u540e\u624b\u5fc5\u80dc\u6001\u3002</p> <ul> <li>\ud835\udc5f=2 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 1\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=4 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 3\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=5 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 1\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 3/5\uff1b</li> <li>\ud835\udc5f=7 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 6\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=9 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 8\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 1/2\uff1b</li> <li>\ud835\udc5f=10 \u5bf9\u5e94\u7684\u6700\u4f18\u5de6\u7aef\u70b9 \ud835\udc59 \u4e3a 6\uff0c\u6b64\u65f6\u5148\u624b\u80dc\u7387\u4e3a 3/5\u3002</li> </ul> <p>\u6545\u5148\u624b\u7684\u5e73\u5747\u80dc\u7387\u4e3a (1/2+1/2+3/5+1/2+1/2+3/5)/6=8/15\u22480.5333\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2_1","title":"\u6837\u4f8b2\u8f93\u5165","text":"<pre><code>2021 5000 0\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#2_2","title":"\u6837\u4f8b2\u8f93\u51fa","text":"<pre><code>0.391970630667343944\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#3","title":"\u6837\u4f8b3\u8f93\u5165","text":"<pre><code>214 7483648 57721\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#3_1","title":"\u6837\u4f8b3\u8f93\u51fa","text":"<pre><code>0.490802831707061571\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/%E6%B8%85%E5%8D%8E%E6%9C%BA%E8%AF%95%E7%9C%9F%E9%A2%98/#_29","title":"\u5b50\u4efb\u52a1","text":"<p>\u5bf9\u4e8e 100 \u7684\u6570\u636e\uff0c\u4fdd\u8bc1 1\u2264\ud835\udc3f\u2264\ud835\udc45\u2264107,0\u2264\ud835\udc3e\u2264107\u3002</p> <p>\u5177\u4f53\u7684\u6d4b\u8bd5\u70b9\u5206\u5e03\u89c1\u4e0b\u8868\uff1a</p> \u6d4b\u8bd5\u70b9 \ud835\udc3f,\ud835\udc45\u2264 \ud835\udc3e \u7279\u6b8a\u6027\u8d28 1 6 &lt;\ud835\udc45 \u65e0 2 10 3 16 4 18 5 1000 6 2000 7 3000 8 5000 9 105 \ud835\udc45\u2212\ud835\udc3f\u226499 10 106 \ud835\udc45\u2212\ud835\udc3f\u22649 11 5\u00d7106 =0 12 &lt;\ud835\udc45 13 105 \u65e0 14 15 16 106 =0 17 &lt;\ud835\udc45 18 107 \ud835\udc3f=\ud835\udc45 19 \u65e0 20"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/","title":"Interview","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1 \u79d2 </p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MB</p> <p>\u76f8\u5173\u6587\u4ef6\uff1a \u9898\u76ee\u76ee\u5f55</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u751f\u6d3b\u5728\u5728\u5916\u661f\u7403X\u4e0a\u7684\u5c0fZ\u60f3\u8981\u627e\u4e00\u4e9b\u5c0f\u670b\u53cb\u7ec4\u6210\u4e00\u4e2a\u821e\u8e48\u56e2\uff0c\u4e8e\u662f\u4ed6\u5728\u7f51\u4e0a\u53d1\u5e03\u4e86\u4fe1\u606f\uff0c\u4e00\u5171\u6709 \\(n\\) \u4e2a\u4eba\u62a5\u540d\u9762\u8bd5\u3002</p> <p>\u9762\u8bd5\u5fc5\u987b\u6309\u7167\u62a5\u540d\u7684\u987a\u5e8f\u4f9d\u6b21\u8fdb\u884c\u3002\u5c0fZ\u53ef\u4ee5\u9009\u62e9\u5728\u9762\u8bd5\u5b8c\u82e5\u5e72\u5c0f\u670b\u53cb\u4ee5\u540e\uff0c\u5728\u6240\u6709\u5df2\u7ecf\u9762\u8bd5\u8fc7\u7684\u5c0f\u670b\u53cb\u4e2d\u8fdb\u884c\u4efb\u610f\u987a\u5e8f\u7684\u6311\u9009\uff0c\u4ee5\u7ec4\u5408\u6210\u4e00\u4e2a\u821e\u8e48\u56e2\u3002</p> <p>\u867d\u7136\u8bf4\u662f\u5c0f\u670b\u53cb\uff0c\u4f46\u662f\u5916\u661f\u7403X\u4e0a\u7684\u751f\u6001\u73af\u5883\u548c\u5730\u7403\u4e0a\u7684\u4e0d\u592a\u4e00\u6837\uff0c\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\u53ef\u80fd\u76f8\u5dee\u5f88\u5927\u3002\u5c0fZ\u5e0c\u671b\u7ec4\u5efa\u7684\u8fd9\u4e2a\u821e\u8e48\u56e2\u8981\u6c42\u81f3\u5c11\u6709 \\(m\\) \u4e2a\u5c0f\u670b\u53cb\uff0c\u5e76\u4e14\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u6700\u9ad8\u8eab\u9ad8\u548c\u6700\u4f4e\u8eab\u9ad8\u4e4b\u5dee\u4e0d\u80fd\u8d85\u8fc7 \\(k\\) \u4e2a\u957f\u5ea6\u5355\u4f4d\u3002</p> <p>\u73b0\u5728\u77e5\u9053\u4e86\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\u4fe1\u606f\uff0c\u95ee\u5c0fZ\u81f3\u5c11\u8981\u9762\u8bd5\u591a\u5c11\u5c0f\u670b\u53cb\u624d\u80fd\u5728\u5df2\u7ecf\u9762\u8bd5\u8fc7\u7684\u5c0f\u670b\u53cb\u4e2d\u9009\u51fa\u4e0d\u5c11\u4e8e \\(m\\) \u4e2a\u7ec4\u6210\u821e\u8e48\u56e2\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c \\(3\\) \u4e2a\u6574\u6570 \\(n,m,k\\)\uff0c\u610f\u4e49\u89c1\u9898\u9762\u63cf\u8ff0\uff1b\\(1 \\le m \\le n \\le 10^{5}; 0 \\le k \\le 10^{5}\\)\uff1b</p> <p>\u7b2c\u4e8c\u884c \\(n\\) \u4e2a\u6574\u6570\uff0c\u7b2c \\(i\\) \u4e2a\u6570 \\(h_i\\) \u8868\u793a\u7b2c \\(i\\) \u4e2a\u62a5\u540d\u9762\u8bd5\u7684\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\uff0c \\(1 \\le h_i \\le 10^{5}\\)\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u5982\u679c\u53ef\u4ee5\u9009\u51fa\u821e\u8e48\u56e2\uff0c\u8f93\u51fa\u81f3\u5c11\u8981\u9762\u8bd5\u591a\u5c11\u4eba\uff1b\u5426\u5219\u8f93\u51fa <code>impossible</code>\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#1","title":"\u6837\u4f8b1\u8f93\u5165","text":"<pre><code>6 3 5\n170 169 175 171 180 175\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#1_1","title":"\u6837\u4f8b1\u8f93\u51fa","text":"<pre><code>4\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#1_2","title":"\u6837\u4f8b1\u89e3\u91ca","text":"<p>\u5f53\u9762\u8bd5\u4e86\u524d\\(4\\)\u4e2a\u5c0f\u670b\u53cb\u4e4b\u540e\uff0c\u8fd9\u4e9b\u5c0f\u670b\u53cb\u7684\u8eab\u9ad8\u5206\u522b\u4e3a\\(170,169,175,171\\)\uff0c\u53ef\u9009\u51fa\u8eab\u9ad8\u4e3a\\(170,175,171\\)\u7684\u5c0f\u670b\u53cb\u7ec4\u6210\u821e\u8e48\u56e2\uff0c\u6545\u53ea\u7528\u9762\u8bd5\\(4\\)\u4e2a\u5c0f\u670b\u53cb\u5373\u53ef\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#2","title":"\u6837\u4f8b2\u8f93\u5165","text":"<pre><code>6 4 5\n170 169 175 171 180 175\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#2_1","title":"\u6837\u4f8b2\u8f93\u51fa","text":"<pre><code>6\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#2_2","title":"\u6837\u4f8b2\u89e3\u91ca","text":"<p>\u5728\u8fd9\u4e2a\u6837\u4f8b\u4e2d\uff0c\u5c0fZ\u9700\u8981\u9762\u8bd5\u6240\u6709\u5c0f\u670b\u53cb\uff0c\u624d\u80fd\u9009\u51fa\u8eab\u9ad8\u4e3a\\(170,175,171,175\\)\u7684\u5c0f\u670b\u53cb\u7ec4\u6210\u821e\u8e48\u56e2\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#3","title":"\u6837\u4f8b3\u8f93\u5165","text":"<pre><code>6 5 5\n170 169 175 171 180 175\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#3_1","title":"\u6837\u4f8b3\u8f93\u51fa","text":"<pre><code>impossible\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#4","title":"\u6837\u4f8b4","text":"<p>\u89c1\u9898\u76ee\u76ee\u5f55\u4e0b\u7684 4.in \u4e0e 4.ans\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/interview/#_4","title":"\u5b50\u4efb\u52a1","text":"<p>\u672c\u9898\u76ee\u4e00\u5171 \\(20\\) \u4e2a\u6d4b\u8bd5\u70b9\uff0c\u6240\u6709\u6d4b\u8bd5\u70b9\u5747\u4e0d\u5f00\u542fO2\u4f18\u5316\u3002</p> <p>\u200b   </p> \u6d4b\u8bd5\u70b9\u7f16\u53f7$n, m$$h_i, k$1,2$1 \\le m \\le n \\le 100$$k=0;1 \\le h_i \\le 100$3,4$1 \\le m \\le n \\le 2\\times 10^3$$0 \\le k \\le 50;1 \\le h_i \\le 100$5,6,7,8$0 \\le k \\le 100;1 \\le h_i \\le 5\\times 10^3$9,10,11,12$0 \\le k \\le 5\\times 10^3;1 \\le h_i \\le 5\\times 10^3$13,14$1 \\le m \\le n \\le 2\\times 10^3$$0 \\le k \\le 10^5;1 \\le h_i \\le 10^5$15,16$1 \\le m \\le n \\le 10^5$$0 \\le k \\le 100;1 \\le h_i \\le 10^5$17,18,19,20$1 \\le m \\le n \\le 10^5$$0 \\le k \\le 10^5;1 \\le h_i \\le 10^5$"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/","title":"Mine","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1 \u79d2 </p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MB</p> <p>\u76f8\u5173\u6587\u4ef6\uff1a \u9898\u76ee\u76ee\u5f55</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#_1","title":"\u9898\u76ee\u63cf\u8ff0","text":"<p>\u626b\u96f7\uff08minesweeper\uff09\u662f\u4e00\u4e2a\u6709\u8da3\u7684\u5355\u4eba\u76ca\u667a\u7c7b\u6e38\u620f\uff0c\u6e38\u620f\u76ee\u6807\u662f\u5728\u6700\u77ed\u7684\u65f6\u95f4\u5185\u6839\u636e\u68cb\u76d8\u4e0a\u7684\u63d0\u793a\u4fe1\u606f\uff0c\u627e\u51fa\u6240\u6709\u975e\u96f7\u65b9\u5757\uff0c\u540c\u65f6\u907f\u514d\u8e29\u5230\u5730\u96f7\u3002\u968f\u7740\u684c\u9762\u64cd\u4f5c\u7cfb\u7edfWindows\u7684\u6d41\u884c\uff0c\u5176\u81ea\u5e26\u7684\u626b\u96f7\u6e38\u620f\u4e5f\u56e0\u4e3a\u6709\u8da3\u7684\u73a9\u6cd5\u3001\u7cbe\u81f4\u7684\u753b\u9762\u53d7\u5230\u5927\u5bb6\u7684\u6b22\u8fce\u3002</p> <p>\u5c0fL\u7684\u7535\u8111\u4e0a\u66fe\u7ecf\u4e5f\u6709\u4e00\u4e2a\u626b\u96f7\u6e38\u620f\uff0c\u5b83\u548c\u4e3b\u6d41\u7684\u626b\u96f7\u6e38\u620f\u57fa\u672c\u76f8\u4f3c\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u4e0d\u540c\u7684\u5730\u65b9\uff0c\u5177\u4f53\u4ecb\u7ecd\u5982\u4e0b\uff1a</p> <p>\u6e38\u620f\u5f00\u59cb\u65f6\uff0c\u73a9\u5bb6\u53ef\u4ee5\u770b\u5230 \\(N\\times M\\) \u4e2a\u6574\u9f50\u6392\u5217\u7684\u7a7a\u767d\u65b9\u5757\uff0c\u73a9\u5bb6\u987b\u6839\u636e\u68cb\u76d8\u5df2\u6709\u7684\u4fe1\u606f\uff0c\u8fd0\u7528\u903b\u8f91\u63a8\u7406\u6765\u63a8\u65ad\u54ea\u4e9b\u65b9\u5757\u542b\u6216\u4e0d\u542b\u5730\u96f7\u3002</p> <ol> <li> <p>\u73a9\u5bb6\u53ef\u4ee5\u7528\u9f20\u6807\u5de6\u952e\u70b9\u51fb\u7a7a\u767d\u65b9\u5757\uff0c\u8868\u793a\u63a8\u65ad\u8fd9\u4e2a\u65b9\u5757\u6ca1\u6709\u5730\u96f7\uff0c\u5c1d\u8bd5\u63a2\u660e\u5b83\u3002</p> </li> <li> <p>\u5982\u679c\u73a9\u5bb6\u70b9\u5f00\u6ca1\u6709\u5730\u96f7\u7684\u65b9\u5757\uff0c\u4f1a\u6709\u4e00\u4e2a\u6570\u5b57\u663e\u73b0\u5176\u4e0a\uff0c\u8fd9\u4e2a\u6570\u5b57\u4ee3\u8868\u7740\u516b\u8fde\u901a\u7684\u76f8\u90bb\u65b9\u5757\u6709\u591a\u5c11\u9897\u5730\u96f7\uff08\u81f3\u591a\u4e3a \\(8\\)\uff09</p> </li> <li> <p>\u5982\u679c\u8fd9\u4e2a\u65b9\u5757\u516b\u8fde\u901a\u7684\u65b9\u5757\u4e2d\u6ca1\u6709\u5730\u96f7\uff08\u4e5f\u5373\uff0c\u65b9\u5757\u663e\u793a\u7684\u6570\u5b57\u4e3a \\(0\\)\uff09\uff0c\u5219\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5e2e\u73a9\u5bb6\u70b9\u5f00\u5b83\u76f8\u90bb\u7684\u65b9\u5757\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5f15\u8d77\u8fde\u9501\u53cd\u5e94\u3002</p> </li> <li> <p>\u5982\u679c\u73a9\u5bb6\u70b9\u5f00\u6709\u5730\u96f7\u7684\u65b9\u5757\uff0c\u5219\u6e38\u620f\u7ed3\u675f\uff0c\u73a9\u5bb6\u5931\u8d25\u3002</p> </li> <li> <p>\u73a9\u5bb6\u53ef\u5728\u63a8\u6d4b\u6709\u5730\u96f7\u7684\u65b9\u5757\u4e0a\u70b9\u9f20\u6807\u53f3\u952e\uff0c\u8868\u793a\u653e\u7f6e\u65d7\u5e1c\u6765\u6807\u660e\u5730\u96f7\u7684\u4f4d\u7f6e\uff1b\u5728\u6709\u65d7\u5e1c\u7684\u65b9\u5757\u4e0a\u518d\u6b21\u70b9\u51fb\u53f3\u952e\uff0c\u4f1a\u4f7f\u65d7\u5e1c\u6d88\u5931\uff0c\u6210\u4e3a\u7a7a\u767d\u7684\u65b9\u5757\u3002\u5728\u5df2\u6807\u660e\u65d7\u5e1c\u7684\u65b9\u5757\u70b9\u51fb\u5de6\u952e\uff0c\u65b9\u5757\u4e0d\u4f1a\u6709\u4efb\u4f55\u7684\u53d8\u52a8\u3002\u82e5\u5728\u6e38\u620f\u8fdb\u884c\u4e2d\u9519\u7f6e\u65d7\u5e1c\uff0c\u53ef\u4ee5\u7528\u53f3\u952e\u6765\u6539\u53d8\u65b9\u5757\u72b6\u6001\u3002</p> </li> <li> <p>\u73a9\u5bb6\u53ef\u4ee5\u5728\u4e00\u4e2a\u5df2\u63a2\u660e\u7684\u65b9\u5757\u4e0a\u540c\u65f6\u70b9\u51fb\u5de6\u952e\u53ca\u53f3\u952e\u3002\u6b64\u65f6\uff0c\u5982\u679c\u65b9\u5757\u76f8\u90bb\u7684 \\(8\\) \u4e2a\u65b9\u5757\u653e\u7f6e\u65d7\u5e1c\u7684\u6570\u76ee\u4e0e\u65b9\u5757\u4e0a\u7684\u6570\u5b57\u76f8\u540c\uff0c\u90a3\u4e48\u5468\u56f4\u672a\u63a2\u660e\u7684\u65b9\u5757\u5c31\u4f1a\u81ea\u52a8\u6253\u5f00\u3002\u7136\u800c\uff0c\u73a9\u5bb6\u82e5\u9519\u7f6e\u65d7\u5e1c\u4f4d\u7f6e\uff0c\u6b64\u52a8\u4f5c\u53ef\u80fd\u4f1a\u6253\u5f00\u771f\u6b63\u85cf\u6709\u5730\u96f7\u7684\u65b9\u5757\uff0c\u5bfc\u81f4\u6e38\u620f\u5931\u8d25\u3002\u4e0d\u8fc7\u8fd9\u6837\u7684\u70b9\u51fb\u52a8\u4f5c\u53ef\u52a0\u5feb\u6e38\u620f\u901f\u5ea6\u4ee5\u4fbf\u5f97\u5230\u9ad8\u5206\u3002 </p> </li> </ol> <p>\u7136\u800c\uff0c\u5e74\u4ee3\u4e45\u8fdc\uff0c\u5c0f L \u5df2\u7ecf\u627e\u4e0d\u5230\u5f53\u5e74\u966a\u4ed6\u5ea6\u8fc7\u5341\u5e74\u6c42\u5b66\u65f6\u5149\u7684\u626b\u96f7\u6e38\u620f\u4e86\uff0c\u4e8e\u662f\u4ed6\u627e\u5230\u4e86\u7cbe\u901a\u7f16\u7a0b\u7684\u4f60\uff0c\u5e0c\u671b\u4f60\u80fd\u5e2e\u4ed6\u5199\u4e00\u4e2a\u7b80\u5355\u7684\u626b\u96f7\u6e38\u620f\uff0c\u5e2e\u52a9\u4ed6\u56de\u5fc6\u90a3\u4e9b\u5feb\u4e50\u65f6\u5149\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u8bfb\u5165\u4e00\u4e2a\u5730\u96f7\u5e03\u7f6e\u56fe\u3002\u7136\u540e\u8bfb\u5165\u7528\u6237\u7684\u6bcf\u4e00\u6b21\u6e38\u620f\u64cd\u4f5c\uff0c\u5e76\u5728\u6bcf\u6b21\u64cd\u4f5c\u540e\u7ed9\u7528\u6237\u4ee5\u53cd\u9988\uff0c\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u6e38\u620f\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7ea6\u5b9a\uff1a\u6211\u4eec\u7528\u5750\u6807 \\((x, y)\\) \u8868\u793a\u68cb\u76d8\u7b2c \\(x\\) \u884c\u3001\u7b2c \\(y\\) \u5217\u7684\u65b9\u5757\u3002</p> <p>\u7b2c\u4e00\u884c\u7528\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6574\u6570 \\(n,m\\)\uff0c\u8868\u793a\u68cb\u76d8\u7684\u89c4\u6a21\u3002</p> <p>\u63a5\u4e0b\u6765 \\(n\\) \u884c\uff0c\u6bcf\u884c\u4e00\u4e2a\u957f\u4e3a \\(m\\) \u7684\u5b57\u7b26\u4e32\uff0c\u63cf\u8ff0\u68cb\u76d8\uff0c\u5176\u4e2d\u7b2c \\(i\\) \u884c\u7684\u7b2c \\(j\\) \u4e2a\u5b57\u7b26\u8868\u793a\u68cb\u76d8\u7684\u65b9\u5757 \\((i, j)\\)\u3002\u4e3a <code>*</code> \u8868\u793a\u65b9\u5757\u91cc\u6709\u4e00\u4e2a\u5730\u96f7\uff0c\u4e3a <code>.</code> \u8868\u793a\u65b9\u5757\u662f\u5b89\u5168\u7684\u3002</p> <p>\u63a5\u4e0b\u6765\u6bcf\u4e00\u884c\u6309\u65f6\u95f4\u987a\u5e8f\u63cf\u8ff0\u6bcf\u4e00\u6b21\u7528\u6237\u64cd\u4f5c\uff0c\u76f4\u5230\u6587\u4ef6\u7ed3\u675f\u3002\u6bcf\u4e00\u884c\u7684\u683c\u5f0f\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u9996\u5148\u8bfb\u5165\u4e00\u4e2a\u5b57\u7b26\u4e32\uff0c\u8868\u793a\u8fd9\u6b21\u64cd\u4f5c\u7684\u5185\u5bb9\uff1a</p> </li> <li> <p>Flag\uff1a\u8868\u793a\u53f3\u952e\u70b9\u51fb\u67d0\u4e2a\u65b9\u5757\uff0c\u63d2\u4e0a\uff0f\u64a4\u9500\u4e00\u9762\u65d7\u5e1c\u3002</p> </li> <li>Sweep\uff1a\u8868\u793a\u5de6\u952e\u70b9\u51fb\u67d0\u4e2a\u65b9\u5757\uff0c\u5224\u65ad\u8fd9\u4e2a\u65b9\u5757\u6ca1\u6709\u5730\u96f7\uff0c\u8981\u63a2\u660e\u4e4b\u3002</li> <li>DSweep\uff1a\u8868\u793a\u5de6\u53f3\u952e\u540c\u65f6\u70b9\u51fb\u67d0\u4e2a\u65b9\u5757\uff0c\u5c1d\u8bd5\u63a2\u660e\u4e0e\u5b83\u76f8\u90bb\u7684\u65b9\u5757\u3002</li> <li> <p>Quit\uff1a\u8868\u793a\u653e\u5f03\u672c\u5c40\u6e38\u620f\u5e76\u9000\u51fa\u3002</p> </li> <li> <p>\u82e5\u64cd\u4f5c\u4e0d\u4e3a Quit\uff0c\u5219\u4e4b\u540e\u6709\u7a7a\u683c\u9694\u5f00\u7684\u4e24\u4e2a\u6574\u6570 \\(x,y\\)\uff0c\u8868\u793a\u8fd9\u6b21\u64cd\u4f5c\u7684\u5750\u6807\u4e3a \\((x, y)\\)\uff0c\u4fdd\u8bc1 \\(1\\leq x\\leq n\\), \\(1\\leq y\\leq m\\)\u3002</p> </li> </ol> <p>\u8f93\u5165\u6570\u636e\u4fdd\u8bc1\u5b58\u5728\u6709\u4e14\u4ec5\u6709\u4e00\u6b21 Quit \u64cd\u4f5c\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u5bf9\u6bcf\u4e00\u6b21\u64cd\u4f5c\uff0c\u5411\u6807\u51c6\u8f93\u51fa\u6253\u5370\u4e00\u884c\u6216\u591a\u884c\uff0c\u8868\u793a\u6b64\u6b21\u64cd\u4f5c\u7684\u53cd\u9988\u3002\u5177\u4f53\u683c\u5f0f\u5982\u4e0b\uff1a</p> <ol> <li>\u82e5\u8bfb\u5165\u4e86 Quit\uff0c\u5ffd\u7565\u4e4b\u540e\u7684\u6240\u6709\u8f93\u5165\uff0c\u7ed3\u675f\u672c\u5c40\u6e38\u620f\uff0c\u8f93\u51fa\u7ed3\u675f\u4fe1\u606f\uff08\u89c1\u7b2c \\(8\\) \u6761\uff09\u3002</li> <li> <p>\u5bf9 Flag \u64cd\u4f5c\uff1a</p> </li> <li> <p>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u5df2\u7ecf\u88ab\u63a2\u660e\uff0c\u8f93\u51fa\u4e00\u884c <code>swept</code>\u3002</p> </li> <li>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u672a\u88ab\u63a2\u660e\uff0c\u63d2\u4e0a\u65d7\u5e1c\uff0c\u8f93\u51fa\u4e00\u884c <code>success</code>\u3002</li> <li> <p>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u4e0a\u6709\u65d7\u5e1c\uff0c\u6e05\u9664\u4e4b\uff0c\u8f93\u51fa\u4e00\u884c <code>cancelled</code>\u3002</p> </li> <li> <p>\u5bf9 Sweep \u64cd\u4f5c\uff1a</p> </li> <li> <p>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u5df2\u7ecf\u88ab\u63a2\u660e\uff0c\u8f93\u51fa\u4e00\u884c <code>swept</code>\u3002</p> </li> <li>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u4e0a\u6709\u65d7\u5e1c\uff0c\u8f93\u51fa\u4e00\u884c <code>flagged</code>\u3002</li> <li> <p>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u672a\u88ab\u63a2\u660e\uff0c\u8fdb\u884c\u626b\u96f7\u8fc7\u7a0b\uff0c\u6839\u636e\u626b\u96f7\u7684\u7ed3\u679c\uff0c\u8f93\u51fa\u53cd\u9988\u4fe1\u606f\uff08\u89c1\u7b2c \\(5\u30016\\) \u6761\uff09\u3002</p> </li> <li> <p>\u5bf9 DSweep \u64cd\u4f5c\uff1a</p> </li> <li> <p>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u672a\u88ab\u63a2\u660e\uff0c\u8f93\u51fa\u4e00\u884c <code>not swept</code>\u3002</p> </li> <li>\u5982\u679c\u5bf9\u5e94\u65b9\u5757\u6570\u5b57\u4e3a \\(0\\)\u3001\u6216\u8005\u5b83\u516b\u8fde\u901a\u7684\u65b9\u5757\u7684\u65d7\u5e1c\u6570\u4e0d\u7b49\u4e8e\u65b9\u5757\u663e\u793a\u7684\u6570\uff0c\u8f93\u51fa\u4e00\u884c <code>failed</code>\u3002</li> <li> <p>\u5426\u5219\uff0c\u5bf9\u65b9\u5757\u516b\u8fde\u901a\u7684\u6bcf\u4e2a\u7a7a\u767d\u65b9\u5757\u8fdb\u884c\u626b\u96f7\u8fc7\u7a0b\uff0c\u6240\u6709\u626b\u96f7\u8fc7\u7a0b\u7ed3\u675f\u4e4b\u540e\uff0c\u6839\u636e\u626b\u96f7\u7684\u7ed3\u679c\uff0c\u8f93\u51fa\u53cd\u9988\u4fe1\u606f\uff08\u89c1\u7b2c \\(6\u30017\\) \u6761\uff09\u3002</p> </li> <li> <p>\u626b\u96f7\u8fc7\u7a0b\uff0c\u5047\u8bbe\u8981\u5bf9 \\((x, y)\\) \u8fdb\u884c\u626b\u96f7\uff1a</p> </li> <li> <p>\u5982\u679c \\((x,y)\\) \u4e3a\u5730\u96f7\uff0c\u626b\u96f7\u5931\u8d25\u3002\u8f93\u51fa\u4e00\u884c <code>boom</code>\u3002\u63a5\u7740\uff0c\u5ffd\u7565\u4e4b\u540e\u7684\u6240\u6709\u8f93\u5165\uff0c\u7ed3\u675f\u672c\u5c40\u6e38\u620f\uff0c\u8f93\u51fa\u7ed3\u675f\u4fe1\u606f\uff08\u89c1\u7b2c \\(8\\) \u6761\uff09\u3002</p> </li> <li> <p>\u5426\u5219\uff0c\u6807\u8bb0\u8fd9\u4e2a\u65b9\u5757\u4e3a\u201c\u5df2\u63a2\u660e\u201d\uff0c\u4ee4\u8fd9\u4e2a\u65b9\u5757\u663e\u793a\u5b83\u76f8\u90bb\u7684\u65b9\u5757\u7684\u5730\u96f7\u603b\u6570\u3002\u5982\u679c\u5b83\u76f8\u90bb\u7684\u65b9\u5757\u4e0d\u5b58\u5728\u5730\u96f7\uff0c\u5219\u81ea\u52a8\u5bf9\u5b83\u76f8\u90bb\u7684\u6ca1\u6709\u63a2\u660e\u7684\u65b9\u5757\u8fdb\u884c\u626b\u96f7\uff08\u6b64\u65f6\uff0c\u6e05\u9664\u5b83\u7684\u76f8\u90bb\u65b9\u5757\u4e0a\u7684\u65d7\u5e1c\u4fe1\u606f\uff09\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u80fd\u4f1a\u5f15\u8d77\u8fde\u9501\u53cd\u5e94\u3002</p> </li> <li> <p>\u5bf9 Sweep \u64cd\u4f5c\uff0c\u5728\u626b\u96f7\u8fc7\u7a0b\u6210\u529f\u7ed3\u675f\u4e4b\u540e\u8f93\u51fa\u626b\u96f7\u53cd\u9988\uff1b\u5bf9 DSweep \u64cd\u4f5c\uff0c\u5728\u6240\u6709\u7684\u626b\u96f7\u8fc7\u7a0b\uff08\u53ef\u80fd\u662f \\(0\\) \u6b21\uff09\u6210\u529f\u7ed3\u675f\u4e4b\u540e\u8f93\u51fa\u626b\u96f7\u53cd\u9988\uff0c\u683c\u5f0f\u5982\u4e0b\uff1a</p> </li> <li> <p>\u5982\u679c\u6ca1\u6709\u4efb\u4f55\u65b0\u65b9\u5757\u88ab\u63a2\u660e\uff08\u53ef\u80fd\u5728 DSweep \u65f6\u53d1\u751f\uff09\uff0c\u8f93\u51fa\u4e00\u884c\uff1a<code>no cell detected</code>\u3002</p> </li> <li>\u5426\u5219\uff0c\u8bbe\u6709 \\(num\\_of\\_cells\\) \u4e2a\u65b0\u65b9\u5757\u88ab\u63a2\u660e\uff0c\u9996\u5148\u8f93\u51fa\u4e00\u884c\uff1a<code>NUM_OF_CELLS cell(s) detected</code>\uff0c\u5176\u4e2d <code>NUM_OF_CELLS</code> \u5e94\u8be5\u8f93\u51fa\u672c\u6b21\u64cd\u4f5c\u63a2\u660e\u7684\u65b9\u5757\u6570\uff0c\u8bf7\u6ce8\u610f\u62ec\u53f7\u7684\u8f93\u51fa\u3002</li> <li> <p>\u63a5\u4e0b\u6765 \\(num\\_of\\_cells\\) \u884c\uff0c\u5c06\u6240\u6709\u65b0\u63a2\u660e\u7684\u65b9\u5757\u6309\u7167\u6240\u5728\u884c\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c\u6240\u5728\u5217\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\uff0c\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u8f93\u51fa\uff0c\u6bcf\u4e00\u884c\u8f93\u51fa\u7a7a\u683c\u9694\u5f00\u7684\u4e09\u4e2a\u6574\u6570 \\(x,y,c\\)\uff0c\u5176\u4e2d \\(x, y\\) \u8868\u793a\u65b9\u5757\u7684\u5750\u6807\uff0c\\(c\\) \u8868\u793a\u65b9\u5757\u4e0a\u663e\u793a\u7684\u6570\u5b57\u3002</p> </li> <li> <p>\u82e5\u67d0\u6b21 Sweep / DSweep \u64cd\u4f5c\u7ed3\u675f\u4e4b\u540e\uff0c\u6240\u6709\u6ca1\u6709\u5730\u96f7\u7684\u65b9\u5757\u5747\u88ab\u63a2\u660e\uff0c\u5ffd\u7565\u4e4b\u540e\u7684\u6240\u6709\u8f93\u5165\uff0c\u7ed3\u675f\u672c\u5c40\u6e38\u620f\uff0c\u8f93\u51fa\u7ed3\u675f\u4fe1\u606f\uff08\u89c1\u7b2c \\(8\\) \u6761\uff09\u3002</p> </li> <li> <p>\u7ed3\u675f\u4fe1\u606f\u7684\u8f93\u51fa\u683c\u5f0f\uff1a</p> </li> <li> <p>\u9996\u5148\uff0c\u8f93\u51fa\u6e38\u620f\u80dc\u8d1f\u60c5\u51b5\uff1a</p> </li> <li> <p>\u82e5\u6240\u6709\u6ca1\u6709\u5730\u96f7\u7684\u65b9\u5757\u5747\u88ab\u63a2\u660e\uff0c\u8f93\u51fa\u4e00\u884c\uff1a<code>finish</code>\uff1b</p> </li> <li> <p>\u82e5\u8e29\u5230\u96f7\u800c\u7ed3\u675f\u6e38\u620f\uff0c\u8f93\u51fa\u4e00\u884c\uff1a<code>game over</code>\uff1b</p> </li> <li> <p>\u82e5\u56e0\u4e3a Quit \u800c\u7ed3\u675f\u6e38\u620f\uff0c\u8f93\u51fa\u4e00\u884c\uff1a<code>give up</code>\u3002</p> </li> <li>\u4e4b\u540e\uff0c\u8ba1\u7b97\u73a9\u5bb6\u4f7f\u7528\u7684\u884c\u52a8\u6b21\u6570 \\(total\\_step\\)\uff0c\u6bcf\u6b21\u6210\u529f\uff0f\u4e0d\u6210\u529f\u7684 Flag, Sweep, DSweep \u5747\u89c6\u4e3a\u4e00\u6b21\u884c\u52a8\uff0cQuit \u4e0d\u7b97\u4e00\u6b21\u884c\u52a8\uff0c\u8f93\u51fa\u4e00\u884c\uff1a<code>total step TOTAL_STEP</code>\uff0c\u5176\u4e2d <code>TOTAL_STEP</code> \u5e94\u8be5\u8f93\u51fa\u884c\u52a8\u6b21\u6570\u3002</li> </ol> <p>\u6ce8\u610f\uff1a\u8bf7\u7279\u522b\u6ce8\u610f\u5404\u9879\u8f93\u51fa\u7684\u62fc\u5199\u548c\u7a7a\u683c\uff0c\u5426\u5219\u5c06\u53ef\u80fd\u5bfc\u81f4\u7a0b\u5e8f\u9519\u8bef\u76f4\u81f3\u96f6\u5206\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#1","title":"\u6837\u4f8b1\u8f93\u5165","text":"<pre><code>3 3\n...\n..*\n...\nSweep 1 1\nDSweep 1 2\nFlag 1 3\nFlag 2 3\nDSweep 1 2\nSweep 1 3\nFlag 1 1\nDSweep 1 3\nFlag 1 3\nDSweep 1 2\nDSweep 1 2\nSweep 3 3\nQuit\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#1_1","title":"\u6837\u4f8b1\u8f93\u51fa","text":"<pre><code>6 cell(s) detected\n1 1 0\n1 2 1\n2 1 0\n2 2 1\n3 1 0\n3 2 1\nfailed\nsuccess\nsuccess\nfailed\nflagged\nswept\nnot swept\ncancelled\n1 cell(s) detected\n1 3 1\nno cell detected\n1 cell(s) detected\n3 3 1\nfinish\ntotal step 12\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#1_2","title":"\u6837\u4f8b1\u89e3\u91ca","text":"<p>\u7b2c\u4e00\u7ec4\u6570\u636e\u5c55\u793a\u4e86\u4e00\u4e2a\u5728\u7b80\u5355\u7684 \\(3\\times 3\\) \u68cb\u76d8\u4e0a\u8fdb\u884c\u7684\u6e38\u620f\u8fc7\u7a0b\uff0c\u6837\u4f8b\u8f93\u51fa\u4e2d\u5c55\u793a\u4e86\u4e0a\u6587\u63d0\u5230\u7684\u7edd\u5927\u90e8\u5206\u8f93\u51fa\u4fe1\u606f\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#2","title":"\u6837\u4f8b2","text":"<p>\u89c1\u9898\u76ee\u76ee\u5f55\u4e0b\u7684 2.in \u4e0e 2.ans\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#2_1","title":"\u6837\u4f8b2\u89e3\u91ca","text":"<p>\u7b2c\u4e8c\u7ec4\u6570\u636e\u5c55\u793a\u4e86\u4e00\u79cd\u56e0\u4e3a\u9519\u8bef\u7684 Flag \u64cd\u4f5c\u548c DSweep \u64cd\u4f5c\u800c\u5bfc\u81f4\u6e38\u620f\u5931\u8d25\u7684\u60c5\u51b5\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#3","title":"\u6837\u4f8b3","text":"<p>\u89c1\u9898\u76ee\u76ee\u5f55\u4e0b\u7684 3.in \u4e0e 3.ans\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#3_1","title":"\u6837\u4f8b3\u89e3\u91ca","text":"<p>\u7b2c\u4e09\u7ec4\u6570\u636e\u5c55\u793a\u4e86\u4e00\u79cd\u56e0\u4e3a Quit \u64cd\u4f5c\u800c\u7ed3\u675f\u6e38\u620f\u7684\u60c5\u51b5\uff0c\u6ce8\u610f\uff0c\u5f53\u6e38\u620f\u7ed3\u675f\u4e4b\u540e\uff0c\u4f60\u7684\u7a0b\u5e8f\u5e94\u8be5\u8f93\u51fa\u7ed3\u675f\u4fe1\u606f\uff0c\u5e76\u5ffd\u7565\u4e4b\u540e\u7684\u6240\u6709\u64cd\u4f5c\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/mine/#_4","title":"\u5b50\u4efb\u52a1","text":"<p>\u5171\u6709 \\(20\\) \u4e2a\u6d4b\u8bd5\u70b9\uff0c\u6bcf\u4e2a\u6d4b\u8bd5\u70b9\u6ee1\u5206\u4e3a \\(5\\) \u5206\u3002</p> <p>\u6211\u4eec\u4ee4 \\(n,m\\) \u8868\u793a\u68cb\u76d8\u7684\u89c4\u6a21\uff0c\\(q\\) \u8868\u793a\u8f93\u5165\u7684\u64cd\u4f5c\u6b21\u6570\uff0c\u6709\u4ee5\u4e0b\u7ea6\u5b9a\uff1a</p> \u6d4b\u8bd5\u70b9 \\(n\\) \\(m\\) \\(q\\) \u6027\u8d28 \\(1\\) ~ \\(2\\) \\(\\leq 10\\) \\(\\leq 10\\) \\(\\leq 60\\) A \\(3\\) ~ \\(4\\) \\(\\leq 10\\) \\(\\leq 10\\) \\(\\leq 60\\) B \\(5\\) ~ \\(6\\) \\(\\leq 10\\) \\(\\leq 10\\) \\(\\leq 60\\) \u65e0 \\(7\\) ~ \\(8\\) \\(=1\\) \\(\\leq 1000\\) \\(\\leq 1000\\) A \\(9\\) ~ \\(10\\) \\(=1\\) \\(\\leq 1000\\) \\(\\leq 1000\\) B \\(11\\) ~ \\(12\\) \\(=1\\) \\(\\leq 1000\\) \\(\\leq 1000\\) \u65e0 \\(13\\) ~ \\(14\\) \\(\\leq 300\\) \\(\\leq 300\\) \\(\\leq 8000\\) A \\(15\\) ~ \\(16\\) \\(\\leq 300\\) \\(\\leq 300\\) \\(\\leq 8000\\) B \\(17\\) ~ \\(19\\) \\(\\leq 300\\) \\(\\leq 300\\) \\(\\leq 8000\\) \u65e0 \\(20\\) \\(\\leq 1000\\) \\(\\leq 1000\\) \\(\\leq 60000\\) \u65e0 <p>\u6027\u8d28A\uff1a\u4fdd\u8bc1\u53ea\u6709 Sweep \u64cd\u4f5c\u548c Quit \u64cd\u4f5c\u3002</p> <p>\u6027\u8d28B\uff1a\u4fdd\u8bc1\u6ca1\u6709 DSweep \u64cd\u4f5c\u3002</p> <p>\u6ce8\u610f\uff1a\u5bf9\u4e8e\u89c4\u6a21\u8f83\u5927\u7684\u6570\u636e\uff0c\u8bf7\u4e0d\u8981\u4f7f\u7528\u8fc7\u4e8e\u7f13\u6162\u7684\u8f93\u51fa\u65b9\u5f0f\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/","title":"Polynomial","text":"<p>\u65f6\u95f4\u9650\u5236\uff1a 1 \u79d2 </p> <p>\u7a7a\u95f4\u9650\u5236\uff1a 512 MB</p> <p>\u76f8\u5173\u6587\u4ef6\uff1a \u9898\u76ee\u76ee\u5f55</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#_1","title":"\u95ee\u9898\u63cf\u8ff0","text":"<p>\u5c0fK\u6700\u8fd1\u521a\u521a\u4e60\u5f97\u4e86\u4e00\u79cd\u975e\u5e38\u9177\u70ab\u7684\u591a\u9879\u5f0f\u6c42\u548c\u6280\u5de7\uff0c\u53ef\u4ee5\u5bf9\u67d0\u51e0\u7c7b\u7279\u6b8a\u7684\u591a\u9879\u5f0f\u8fdb\u884c\u8fd0\u7b97\u3002</p> <p>\u975e\u5e38\u4e0d\u5e78\u7684\u662f\uff0c\u5c0fK\u53d1\u73b0\u8001\u5e08\u5728\u5e03\u7f6e\u4f5c\u4e1a\u65f6\u6284\u9519\u4e86\u6570\u636e\uff0c\u5bfc\u81f4\u4e00\u9053\u9898\u5e76\u4e0d\u80fd\u7528\u521a\u5b66\u7684\u65b9\u6cd5\u6765\u89e3\uff0c\u4e8e\u662f\u5e0c\u671b\u4f60\u80fd\u5e2e\u5fd9\u5199\u4e00\u4e2a\u7a0b\u5e8f\u8dd1\u4e00\u8dd1\u3002</p> <p>\u7ed9\u51fa\u4e00\u4e2a \\(m\\) \u9636\u591a\u9879\u5f0f\\(\\(f(x)=\\sum_{i=0}^mb_ix^i\\)\\)</p> <p>\u5bf9\u7ed9\u5b9a\u7684\u6b63\u6574\u6570 \\(a\\) \uff0c\u6c42\\(\\(S(n)=\\sum_{k=0}^na^kf(k)\\)\\)</p> <p>\u7531\u4e8e\u8fd9\u4e2a\u6570\u53ef\u80fd\u6bd4\u8f83\u5927\uff0c\u6240\u4ee5\u4f60\u53ea\u9700\u8ba1\u7b97 \\(S(n)\\) \u5bf9 \\(10^9+7\\) \u53d6\u6a21\u540e\u7684\u503c\uff08\u5373\u8ba1\u7b97\u9664\u4ee5 \\(10^9+7\\) \u540e\u7684\u4f59\u6570\uff09\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#_2","title":"\u8f93\u5165\u683c\u5f0f","text":"<p>\u4ece\u6807\u51c6\u8f93\u5165\u8bfb\u5165\u6570\u636e\u3002</p> <p>\u7b2c\u4e00\u884c\u5305\u542b\u4e09\u4e2a\u6574\u6570 \\(n,m,a\\)\u3002</p> <p>\u7b2c\u4e8c\u884c\u5305\u542b\\(m+1\\)\u4e2a\u6574\u6570\uff0c\\(b_0,b_1,\\dots,b_m\\) \u63cf\u8ff0\u7ed9\u5b9a\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u636e\uff0c\\(1\\leq a,b_i\\leq 10^9\\)\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#_3","title":"\u8f93\u51fa\u683c\u5f0f","text":"<p>\u8f93\u51fa\u5230\u6807\u51c6\u8f93\u51fa\u3002</p> <p>\u8f93\u51fa\u4e00\u884c\u4e00\u4e2a\u6570\uff0c\u8868\u793a \\(S(n)\\) \u5bf9 \\(10^9+7\\) \u53d6\u6a21\u540e\u7684\u7ed3\u679c\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#1","title":"\u6837\u4f8b1\u8f93\u5165","text":"<pre><code>5 2 3\n1 1 1\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#1_1","title":"\u6837\u4f8b1\u8f93\u51fa","text":"<pre><code>9658\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#1_2","title":"\u6837\u4f8b1\u89e3\u91ca","text":"<p>\\(f(x)=1+x+x^2\\)\uff0c\u6545 \\(f(0)=1,f(1)=3,f(2)=7,f(3)=13,f(4)=21,f(5)=31\\)\u3002</p> <p>\\(f(0)+3f(1)+9f(2)+27f(3)+81f(4)+243f(5)=1+3*3+9*7+27*13+81*21+243*31=9658\\)\u3002</p>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#2","title":"\u6837\u4f8b2\u8f93\u5165","text":"<pre><code>100 3 233\n1 2 3 4\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#2_1","title":"\u6837\u4f8b2\u8f93\u51fa","text":"<pre><code>994811687\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#3","title":"\u6837\u4f8b3\u8f93\u5165","text":"<pre><code>20170314 10 11037\n1 2 3 4 5 6 7 8 9 10 11\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#3_1","title":"\u6837\u4f8b3\u8f93\u51fa","text":"<pre><code>133604769\n</code></pre>"},{"location":"%E5%A4%8D%E4%B9%A0%E8%B5%84%E6%96%99/%E6%9C%BA%E8%80%83/2017/%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B/statements/tuoj/day1/polynomial/#_4","title":"\u5b50\u4efb\u52a1","text":"\u6d4b\u8bd5\u70b9 \\(n\\) \\(m\\) \\(a\\) \\(1\\) ~ \\(2\\) \\(\\leq 1000\\) \\(\\leq 10\\) \\(\\leq 10^9\\) \\(3\\) \\(\\leq 10^9\\) \\(=1\\) \\(=1\\) \\(4\\) \\(\\leq 10^9\\) \\(=2\\) \\(=1\\) \\(5\\) \\(\\leq 10^9\\) \\(=3\\) \\(\\leq 10^9\\) \\(6\\) \\(\\leq 10^9\\) \\(=5\\) \\(=1\\) \\(7\\) ~ \\(8\\) \\(\\leq 10^9\\) \\(\\leq 20\\) \\(=1\\) \\(9\\) \\(\\leq 10^9\\) \\(\\leq 50\\) \\(\\leq 10^9\\) \\(10\\) \\(\\leq 10^9\\) \\(\\leq 100\\) \\(\\leq 10^9\\)"},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/","title":"NLP \u77e5\u540d\u8001\u5e08\u5173\u7cfb\u56fe","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E4%BF%9D%E7%A0%94%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%AF%BC%E5%B8%88%E8%AE%BA%E6%96%87%E5%8F%91%E8%A1%A8%E6%83%85%E5%86%B5/","title":"\u4fdd\u7814\u5de5\u5177\u63a8\u8350 \u5feb\u901f\u67e5\u8be2\u5bfc\u5e08\u8bba\u6587\u53d1\u8868\u60c5\u51b5","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E4%BF%9D%E7%A0%94%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%AF%BC%E5%B8%88%E8%AE%BA%E6%96%87%E5%8F%91%E8%A1%A8%E6%83%85%E5%86%B5/#-","title":"\u4fdd\u7814\u5de5\u5177\u63a8\u8350 - \u5feb\u901f\u67e5\u8be2\u5bfc\u5e08\u8bba\u6587\u53d1\u8868\u60c5\u51b5","text":"<p>\u81f4\u8c22\uff1a \u611f\u8c22\u5218*\u708e\u5b66\u59d0\u5bf9\u672c\u4ed3\u5e93\u7684\u5927\u529b\u652f\u6301\uff01</p>"},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E4%BF%9D%E7%A0%94%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%AF%BC%E5%B8%88%E8%AE%BA%E6%96%87%E5%8F%91%E8%A1%A8%E6%83%85%E5%86%B5/#1","title":"1. \u5de5\u5177\u4f5c\u7528","text":"<p>\u5e2e\u52a9\u5b66\u5f1f\u5b66\u59b9\u6bd4\u8f83\u5feb\u5730\u770b\u8001\u5e08\u7684\u8bba\u6587\u53d1\u8868\u60c5\u51b5\uff0c\u81ea\u52a8\u6807\u6ce8\u5bfc\u5e08\u8bba\u6587\u7684CCFrank</p> <p>Chrome \u6269\u5c55\u7a0b\u5e8f\u3001Firefox \u548c Edge \u9644\u52a0\u7ec4\u4ef6\uff0c\u5728 dblp\u3001Google \u5b66\u672f\u3001Connected Papers \u548c Web of Science \u7684\u641c\u7d22\u7ed3\u679c\u4e2d\u663e\u793a\u4e2d\u56fd\u8ba1\u7b97\u673a\u5b66\u4f1a\u63a8\u8350\u7684\u56fd\u9645\u4f1a\u8bae\u548c\u671f\u520a\u6392\u540d\u3002</p>"},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E4%BF%9D%E7%A0%94%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%AF%BC%E5%B8%88%E8%AE%BA%E6%96%87%E5%8F%91%E8%A1%A8%E6%83%85%E5%86%B5/#2","title":"2. \u5de5\u5177\u4e0b\u8f7d","text":"<p>\u5f00\u6e90\u5730\u5740\uff1ahttps://github.com/WenyanLiu/CCFrank4dblp</p>"},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E4%BF%9D%E7%A0%94%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90-%E5%BF%AB%E9%80%9F%E6%9F%A5%E8%AF%A2%E5%AF%BC%E5%B8%88%E8%AE%BA%E6%96%87%E5%8F%91%E8%A1%A8%E6%83%85%E5%86%B5/#3","title":"3. \u5de5\u5177\u6548\u679c","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%9B%BD%E5%86%85NLPIRDATA%20MINING%20%E5%81%9A%E7%9A%84%E5%A5%BD%E7%9A%84%E8%80%81%E5%B8%88%E7%A7%91%E7%A0%94%E7%BB%84/","title":"\u56fd\u5185NLPIRDATA MINING \u505a\u7684\u597d\u7684\u8001\u5e08\u79d1\u7814\u7ec4","text":"<p>\u4f5c\u8005\uff1a\u533f\u540d\u7528\u6237 \u94fe\u63a5\uff1ahttps://www.zhihu.com/question/277960429/answer/1219474806 \u6765\u6e90\uff1a\u77e5\u4e4e \u8457\u4f5c\u6743\u5f52\u4f5c\u8005\u6240\u6709\u3002\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u8054\u7cfb\u4f5c\u8005\u83b7\u5f97\u6388\u6743\uff0c\u975e\u5546\u4e1a\u8f6c\u8f7d\u8bf7\u6ce8\u660e\u51fa\u5904\u3002</p>"},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%9B%BD%E5%86%85NLPIRDATA%20MINING%20%E5%81%9A%E7%9A%84%E5%A5%BD%E7%9A%84%E8%80%81%E5%B8%88%E7%A7%91%E7%A0%94%E7%BB%84/#nlpirdata-mining","title":"\u56fd\u5185NLP\\IR\\DATA MINING \u505a\u7684\u597d\u7684\u8001\u5e08\\\u79d1\u7814\u7ec4?","text":"<p>------------------------------------0\u6863--\u6e05\u5317-------------------------------</p> <p>\u6e05\u534e\u5927\u5b66\uff1a</p> <ol> <li>\u8ba1\u7b97\u673a\u7cfb\uff1a\u5510\u6770\uff0c\u5d14\u9e4f\uff0c\u5218\u77e5\u8fdc\uff0c\u9ec4\u6c11\u70c8\uff0c\u6731\u519b\uff0c\u5218\u6d0b\uff0c\u5218\u5955\u7fa4\uff0c\u5f20\u654f\uff0c\u674e\u6d93\u5b50\uff0c\u6768\u58eb\u5f3a\uff0c\u5b59\u8302\u677e\uff0c\u6731\u6587\u6b66\uff0c\u5f20\u94b9\uff0c\u6731\u5c0f\u71d5\uff0c\u9a6c\u5c11\u5e73\uff0c\u738b\u5efa\u52c7\uff0c\u674e\u56fd\u826f\uff1b</li> <li>\u81ea\u52a8\u5316\u7cfb\uff1a\u9ec4\u9ad8\uff0c\u5f20\u957f\u6c34\uff1b</li> <li>\u8f6f\u4ef6\u5b66\u9662\uff1a\u9f99\u660e\u76db\uff0c\u9ad8\u8dc3\uff0c\u738b\u5efa\u6c11\uff0c\u53f6\u6653\u4fca\uff1b</li> </ol> <p>\u5317\u4eac\u5927\u5b66\uff1a</p> <ol> <li>\u6570\u5b66\u5b66\u9662\uff1a\u5f20\u5fd7\u534e\uff0c\u6731\u5360\u661f\uff1b</li> <li>\u4fe1\u606f\u79d1\u5b66\u6280\u672f\u5b66\u9662\uff1a\u7a46\u4e9a\u4e1c\uff0c\u6797\u5b99\u8fb0\uff0c\u4e25\u777f\uff0c\u5b59\u6829\uff0c\u5218\u8b5e\u54f2\uff0c\u738b\u7acb\u5a01\uff0c\u6731\u677e\u7eaf\uff0c\u4e07\u5c0f\u519b\uff0c\u674e\u7d20\u5efa\uff0c\u5d14\u658c\uff0c\u6885\u5b8f\uff0c\u91d1\u829d\uff0c\u5f20\u94ed\uff0c\u9ad8\u6587\uff0c\u5f20\u5927\u5e86\uff0c\u738b\u539a\u5cf0\uff0c\u5e38\u5b9d\u5b9d\uff0c\u7a57\u5fd7\u65b9\uff1b</li> </ol> <p>-----------------------------------0.5\u6863--\u4e2d\u56fd\u79d1\u5b66\u9662-------------------------</p> <p>\u4e2d\u79d1\u9662\u8ba1\u7b97\u6240\uff1a \u7a0b\u5b66\u65d7\uff0c\u4f55\u6e05\uff0c\u7f57\u5e73\uff0c\u6556\u7fd4\uff0c\u90ed\u5609\u4e30\uff0c\u6c88\u534e\u4f1f\uff0c\u51af\u6d0b\uff0c\u5c71\u4e16\u5149\uff0c\u5170\u8273\u8273\uff0c\u5e84\u798f\u632f\uff0c\u9648\u7199\u9716\uff0c\u738b\u745e\u5e73\uff1b</p> <p>\u4e2d\u79d1\u9662\u81ea\u52a8\u5316\u6240\uff1a\u8c2d\u94c1\u725b\uff0c\u5f90\u6ce2\uff0c\u5218\u6210\u6797\uff0c\u5434\u4e66\uff0c\u738b\u4eae\uff0c\u5f20\u5146\u7fd4\uff0c\u7530\u6377\uff0c\u5218\u5eb7\uff0c\u5f20\u5bb6\u4fca\uff0c\u8d6b\u7136\uff0c\u5f90\u5e38\u80dc\uff0c\u65b9\u5168\uff0c\u5b97\u6210\u5e86\uff1b</p> <p>\u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240\uff1a\u5b59\u4e50\uff0c\u97e9\u5148\u57f9\uff1b</p> <p>\u4e2d\u79d1\u9662\u6df1\u5733\u5148\u8fdb\u9662\uff1a\u6768\u654f\uff1b</p> <p>-----------------------------------1\u6863--\u534e\u4e1c\u4e94\u6821-----------------------------</p> <p>\u590d\u65e6\u5927\u5b66\uff1a</p> <ol> <li>\u8ba1\u7b97\u673a\u5b66\u9662\uff1a\u90b1\u9521\u9e4f\uff0c\u5f20\u5947\uff0c\u9ec4\u8431\u83c1\uff0c\u738b\u6653\u9633\uff0c\u8096\u4ef0\u534e\uff0c\u5468\u6c34\u5e9a\uff0c\u859b\u5411\u9633\uff0c\u59dc\u80b2\u521a\uff1b</li> <li>\u5927\u6570\u636e\u5b66\u9662\uff1a\u9b4f\u5fe0\u94b0\uff0c\u4ed8\u5f66\u4f1f\uff1b</li> </ol> <p>\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66\uff1a\u5f20\u4f1f\u6960\uff0c\u5362\u7b56\u543e\uff0c\u6797\u6d32\u6c49\uff0c\u5f20\u62f3\u77f3\uff0c\u4e25\u9a8f\u9a70\uff0c\u8d75\u6d77\uff0c\u4fde\u51ef\uff0c\u4fde\u52c7\uff1b</p> <p>\u6d59\u6c5f\u5927\u5b66\uff1a\u8521\u767b\uff0c\u6768\u6d0b\uff0c\u8d75\u6d32\uff0c\u51b5\u7428\uff0c\u6f58\u7eb2\uff0c\u6731\u5efa\u79d1\uff0c\u5434\u671d\u6656\uff0c\u4f55\u6653\u98de\uff0c\u9ad8\u4e91\u541b\uff1b</p> <p>\u4e2d\u79d1\u5927\uff1a</p> <ol> <li>\u4fe1\u606f\u5b66\u9662\uff08\u542b\u5927\u6570\u636e\u5b66\u9662\uff09\uff1a\u4f55\u5411\u5357\uff0c\u5f20\u5929\u67f1\uff0c\u738b\u6770\uff0c\u5218\u4e1c\uff0c\u67e5\u6b63\u519b\uff0c\u5434\u67ab\uff0c\u674e\u536b\u5e73\uff0c\u674e\u539a\u5f3a\uff0c\u9648\u96ea\u9526\uff1b</li> <li>\u8ba1\u7b97\u673a\u5b66\u9662\uff08\u542b\u5927\u6570\u636e\u5b66\u9662\uff09\uff1a\u5218\u6dc7\uff0c\u8fde\u5fb7\u5bcc\uff0c\u5f90\u6797\u8389\uff0c\u5b59\u5e7f\u4e2d\uff0c\u5f90\u7ae5\uff0c\u9648\u6069\u7ea2\uff0c\u9648\u5c0f\u5e73\uff1b</li> </ol> <p>\u5357\u4eac\u5927\u5b66\uff1a\u738b\u5229\u6c11\uff0c\u94b1\u8d85\uff0c\u9ec4\u4e66\u5251\uff0c\u5468\u5fd7\u534e\uff0c\u4fde\u6768\uff0c\u674e\u6b66\u519b\uff0c\u9ad8\u9633\uff0c\u5f20\u5229\u519b\uff0c\u9ece\u94ed\uff0c\u674e\u5b87\u5cf0\uff0c\u6234\u65b0\u5b87\uff1b</p> <p>-----------------------------------2\u6863--\u5176\u4ed6\u53cc\u4e00\u6d41A,B\u7c7b------------------------------</p> <p>\u4e2d\u56fd\u4eba\u6c11\u5927\u5b66\uff1a\u6587\u7ee7\u8363\uff0c\u675c\u5c0f\u52c7\uff0c\u5f90\u541b\uff0c\u8d75\u946b\uff0c\u91d1\u7434\uff0c\u7aa6\u5fd7\u6210\uff0c\u5f20\u9759\uff0c\u9b4f\u54f2\u5dcd\uff0c\u82cf\u51b0\uff0c\u5218\u52c7\uff0c\u9648\u65ed\uff0c\u80e1\u8fea\uff0c\u6bdb\u4f73\u6615\uff0c\u6c88\u851a\u7136\uff0c\u5b8b\u777f\u534e\uff1b</p> <p>\u54c8\u5de5\u5927\uff1a\u5f20\u4f1f\u7537\uff0c\u674e\u751f\uff0c\u8d75\u94c1\u519b\uff0c\u5218\u633a\uff0c\u738b\u6d77\u5cf0\uff0c\u79e6\u5175\uff0c\u8f66\u4e07\u7fd4\uff0c\u5173\u6bc5 \uff0c\u9648\u96e8\u65f6\uff1b</p> <p>\u54c8\u5de5\u5927\u6df1\u5733\uff1a\u5f90\u777f\u5cf0\uff0c\u674e\u65ed\u6d9b\uff0c\u5f90\u589e\u6797\uff0c\u5f20\u6b63\uff1b</p> <p>\u5317\u822a\uff1a\u674e\u821f\u519b\uff0c\u7ae5\u548f\u6615\uff0c\u738b\u9759\u8fdc\uff0c\u53f2\u632f\u5a01\uff0c\u5218\u5072\uff0c\u8bb8\u53ef\uff0c\u5f20\u65e5\u5d07\uff1b</p> <p>\u4e2d\u5c71\u5927\u5b66\uff1a\u6797\u501e\uff0c\u51cc\u9752\uff0c\u738b\u660c\u680b\uff0c\u6881\u4e0a\u677e\uff0c\u6881\u5c0f\u4e39\uff0c\u90d1\u4f1f\u8bd7\uff0c\u674e\u51a0\u5f6c\uff1b</p> <p>\u5357\u5f00\u5927\u5b66\uff1a\u6c88\u73ae\uff0c\u7a0b\u660e\u660e\uff0c\u6768\u5de8\u5cf0\uff1b</p> <p>\u5929\u6d25\u5927\u5b66\uff1a\u5f20\u9e4f\uff0c\u5f20\u6885\u5c71\uff0c\u718a\u5f97\u610f , \u5f20\u957f\u9752\uff1b</p> <p>\u5317\u4eac\u7406\u5de5\uff1a\u6c88\u5efa\u51b0\uff0c\u4ed8\u83b9\uff0c\u9ec4\u6cb3\u71d5\uff0c\u738b\u56fd\u4ec1\uff0c\u8f9b\u6b23\uff0c\u793c\u6b23\uff0c\u8d3e\u4e91\u5f97\uff0c\u5434\u5fc3\u7b71\uff1b</p> <p>\u4e1c\u5357\u5927\u5b66\uff1a\u6f06\u6842\u6797\uff0c\u803f\u65b0\uff0c\u5f20\u654f\u7075\uff0c\u5468\u5fb7\u5b87\uff0c\u738b\u840c\uff0c\u5434\u5dcd\u709c\uff1b</p> <p>\u6b66\u6c49\u5927\u5b66\uff1a\u674e\u6668\u4eae\uff0c\u59ec\u4e1c\u9e3f\uff0c\u5f20\u4e50\u98de\uff1b</p> <p>\u534e\u4e2d\u79d1\u5927\uff1a\u9b4f\u5dcd\uff0c\u91d1\u6d77\uff0c\u767d\u7fd4\uff1b</p> <p>\u7535\u5b50\u79d1\u5927\uff1a\u90d1\u51ef\uff0c\u7533\u6052\u6d9b\uff0c\u6bb5\u7acb\u65b0\uff0c\u6768\u9633\uff0c\u90b5\u6770\uff0c\u9ad8\u8054\u4e3d\uff0c\u5b8b\u4e95\u5bbd\uff0c\u6c88\u590d\u6c11\uff0c\u5468\u6d9b\uff1b</p> <p>\u534e\u5357\u7406\u5de5\uff1a\u91d1\u8fde\u6587\uff0c\u8d3e\u594e\uff1b</p> <p>\u897f\u5317\u5de5\u4e1a\u5927\u5b66\uff1a\u674e\u5b66\u9f99\uff0c\u8042\u98de\u5e73\uff0c\u5c1a\u5b66\u7fa4\uff0c\u590f\u52c7\uff0c\u8c22\u78ca\uff0c\u738b\u7426\uff1b</p> <p>\u5c71\u4e1c\u5927\u5b66\uff1a\u9a6c\u519b\uff0c\u8042\u793c\u5f3a\uff0c\u5b8b\u96ea\u840c\uff0c\u4efb\u662d\u6625\uff0c\u7518\u751c\uff0c\u5c39\u5efa\u534e\uff0c\u5434\u5efa\u9f99\uff0c\u4f59\u56fd\u5148\uff1b</p> <p>\u53a6\u95e8\u5927\u5b66\uff1a\u7eaa\u8363\u5d58\uff0c\u674e\u8f89\uff1b</p> <p>\u534e\u4e1c\u5e08\u8303\uff1a\u5468\u50b2\u82f1\uff0c\u6797\u5b66\u6c11\uff0c\u5f20\u4f1f\uff0c\u5434\u82d1\u658c\uff1b</p> <p>\u5927\u8fde\u7406\u5de5\u5927\u5b66\uff1a\u5362\u6e56\u5ddd\uff0c\u6797\u9e3f\u98de\uff1b</p> <p>\u5409\u6797\u5927\u5b66\uff1a\u5e38\u6bc5\uff1b</p> <p>\u4e1c\u5317\u5927\u5b66\uff1a\u6731\u9756\u6ce2\uff0c\u8096\u6850\uff0c\u4efb\u98de\u4eae\uff0c\u90ed\u8d35\u51b0\uff1b</p> <p>-------------------------------3\u6863--\u4e00\u6d41\u5b66\u79d1\u53ca\u5176\u4ed6---------------------------------</p> <p>\u5317\u4eac\u90ae\u7535\u5927\u5b66\uff1a\u77f3\u5ddd\uff0c\u767d\u5a77\uff0c\u738b\u5578\uff0c\u738b\u9e4f\u98de\uff0c\u6768\u6210\uff0c\u80e1\u7433\u6885\uff1b</p> <p>\u5317\u4eac\u4ea4\u901a\u5927\u5b66\uff1a\u4e8e\u5251\uff0c\u6851\u57fa\u97ec\uff1b</p> <p>\u5357\u4eac\u7406\u5de5\u5927\u5b66\uff1a\u6768\u5065\uff0c\u5510\u91d1\u8f89\uff0c\u5bab\u8fb0\uff0c\u590f\u777f\uff0c\u674e\u6cfd\u8d85\uff0c\u6f58\u91d1\u5c71\uff0c\u9b4f\u79c0\u53c2\uff1b</p> <p>\u5357\u822a\uff1a\u9648\u677e\u707f\uff0c\u9ec4\u5723\u541b\uff1b</p> <p>\u897f\u7535\uff1a\u7ba1\u5b50\u7389\uff0c\u674e\u8f89\uff1b</p> <p>\u82cf\u5dde\u5927\u5b66\uff1a\u8bb8\u4f73\u6377\uff0c\u8d75\u9e4f\u9e4f\uff0c\u5218\u51a0\u5cf0\uff0c\u674e\u51e1\u957f\uff0c\u5f20\u8389\uff0c\u6731\u5de7\u660e\uff0c\u5f20\u6c11\uff0c\u5468\u56fd\u680b\uff1b</p> <p>\u5408\u80a5\u5de5\u4e1a\u5927\u5b66\uff1a\u5434\u4fe1\u4e1c\uff0c\u6c6a\u840c\uff0c\u6d2a\u65e5\u660c\uff0c\u5434\u4e50\uff0c\u738b\u6768\uff0c\u5b59\u6653\uff1b</p> <p>\u5357\u4eac\u90ae\u7535\u5927\u5b66\uff1a\u9c8d\u79c9\u5764\uff1b</p> <p>\u5357\u65b9\u79d1\u6280\u5927\u5b66\uff1a\u5f20\u5b87\uff1b</p> <p>\u4e0a\u6d77\u79d1\u6280\u5927\u5b66\uff1a\u5c60\u53ef\u4f1f\uff1b</p> <p>\u897f\u6e56\u5927\u5b66\uff1a\u674e\u5b50\u9752\uff0c\u5f20\u5cb3\uff0c\u84dd\u632f\u5fe0\uff1b</p> <p>\u6df1\u5733\u5927\u5b66\uff1a\u6f58\u5fae\u79d1\uff1b</p> <p>-------------------------------\u5176\u4ed6--\u6e2f\u6fb3\u53f0\u5730\u533a\u9ad8\u6821---------------------------------------</p> <p>\u9999\u6e2f\u4e2d\u6587\u5927\u5b66\uff1a\u6c64\u6653\u9e25\uff0c\u738b\u6653\u521a\uff0c\u6797\u8fbe\u534e\uff0c\u5468\u535a\u78ca\uff0c\u6797\u4f1f\uff08Wai Lam\uff09\uff0c\u9ec4\u9526\u8f89\uff08WONG Kam Fai)\uff0cLYU Rung Tsong Michael\uff08\u5415\u8363\u806a\uff09\uff0c KING Kuo Chin Irwin\uff08\u91d1\u56fd\u5e86\uff09\uff0c\u8d3e\u4f73\u4e9a\uff0c\u9676\u5b87\u98de\uff0c\u7a0b\u9e3f\uff0c\u4e8e\u65ed\uff0c James Cheng\uff08\u90d1\u5c1a\u7b56\uff09</p> <p>\u9999\u6e2f\u79d1\u6280\u5927\u5b66\uff1a\u5b8b\u9633\u79cb\uff0c\u6768\u5f3a\uff0c\u6768\u74de\u4ec1 (Dit-Yan Yeung) \uff0c\u5f20\u6f7c\uff0c\u9648\u96f7\uff0c\u7f57\u743c\uff0c\u9648\u542f\u5cf0</p> <p>\u9999\u6e2f\u5927\u5b66\uff1a\u7f57\u5e73\uff0c\u738b\u6587\u5e73</p> <p>\u9999\u6e2f\u57ce\u5e02\u5927\u5b66\uff1a\u5f20\u9752\u5bcc\uff0c\u5468\u5fd7\u8d24\uff08CHOW, Chi Yin Ted\uff09\uff0c\u738b\u8bd7\u6dc7\uff0c\u6768\u79b9</p> <p>\u9999\u6e2f\u7406\u5de5\u5927\u5b66\uff1a\u9646\u52e4\uff0c\u5434\u6653\u654f\uff0c\u674e\u6587\u6770\uff0c\u674e\u83c1</p> <p>\u9999\u6e2f\u6d78\u4f1a\u5927\u5b66\uff1aPong C Yuen (\u962e\u90a6\u5fd7)\uff0cCHEUNG, William Kwok Wai\uff08\u5f20\u56fd\u5a01\uff09\uff0c\u9648\u9ece\uff0c\u9a6c\u6676</p> <p>\u6fb3\u95e8\u5927\u5b66\uff1a\u9ec4\u8f89\uff0c\u9648\u4fca\u9f99\uff0c\u5de9\u5fd7\u56fd</p> <p>\uff08\u53f0\u6e7e\u5730\u533a\uff1a\u5f85\u8865\u5145\uff09</p> <p>\u6b22\u8fce\u5404\u4f4d\u4f17\u7b79\u8d21\u732e\u7b54\u6848\uff08\u5b66\u672f\u5f3a\uff0c\u4eba\u54c1\u597d\u7684\u5bfc\u5e08\uff09\uff0c\u9020\u798f\u4fdd\u7814\u8003\u7814\u5b66\u5b50\u2026\u2026</p>"},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90%E7%BD%91%E7%8E%B0%E5%AD%98%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC/","title":"\u5bfc\u5e08\u63a8\u8350\u7f51\u73b0\u5b58\u53ef\u7528\u7248\u672c\uff1a","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90%E7%BD%91%E7%8E%B0%E5%AD%98%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC/#ratemysupervisor","title":"RateMySupervisor","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90%E7%BD%91%E7%8E%B0%E5%AD%98%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC/#_2","title":"\u7814\u63a7","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90%E7%BD%91%E7%8E%B0%E5%AD%98%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC/#_3","title":"\u9879\u76ee\u5730\u5740\uff08\u6570\u636e\u4ecb\u7ecd\u4e0e\u6295\u7a3f\u8bf4\u660e\uff09","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90%E7%BD%91%E7%8E%B0%E5%AD%98%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC/#app","title":"\u5b89\u5353APP\u4e0b\u8f7d","text":""},{"location":"%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90/%E5%AF%BC%E5%B8%88%E6%8E%A8%E8%8D%90%E7%BD%91%E7%8E%B0%E5%AD%98%E5%8F%AF%E7%94%A8%E7%89%88%E6%9C%AC/#xlsx","title":"xlsx \u683c\u5f0f\u5907\u4efd","text":""},{"location":"%E6%96%87%E4%B9%A6%E5%87%86%E5%A4%87/","title":"\u4fdd\u7814\u6587\u4e66\u51c6\u5907","text":"<ul> <li> <p>\u6478\u9c7cing\u7684\u4fdd\u7814/\u8003\u7814\u6587\u4e66\u6a21\u677f\uff08\u8d85\u5168\uff09\uff1a\u7b80\u5386\u3001\u4e2a\u4eba\u9648\u8ff0\u3001\u9762\u8bd5PPT\u3001\u63a8\u8350\u4fe1\u3001\u5957\u78c1\u4fe1\u3001\u9e3d\u4fe1\u3001\u5404\u79cd\u8bc1\u660e\u6750\u6599\uff0c\u90fd\u662f\u81ea\u5df1\u4fdd\u7814\u65f6\u7528\u7684\u5f88\u5b9e\u7528\u3002</p> </li> <li> <p>\u672c\u6587\u4ef6\u5939\u63d0\u4f9b\u7b80\u5386\u6a21\u677f\uff0c\u5728https://cn.overleaf.com/ \u4e0a\u521b\u5efa\u65b0\u9879\u76ee\u5bfc\u5165\"\u7b80\u5386\u6a21\u677f.zip\"\u6587\u4ef6\uff0c\u5e76\u9009\u62e9\u7528XeLaTeX\u7f16\u8bd1\u540e\u5373\u53ef\u4f7f\u7528\u3002</p> </li> </ul>"},{"location":"%E6%96%87%E4%B9%A6%E5%87%86%E5%A4%87/%E5%A5%97%E7%A3%81%E4%BF%A1/","title":"\u5957\u78c1\u4fe1\u6a21\u677f","text":""},{"location":"%E8%A7%86%E9%A2%91%E8%B5%84%E6%96%99/","title":"\u89c6\u9891\u8d44\u6599","text":""},{"location":"%E8%A7%86%E9%A2%91%E8%B5%84%E6%96%99/#_2","title":"\u4fdd\u7814\u51c6\u5907","text":"<ul> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u51b2\u523a\u7cfb\u52171-\u6587\u4e66\u51c6\u5907</li> <li> <p>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u51b2\u523a\u7cfb\u52172-\u9762\u8bd5\u51c6\u5907</p> </li> <li> <p>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u51b2\u523a\u7cfb\u52173-\u79d1\u7814\u601d\u8003</p> </li> </ul>"},{"location":"%E8%A7%86%E9%A2%91%E8%B5%84%E6%96%99/#_3","title":"\u4fdd\u7814\u5b66\u6821\u4e13\u9898\u8bb2\u5ea7","text":"<ul> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u9662\u6821\u4e13\u9898\u8bb2\u5ea71-\u6e05\u534e\u5927\u5b66</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u9662\u6821\u4e13\u9898\u8bb2\u5ea72-\u5317\u4eac\u5927\u5b66</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u9662\u6821\u4e13\u9898\u8bb2\u5ea73-\u4e2d\u56fd\u79d1\u5b66\u9662\u5927\u5b66</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u9662\u6821\u4e13\u9898\u8bb2\u5ea74-\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66&amp;\u590d\u65e6\u5927\u5b6620210515</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u9662\u6821\u4e13\u9898\u8bb2\u5ea75-\u5357\u4eac\u5927\u5b66&amp;\u6d59\u6c5f\u5927\u5b66&amp;\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66\uff08\u5357\u5927\u5728\u6700\u540e\u7684\u5f69\u86cb\u91cc\u9762\uff09</li> </ul>"},{"location":"%E8%A7%86%E9%A2%91%E8%B5%84%E6%96%99/#_4","title":"\u4fdd\u7814\u7b54\u7591\u8bb2\u5ea7","text":"<ul> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u7b2c\u4e00\u6b21\u7b54\u7591\u8bb2\u5ea720210131</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u7b2c\u4e8c\u6b21\u7b54\u7591\u76f4\u64ad20210209</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u7b2c\u4e09\u6b21\u7b54\u7591\u76f4\u64ad20210221</li> <li>@\u58a8\u4e91\u6ca7\u7684\u8ba1\u7b97\u673a\u4fdd\u7814\u4ea4\u6d41\u7fa4\u7b2c\u56db\u6b21\u7b54\u7591\u76f4\u64ad20210304</li> </ul>"},{"location":"%E9%99%A2%E6%A0%A1%E8%A7%A3%E6%9E%90/","title":"\u9662\u6821COM\u6982\u5ff5","text":"<p><code>com</code> \u5373 <code>Committee</code> \u7684\u7f29\u5199\uff0c\u76f4\u8bd1\u4e3a\u201c\u62db\u751f\u59d4\u201d\u3002 \u5b66\u9662\u662f\u57fa\u672c\u7684\u62db\u751f\u5355\u4f4d\uff0c\u62a5\u540d\u901a\u77e5\u3001\u5177\u4f53\u5b89\u6392\u3001\u62df\u5f55\u53d6\u540d\u5355\u7b49\u7531\u5b66\u9662\u5bf9\u5916\u53d1\u5e03\u3002\u5b66\u9662\u5185\u4e0b\u8bbe\u62db\u751f\u5c0f\u7ec4\uff0c\u7edf\u4e00\u7ec4\u7ec7\u7684\u7b14\u8bd5/\u673a\u8bd5/\u9762\u8bd5\u3002 <code>\u5f3acom</code> \u548c <code>\u5f31com</code> \u7528\u4e8e\u8861\u91cf\u5b66\u9662\u76f8\u5bf9\u4e8e\u5bfc\u5e08/\u8bfe\u9898\u7ec4\u5728\u62db\u751f\u8fc7\u7a0b\u4e2d\u8bdd\u8bed\u6743\u7684\u76f8\u5bf9\u5927\u5c0f\u3002</p> <ul> <li> <p>\u5bf9\u4e8e <code>\u5f3acom</code> \u5b66\u9662\uff0c\u9700\u8981\u901a\u8fc7\u5b66\u9662\u7edf\u4e00\u7ec4\u7ec7\u7684\u8003\u6838\uff0c\u901a\u8fc7\u540e\u624d\u80fd\u4e0e\u5bfc\u5e08\u8fdb\u884c\u53cc\u5411\u9009\u62e9\uff0c\u5bfc\u5e08\u7684\u610f\u613f\u57fa\u672c\u4e0d\u5f71\u54cd\u5b66\u9662\u7684\u8003\u6838\u7ed3\u679c\uff1b</p> </li> <li> <p>\u5bf9\u4e8e <code>\u5f31com</code> \u5b66\u9662\uff0c\u9700\u8981\u63d0\u524d\u8054\u7cfb\u8001\u5e08\uff0c\u901a\u8fc7\u63d0\u524d\u9762\u8bd5\u62ff\u5230 <code>\u53e3\u5934offer</code>\uff0c\u5b66\u9662\u7684\u8003\u6838\u73af\u8282\u57fa\u672c\u4e0d\u5f71\u54cd\u5bfc\u5e08\u7684\u51b3\u5b9a\u3002</p> </li> </ul> <p>\u4ece\u8003\u6838\u5185\u5bb9\u6765\u8bb2\uff0c<code>\u5f3acom</code> \u7684\u5b66\u9662\u8003\u6838\u5185\u5bb9\u4fa7\u91cd\u4e8e\u82f1\u8bed\u3001\u6570\u5b66\u3001\u8ba1\u7b97\u673a\u7b49\u57fa\u7840\u77e5\u8bc6\uff1b<code>\u5f31com</code> \u7684\u5bfc\u5e08\u63d0\u524d\u8003\u6838\u5927\u591a\u66f4\u9488\u5bf9\u8bfe\u9898\u7ec4\u7684\u9700\u6c42\uff0c\u4fa7\u7740\u4e8e\u7b80\u5386\u4e0a\u7684\u79d1\u7814\u7ecf\u5386\u548c\u76f8\u5173\u9886\u57df\u7684\u57fa\u7840\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c<code>com</code> \u4e0e\u62db\u751f\u7c7b\u578b\u6709\u5173\uff0c\u540c\u4e00\u5b66\u9662\u5bf9\u4e8e\u7855\u58eb/\u535a\u58eb\u7684 <code>com</code> \u53ef\u80fd\u5b58\u5728\u5dee\u5f02\uff0c\u4f8b\u5982\u4e00\u4e9b\u5b66\u9662\u5bf9\u4e8e\u7855\u58eb\u662f <code>\u5f3acom</code> \u800c\u5bf9\u4e8e\u535a\u58eb\u662f <code>\u5f31com</code>\u3002</p>"},{"location":"%E9%99%A2%E6%A0%A1%E8%A7%A3%E6%9E%90/#com_1","title":"\u9662\u6821COM\u6982\u5ff5","text":"<p>\u5f3aCOM\u9662\u6821:</p> \u9662\u6821 com\u5f3a\u5f31 \u6e05\u534e\u8f6f\u4ef6 \u5f3acom* \u5317\u5927\u8f6f\u5fae \u5f3acom \u4e2d\u79d1\u9662\u81ea\u52a8\u5316\u6240 \u5f3acom \u4e0a\u4ea4\u8ba1\u7b97\u673a\u7855\u58eb \u5f3acom \u590d\u65e6\u8ba1\u7b97\u673a \u5f3acom \u5357\u5927\u8ba1\u7b97\u673a \u5f3acom \u5357\u5927\u4eba\u5de5\u667a\u80fd \u5f3acom \u4eba\u5927\u9ad8\u74f4 \u5f3acom \u4eba\u5927\u4fe1\u606f \u5f3acom \u5317\u822a\u8ba1\u7b97\u673a \u5f3acom \u54c8\u5de5\u5927\u8ba1\u7b97\u673a \u5f3acom \u5929\u5927\u667a\u7b97 \u5f3acom \u5357\u5f00\u8f6f\u9662 \u5f3acom \u53a6\u5927\u8ba1\u7b97\u673a \u5f3acom \u5ddd\u5927\u8ba1\u7b97\u673a \u5f3acom \u4e2d\u79d1\u5927\u8ba1\u7b97\u673a \u5f3acom* \u4e1c\u5357\u8ba1\u7b97\u673a \u5f3acom* <p>\u6e05\u534e*: \u5982\u679c\u6d89\u53ca\u4e0a\u673a\u8003\u6838\uff0c\u5fc5\u987b\u901a\u8fc7\u4e0a\u673a\u8003\u8bd5</p> <p>\u4e2d\u79d1\u5927\u8ba1\u7b97\u673a*\uff1a\u5bfc\u5e08\u53ef\u4ee5\u63a8\u8350\u5165\u8425\uff0c\u4f46\u662f\u4ecd\u9700\u8981\u901a\u8fc7\u5b66\u6821\u9762\u8bd5\u62ff\u5230\u4f18\u8425\u3002</p> <p>\u4e1c\u5357\u8ba1\u7b97\u673a*\uff1a\u5fc5\u987b\u5148\u9676\u74f7\u62ff\u5230\u5bfc\u5e08\u63a8\u8350\u4fe1\uff0c\u624d\u80fd\u5165\u8425\u53c2\u52a0\u5b66\u9662\u8003\u6838\u3002</p> <p>\u5f31COM\u9662\u6821:</p> \u9662\u6821 com\u5f3a\u5f31 \u6e05\u534e\u53c9\u9662 \u5f31com* \u5317\u5927\u53c9\u9662 \u5f31com \u5317\u5927\u8ba1\u7b97\u673a \u5f31com \u5317\u5927\u667a\u80fd \u5f31com \u4e2d\u79d1\u9662\u8ba1\u7b97\u6240 \u5f31com \u4e2d\u79d1\u9662\u8f6f\u4ef6\u6240 \u5f31com \u4e0a\u4ea4\u8ba1\u7b97\u673a\u76f4\u535a \u5f31com \u6d59\u5927\u8ba1\u7b97\u673a\u76f4\u535a \u5f31com \u5357\u5f00\u8ba1\u7b97\u673a \u5f31com \u4e0a\u79d1\u5927\u8ba1\u7b97\u673a \u5f31com \u5317\u90ae\u8ba1\u7b97\u673a \u5f31com \u897f\u7535AI \u5f31com \u7535\u5b50\u79d1\u5927\u8ba1\u7b97\u673a \u5f31com* <p>\u6e05\u534e*: \u5982\u679c\u6d89\u53ca\u4e0a\u673a\u8003\u6838\uff0c\u5fc5\u987b\u901a\u8fc7\u4e0a\u673a\u8003\u8bd5</p> <p>\u7535\u5b50\u79d1\u5927*\uff1a22\u5e74\u56e0\u5bfc\u5e08\u62db\u751f\u8d85\u6807\uff0c\u5b66\u9662\u7ec4\u7ec7\u9762\u8bd5\u5237\u6389\u90e8\u5206\u5b66\u751f\u3002</p>"}]}